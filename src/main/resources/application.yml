server:
  port: 9000


spring:


  task:
    execution:
      thread-name-prefix: lob-service-task-executor-
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000

  threads:
    virtual:
      enabled: true

  jpa:
    properties:
      org:
        hibernate:
          envers:
            audit_table_suffix: _AUD
    open-in-view: false
#    show-sql: true

  sql:
    init:
      mode: never
      #schema-locations: classpath:db/schema.sql

  datasource:
    name: ${DB_NAME:lob_service}
    url: ${DB_URL:jdbc:postgresql://localhost:5432/postgres?currentSchema=lob_service}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: ${DB_DRIVER_CLASS_NAME:org.postgresql.Driver}

    hikari:
      minimum-idle: ${DB_MIN_IDLE:2}
      maximum-pool-size: ${DB_MAX_POOL_SIZE:10}
      idle-timeout: ${DB_IDLE_TIMEOUT:30000}
      schema: ${DB_SCHEMA:lob_service}
      #auto-commit: ${DB_AUTO_COMMIT:false}

    jpa:
      database-platform: ${DB_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
      hibernate:
        ddl-auto: none
        show_sql: ${JPA_SHOW_SQL:false}

  web:
    resources:
      add-mappings: false
    # disable static content handling
    spring.web.resources.add-mappings: false
    spring.mvc.throw-exception-if-no-handler-found: true
    # force charset in request and responses
    servlet:
      encoding:
        force: true

    exposure:
      include: ${WEB_EXPOSURE_INCLUDE:health,info,prometheus,metrics,flyway,applicationmodules}

  artemis:
    embedded:
      topics=target: target

  main:
    allow-bean-definition-overriding: true

  health:
    enabled: ${HEALTH_ENABLED:true}

  endpoint:
    health:
      show-details: ${MANAGEMENT_ENDPOINT_SHOW_DETAILS:always}

  modulith:
    events:
      externalization:
        enabled: true

    jdbc:
      schema-initialization:
        enabled: true

    republish-outstanding-events-on-restart: true

lob:
  cors:
    allowed:
      origins: ${LOB_CORS_ALLOWED_ORIGINS:http://localhost:3000}
  dispatching:
    strategy:
      type: ${LOB_DISPATCHING_STRATEGY:DELAYED}

  netsuite:
    financial:
      period:
        source: EXPLICIT

    client:
      realm: ${NETSUITE_ALTAVIA_ADAPTER_CLIENT_REALM}
      oauth_nonce: ${NETSUITE_ALTAVIA_ADAPTER_CLIENT_OAUTH_NONCE}
      consumer_key: ${NETSUITE_ALTAVIA_ADAPTER_CLIENT_CONSUMER_KEY}
      token_secret: ${NETSUITE_ALTAVIA_ADAPTER_CLIENT_TOKEN_SECRET}
      consumer_secret: ${NETSUITE_ALTAVIA_ADAPTER_CLIENT_CONSUMER_SECRET}
      token: ${NETSUITE_ALTAVIA_ADAPTER_CLIENT_TOKEN}
      url: ${NETSUITE_ALTAVIA_ADAPTER_CLIENT_URL}

  l1:
    transaction:
      metadata:
        label: "22222"

  blockfrost:
    url: ""
    api:
      key: ""
