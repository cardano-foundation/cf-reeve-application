package org.cardanofoundation.lob.sourceadapter.netsuite.model;

import java.util.Map;
import java.util.Optional;

import static java.util.Map.entry;

public class CodeComponentMapping {

    private static final Map<String, String> EVENT_CODE_MAPPING = Map.<String, String>ofEntries(
            entry("300430", "B300430"),
            entry("301430", "B301430"),
            entry("302430", "B302430"),
            entry("303430", "B303430"),
            entry("304430", "B304430"),
            entry("305430", "B305430"),
            entry("306430", "B306430"),
            entry("307430", "B307430"),
            entry("314430", "B314430"),
            entry("315430", "B315430"),
            entry("316430", "B316430"),
            entry("710430", "B710430"),
            entry("711430", "B711430"),
            entry("712430", "B712430"),
            entry("713430", "B713430"),
            entry("714430", "B714430"),
            entry("715430", "B715430"),
            entry("716430", "B716430"),
            entry("717430", "B717430"),
            entry("718430", "B718430"),
            entry("730430", "B730430"),
            entry("731430", "B731430"),
            entry("732430", "B732430"),
            entry("733430", "B733430"),
            entry("734430", "B734430"),
            entry("680430", "B680430"),
            entry("681430", "B681430"),
            entry("682430", "B682430"),
            entry("683430", "B683430"),
            entry("684430", "B684430"),
            entry("685430", "B685430"),
            entry("686430", "B686430"),
            entry("687430", "B687430"),
            entry("688430", "B688430"),
            entry("689430", "B689430"),
            entry("690430", "B690430"),
            entry("660430", "B660430"),
            entry("661430", "B661430"),
            entry("662430", "B662430"),
            entry("663430", "B663430"),
            entry("664430", "B664430"),
            entry("665430", "B665430"),
            entry("666430", "B666430"),
            entry("667430", "B667430"),
            entry("668430", "B668430"),
            entry("669430", "B669430"),
            entry("670430", "B670430"),
            entry("671430", "B671430"),
            entry("672430", "B672430"),
            entry("673430", "B673430"),
            entry("740430", "B740430"),
            entry("741430", "B741430"),
            entry("742430", "B742430"),
            entry("743430", "B743430"),
            entry("744430", "B744430"),
            entry("745430", "B745430"),
            entry("746430", "B746430"),
            entry("760430", "B760430"),
            entry("761430", "B761430"),
            entry("762430", "B762430"),
            entry("763430", "B763430"),
            entry("764430", "B764430"),
            entry("660431", "B660431"),
            entry("661431", "B661431"),
            entry("662431", "B662431"),
            entry("663431", "B663431"),
            entry("664431", "B664431"),
            entry("665431", "B665431"),
            entry("666431", "B666431"),
            entry("667431", "B667431"),
            entry("668431", "B668431"),
            entry("669431", "B669431"),
            entry("670431", "B670431"),
            entry("671431", "B671431"),
            entry("672431", "B672431"),
            entry("673431", "B673431"),
            entry("740431", "B740431"),
            entry("741431", "B741431"),
            entry("742431", "B742431"),
            entry("743431", "B743431"),
            entry("744431", "B744431"),
            entry("745431", "B745431"),
            entry("746431", "B746431"),
            entry("760431", "B760431"),
            entry("761431", "B761431"),
            entry("762431", "B762431"),
            entry("763431", "B763431"),
            entry("764431", "B764431"),
            entry("700430", "E700430"),
            entry("701430", "E701430"),
            entry("702430", "E702430"),
            entry("703430", "E703430"),
            entry("704430", "E704430"),
            entry("705430", "E705430"),
            entry("706430", "E706430"),
            entry("707430", "E707430"),
            entry("700431", "E700431"),
            entry("701431", "E701431"),
            entry("702431", "E702431"),
            entry("703431", "E703431"),
            entry("704431", "E704431"),
            entry("705431", "E705431"),
            entry("706431", "E706431"),
            entry("707431", "E707431"),
            entry("010020", "C010020"),
            entry("020020", "C020020"),
            entry("430020", "C430020"),
            entry("431020", "C431020"),
            entry("190430", "T190430"),
            entry("191430", "T191430"),
            entry("192430", "T192430"),
            entry("193430", "T193430"),
            entry("194430", "T194430"),
            entry("195430", "T195430"),
            entry("196430", "T196430"),
            entry("190431", "T190431"),
            entry("191431", "T191431"),
            entry("192431", "T192431"),
            entry("193431", "T193431"),
            entry("194431", "T194431"),
            entry("195431", "T195431"),
            entry("196431", "T196431"),
            entry("430710", "B430710"),
            entry("430711", "B430711"),
            entry("430712", "B430712"),
            entry("430713", "B430713"),
            entry("430714", "B430714"),
            entry("430715", "B430715"),
            entry("430716", "B430716"),
            entry("430717", "B430717"),
            entry("430718", "B430718"),
            entry("430730", "B430730"),
            entry("430731", "B430731"),
            entry("430732", "B430732"),
            entry("430733", "B430733"),
            entry("430734", "B430734"),
            entry("430680", "B430680"),
            entry("430681", "B430681"),
            entry("430682", "B430682"),
            entry("430683", "B430683"),
            entry("430684", "B430684"),
            entry("430685", "B430685"),
            entry("430686", "B430686"),
            entry("430687", "B430687"),
            entry("430688", "B430688"),
            entry("430689", "B430689"),
            entry("430690", "B430690"),
            entry("691430", "B691430"),
            entry("430660", "B430660"),
            entry("430661", "B430661"),
            entry("430662", "B430662"),
            entry("430663", "B430663"),
            entry("430664", "B430664"),
            entry("430665", "B430665"),
            entry("430666", "B430666"),
            entry("430667", "B430667"),
            entry("430668", "B430668"),
            entry("430669", "B430669"),
            entry("430670", "B430670"),
            entry("430671", "B430671"),
            entry("430672", "B430672"),
            entry("430673", "B430673"),
            entry("430740", "B430740"),
            entry("430741", "B430741"),
            entry("430742", "B430742"),
            entry("430743", "B430743"),
            entry("430744", "B430744"),
            entry("430745", "B430745"),
            entry("430746", "B430746"),
            entry("430760", "B430760"),
            entry("430761", "B430761"),
            entry("430762", "B430762"),
            entry("430763", "B430763"),
            entry("430764", "B430764"),
            entry("430691", "B430691"),
            entry("640430", "P640430"),
            entry("641430", "P641430"),
            entry("642430", "P642430"),
            entry("643430", "P643430"),
            entry("644430", "P644430"),
            entry("645430", "P645430"),
            entry("646430", "P646430"),
            entry("647430", "P647430"),
            entry("648430", "P648430"),
            entry("649430", "P649430"),
            entry("650430", "P650430"),
            entry("647431", "P647431"),
            entry("648431", "P648431"),
            entry("800020", "I800020"),
            entry("801020", "I801020"),
            entry("802020", "I802020"),
            entry("803020", "I803020"),
            entry("804020", "I804020"),
            entry("820020", "I820020"),
            entry("821020", "I821020"),
            entry("I", "I"),
            entry("840020", "I840020"),
            entry("840431", "I840431"),
            entry("840040", "I840040"),
            entry("843430", "I843430"),
            entry("200430", "I200430"),
            entry("201430", "I201430")
    );

    private static final Map<String, String> CODE_COMPONENT_MAPPING = Map.<String, String>ofEntries(
            entry("110115", "020"),
            entry("120311", "200"),
            entry("120312", "201"),
            entry("120511", "160"),
            entry("120516", "163"),
            entry("120517", "165"),
            entry("120514", "167"),
            entry("120513", "168"),
            entry("120634", "190"),
            entry("120636", "191"),
            entry("120635", "192"),
            entry("120632", "193"),
            entry("120631", "194"),
            entry("120633", "195"),
            entry("120637", "196"),
            entry("120630", "197"),
            entry("120658", "199"),
            entry("130711", "302"),
            entry("130712", "303"),
            entry("130713", "305"),
            entry("141013", "308"),
            entry("141011", "311"),
            entry("141012", "312"),
            entry("141014", "314"),
            entry("140911", "315"),
            entry("141015", "316"),
            entry("210111", "430"),
            entry("210211", "431"),
            entry("631241", "641"),
            entry("631242", "642"),
            entry("631244", "643"),
            entry("631218", "644"),
            entry("631245", "645"),
            entry("631215", "646"),
            entry("631243", "647"),
            entry("631217", "648"),
            entry("631247", "649"),
            entry("631213", "650"),
            entry("520611", "660"),
            entry("520612", "661"),
            entry("520511", "664"),
            entry("520512", "665"),
            entry("520517", "666"),
            entry("520513", "667"),
            entry("520515", "668"),
            entry("520516", "669"),
            entry("520811", "671"),
            entry("520518", "672"),
            entry("520514", "673"),
            entry("631412", "680"),
            entry("631411", "681"),
            entry("631413", "682"),
            entry("631415", "684"),
            entry("631414", "685"),
            entry("631212", "686"),
            entry("631012", "687"),
            entry("520412", "688"),
            entry("520413", "689"),
            entry("520415", "690"),
            entry("631211", "691"),
            entry("631311", "700"),
            entry("631312", "703"),
            entry("631313", "704"),
            entry("631314", "705"),
            entry("631316", "706"),
            entry("631315", "707"),
            entry("631511", "710"),
            entry("631517", "712"),
            entry("631513", "713"),
            entry("631516", "714"),
            entry("631512", "715"),
            entry("631514", "717"),
            entry("631515", "718"),
            entry("631811", "730"),
            entry("631812", "734"),
            entry("631714", "741"),
            entry("631715", "742"),
            entry("631711", "743"),
            entry("631713", "744"),
            entry("631712", "745"),
            entry("631716", "746"),
            entry("631613", "760"),
            entry("631611", "761"),
            entry("631612", "762"),
            entry("631614", "763"),
            entry("631615", "764"),
            entry("631911", "771"),
            entry("631912", "772"),
            entry("631913", "774"),
            entry("631914", "783"),
            entry("642123", "801"),
            entry("642124", "802"),
            entry("642122", "803"),
            entry("642016", "840"),
            entry("642012", "841"),
            entry("642013", "842"),
            entry("642011", "843"),
            entry("642014", "844"),
            entry("642113", "845"),
            entry("642018", "846"),
            entry("642115", "847"),
            entry("642017", "848"),
            entry("642111", "849"),
            entry("642015", "850"),
            entry("642116", "851"),
            entry("642114", "852")
    );

    public static Optional<String> getCodeComponentFromAccount(final String account) {
        if (CODE_COMPONENT_MAPPING.containsKey(account)) {
            return Optional.of(CODE_COMPONENT_MAPPING.get(account));
        }

        return Optional.empty();
    }

    public static Optional<String> getEventCodeFromCodeComponents(final String debitCodeComponent, final String creditCodeComponent) {
        final String code = debitCodeComponent + creditCodeComponent;
        if (EVENT_CODE_MAPPING.containsKey(code)) {
            return Optional.of(EVENT_CODE_MAPPING.get(code));
        }

        return Optional.empty();
    }
}
