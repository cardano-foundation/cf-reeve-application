[
{
  "name":"Configurable"
},
{
  "name":"[B"
},
{
  "name":"[C"
},
{
  "name":"[D"
},
{
  "name":"[F"
},
{
  "name":"[I"
},
{
  "name":"[J"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"
},
{
  "name":"[Ljava.lang.Class;"
},
{
  "name":"[Ljava.lang.Long;"
},
{
  "name":"[Ljava.lang.Object;"
},
{
  "name":"[Ljava.lang.String;"
},
{
  "name":"[Ljava.lang.annotation.Annotation;"
},
{
  "name":"[Ljava.sql.Statement;"
},
{
  "name":"[Ljava.util.List;"
},
{
  "name":"[Ljava.util.function.Function;"
},
{
  "name":"[Ljava.util.function.Supplier;"
},
{
  "name":"[Ljavax.management.openmbean.CompositeData;"
},
{
  "name":"[Lkotlin.annotation.AnnotationTarget;"
},
{
  "name":"[Lorg.hibernate.event.spi.AutoFlushEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.DeleteEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.DirtyCheckEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.EvictEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.FlushEntityEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.FlushEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.InitializeCollectionEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.LoadEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.LockEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.MergeEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PersistEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PostCollectionRecreateEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PostDeleteEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PostInsertEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PostLoadEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PostUpdateEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PreCollectionRemoveEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PreCollectionUpdateEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PreDeleteEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PreInsertEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PreLoadEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PreUpdateEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.RefreshEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.ReplicateEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.ResolveNaturalIdEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.SaveOrUpdateEventListener;"
},
{
  "name":"[Lorg.hibernate.jpa.event.spi.Callback;"
},
{
  "name":"[Lorg.hibernate.query.hql.spi.DotIdentifierConsumer;"
},
{
  "name":"[Lorg.hibernate.query.hql.spi.SqmCreationProcessingState;"
},
{
  "name":"[Lorg.hibernate.query.sqm.spi.ParameterDeclarationContext;"
},
{
  "name":"[Lorg.hibernate.query.sqm.sql.FromClauseIndex;"
},
{
  "name":"[Lorg.hibernate.sql.ast.Clause;"
},
{
  "name":"[Lorg.hibernate.sql.ast.spi.SqlAstProcessingState;"
},
{
  "name":"[Lorg.hibernate.sql.ast.tree.Statement;"
},
{
  "name":"[Lorg.hibernate.sql.ast.tree.select.QueryPart;"
},
{
  "name":"[Lorg.hibernate.sql.results.jdbc.spi.JdbcValuesSourceProcessingState;"
},
{
  "name":"[Lorg.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure;"
},
{
  "name":"[Lorg.springframework.core.annotation.AnnotationAttributes;"
},
{
  "name":"[Lorg.springframework.core.annotation.TypeMappedAnnotation;"
},
{
  "name":"[Lorg.springframework.core.io.Resource;",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"from","parameterTypes":["java.lang.String"] }, {"name":"of","parameterTypes":["java.lang.String"] }, {"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
},
{
  "name":"[Lorg.springframework.web.bind.annotation.RequestMethod;"
},
{
  "name":"[Lsun.security.pkcs.SignerInfo;"
},
{
  "name":"[S"
},
{
  "name":"[Z"
},
{
  "name":"boolean",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean"] }, {"name":"from","parameterTypes":["java.lang.Boolean"] }, {"name":"of","parameterTypes":["java.lang.Boolean"] }, {"name":"valueOf","parameterTypes":["java.lang.Boolean"] }]
},
{
  "name":"brave.Tracer"
},
{
  "name":"ch.qos.logback.classic.BasicConfigurator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.LoggerContext"
},
{
  "name":"ch.qos.logback.classic.joran.SerializedModelConfigurator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.util.DefaultJoranConfigurator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"char",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Character"] }, {"name":"from","parameterTypes":["java.lang.Character"] }, {"name":"of","parameterTypes":["java.lang.Character"] }, {"name":"valueOf","parameterTypes":["java.lang.Character"] }]
},
{
  "name":"co.elastic.clients.elasticsearch.ElasticsearchClient"
},
{
  "name":"co.elastic.clients.transport.ElasticsearchTransport"
},
{
  "name":"com.bloxbean.cardano.client.account.Account",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"com.bloxbean.cardano.client.address.Address"
},
{
  "name":"com.bloxbean.cardano.client.address.Credential"
},
{
  "name":"com.bloxbean.cardano.client.api.UtxoSupplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getAll","parameterTypes":["java.lang.String"] }]
},
{
  "name":"com.bloxbean.cardano.client.api.common.OrderEnum"
},
{
  "name":"com.bloxbean.cardano.client.api.exception.ApiException"
},
{
  "name":"com.bloxbean.cardano.client.api.helper.FeeCalculationService"
},
{
  "name":"com.bloxbean.cardano.client.api.helper.TransactionHelperService"
},
{
  "name":"com.bloxbean.cardano.client.api.helper.UtxoTransactionBuilder"
},
{
  "name":"com.bloxbean.cardano.client.api.model.Result"
},
{
  "name":"com.bloxbean.cardano.client.api.model.Utxo"
},
{
  "name":"com.bloxbean.cardano.client.backend.api.AccountService"
},
{
  "name":"com.bloxbean.cardano.client.backend.api.AddressService"
},
{
  "name":"com.bloxbean.cardano.client.backend.api.AssetService"
},
{
  "name":"com.bloxbean.cardano.client.backend.api.BackendService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getFeeCalculationService","parameterTypes":[] }, {"name":"getFeeCalculationService","parameterTypes":["com.bloxbean.cardano.client.api.helper.TransactionHelperService"] }, {"name":"getTransactionHelperService","parameterTypes":[] }, {"name":"getUtxoTransactionBuilder","parameterTypes":[] }]
},
{
  "name":"com.bloxbean.cardano.client.backend.api.BlockService"
},
{
  "name":"com.bloxbean.cardano.client.backend.api.DefaultUtxoSupplier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getPage","parameterTypes":["java.lang.String","java.lang.Integer","java.lang.Integer","com.bloxbean.cardano.client.api.common.OrderEnum"] }, {"name":"getTxOutput","parameterTypes":["java.lang.String","int"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"com.bloxbean.cardano.client.backend.api.EpochService"
},
{
  "name":"com.bloxbean.cardano.client.backend.api.MetadataService"
},
{
  "name":"com.bloxbean.cardano.client.backend.api.NetworkInfoService"
},
{
  "name":"com.bloxbean.cardano.client.backend.api.PoolService"
},
{
  "name":"com.bloxbean.cardano.client.backend.api.ScriptService"
},
{
  "name":"com.bloxbean.cardano.client.backend.api.TransactionService"
},
{
  "name":"com.bloxbean.cardano.client.backend.api.UtxoService"
},
{
  "name":"com.bloxbean.cardano.client.backend.blockfrost.service.BFBackendService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getAccountService","parameterTypes":[] }, {"name":"getAddressService","parameterTypes":[] }, {"name":"getAssetService","parameterTypes":[] }, {"name":"getBlockService","parameterTypes":[] }, {"name":"getEpochService","parameterTypes":[] }, {"name":"getMetadataService","parameterTypes":[] }, {"name":"getNetworkInfoService","parameterTypes":[] }, {"name":"getPoolService","parameterTypes":[] }, {"name":"getScriptService","parameterTypes":[] }, {"name":"getTransactionService","parameterTypes":[] }, {"name":"getUtxoService","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"com.bloxbean.cardano.client.backend.blockfrost.service.BFBaseService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getBaseUrl","parameterTypes":[] }, {"name":"getProjectId","parameterTypes":[] }]
},
{
  "name":"com.bloxbean.cardano.client.crypto.bip32.HdKeyPair"
},
{
  "name":"com.bloxbean.cardano.client.crypto.bip39.Words"
},
{
  "name":"com.bloxbean.cardano.client.exception.CborSerializationException"
},
{
  "name":"com.bloxbean.cardano.client.governance.keys.CommitteeColdKey"
},
{
  "name":"com.bloxbean.cardano.client.governance.keys.CommitteeHotKey"
},
{
  "name":"com.bloxbean.cardano.client.governance.keys.DRepKey"
},
{
  "name":"com.bloxbean.cardano.client.metadata.Metadata"
},
{
  "name":"com.bloxbean.cardano.client.metadata.MetadataList"
},
{
  "name":"com.bloxbean.cardano.client.metadata.MetadataMap"
},
{
  "name":"com.bloxbean.cardano.client.transaction.spec.Transaction"
},
{
  "name":"com.couchbase.client.java.Bucket"
},
{
  "name":"com.couchbase.client.java.Cluster"
},
{
  "name":"com.datastax.oss.driver.api.core.CqlSession"
},
{
  "name":"com.fasterxml.jackson.annotation.JacksonAnnotation",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.annotation.JsonAutoDetect$Value"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonFormat",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.annotation.JsonFormat$Shape"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonIgnore",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.annotation.JsonIgnoreProperties",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.annotation.JsonInclude$Include"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonInclude$Value"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.annotation.JsonSetter$Value"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonTypeInfo$As"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonView"
},
{
  "name":"com.fasterxml.jackson.annotation.PropertyAccessor"
},
{
  "name":"com.fasterxml.jackson.core.Base64Variant"
},
{
  "name":"com.fasterxml.jackson.core.FormatSchema"
},
{
  "name":"com.fasterxml.jackson.core.JsonEncoding"
},
{
  "name":"com.fasterxml.jackson.core.JsonFactory"
},
{
  "name":"com.fasterxml.jackson.core.JsonFactory$Feature"
},
{
  "name":"com.fasterxml.jackson.core.JsonGenerator"
},
{
  "name":"com.fasterxml.jackson.core.JsonGenerator$Feature"
},
{
  "name":"com.fasterxml.jackson.core.JsonParser"
},
{
  "name":"com.fasterxml.jackson.core.JsonParser$Feature"
},
{
  "name":"com.fasterxml.jackson.core.JsonProcessingException"
},
{
  "name":"com.fasterxml.jackson.core.JsonToken"
},
{
  "name":"com.fasterxml.jackson.core.ObjectCodec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getJsonFactory","parameterTypes":[] }, {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }]
},
{
  "name":"com.fasterxml.jackson.core.PrettyPrinter"
},
{
  "name":"com.fasterxml.jackson.core.StreamReadFeature"
},
{
  "name":"com.fasterxml.jackson.core.StreamWriteFeature"
},
{
  "name":"com.fasterxml.jackson.core.TreeCodec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.core.TreeNode"
},
{
  "name":"com.fasterxml.jackson.core.Version"
},
{
  "name":"com.fasterxml.jackson.core.Versioned",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.core.exc.StreamReadException"
},
{
  "name":"com.fasterxml.jackson.core.exc.StreamWriteException"
},
{
  "name":"com.fasterxml.jackson.core.io.CharacterEscapes"
},
{
  "name":"com.fasterxml.jackson.core.type.ResolvedType"
},
{
  "name":"com.fasterxml.jackson.core.type.TypeReference"
},
{
  "name":"com.fasterxml.jackson.databind.AnnotationIntrospector"
},
{
  "name":"com.fasterxml.jackson.databind.DatabindException"
},
{
  "name":"com.fasterxml.jackson.databind.DeserializationConfig"
},
{
  "name":"com.fasterxml.jackson.databind.DeserializationContext"
},
{
  "name":"com.fasterxml.jackson.databind.DeserializationFeature"
},
{
  "name":"com.fasterxml.jackson.databind.InjectableValues"
},
{
  "name":"com.fasterxml.jackson.databind.JavaType"
},
{
  "name":"com.fasterxml.jackson.databind.JsonDeserializer"
},
{
  "name":"com.fasterxml.jackson.databind.JsonMappingException"
},
{
  "name":"com.fasterxml.jackson.databind.JsonNode"
},
{
  "name":"com.fasterxml.jackson.databind.JsonSerializer"
},
{
  "name":"com.fasterxml.jackson.databind.KeyDeserializer"
},
{
  "name":"com.fasterxml.jackson.databind.MapperFeature"
},
{
  "name":"com.fasterxml.jackson.databind.MappingIterator"
},
{
  "name":"com.fasterxml.jackson.databind.Module",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getDependencies","parameterTypes":[] }, {"name":"getTypeId","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.Module$SetupContext"
},
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"createArrayNode","parameterTypes":[] }, {"name":"createObjectNode","parameterTypes":[] }, {"name":"getFactory","parameterTypes":[] }, {"name":"missingNode","parameterTypes":[] }, {"name":"nullNode","parameterTypes":[] }, {"name":"readTree","parameterTypes":["com.fasterxml.jackson.core.JsonParser"] }, {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }, {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }, {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }, {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"treeAsTokens","parameterTypes":["com.fasterxml.jackson.core.TreeNode"] }, {"name":"treeToValue","parameterTypes":["com.fasterxml.jackson.core.TreeNode","java.lang.Class"] }, {"name":"version","parameterTypes":[] }, {"name":"writeTree","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","com.fasterxml.jackson.core.TreeNode"] }, {"name":"writeValue","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","java.lang.Object"] }]
},
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping"
},
{
  "name":"com.fasterxml.jackson.databind.ObjectReader"
},
{
  "name":"com.fasterxml.jackson.databind.ObjectWriter"
},
{
  "name":"com.fasterxml.jackson.databind.PropertyNamingStrategy"
},
{
  "name":"com.fasterxml.jackson.databind.SerializationConfig"
},
{
  "name":"com.fasterxml.jackson.databind.SerializationFeature"
},
{
  "name":"com.fasterxml.jackson.databind.SerializerProvider"
},
{
  "name":"com.fasterxml.jackson.databind.annotation.JsonNaming",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.cfg.CacheProvider"
},
{
  "name":"com.fasterxml.jackson.databind.cfg.ConstructorDetector"
},
{
  "name":"com.fasterxml.jackson.databind.cfg.ContextAttributes"
},
{
  "name":"com.fasterxml.jackson.databind.cfg.DatatypeFeature"
},
{
  "name":"com.fasterxml.jackson.databind.cfg.HandlerInstantiator"
},
{
  "name":"com.fasterxml.jackson.databind.cfg.MutableCoercionConfig"
},
{
  "name":"com.fasterxml.jackson.databind.cfg.MutableConfigOverride"
},
{
  "name":"com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
},
{
  "name":"com.fasterxml.jackson.databind.deser.DefaultDeserializationContext"
},
{
  "name":"com.fasterxml.jackson.databind.deser.DeserializationProblemHandler"
},
{
  "name":"com.fasterxml.jackson.databind.deser.ValueInstantiator"
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider"
},
{
  "name":"com.fasterxml.jackson.databind.introspect.ClassIntrospector"
},
{
  "name":"com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver"
},
{
  "name":"com.fasterxml.jackson.databind.introspect.VisibilityChecker"
},
{
  "name":"com.fasterxml.jackson.databind.json.JsonMapper$Builder"
},
{
  "name":"com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper"
},
{
  "name":"com.fasterxml.jackson.databind.jsonschema.JsonSchema"
},
{
  "name":"com.fasterxml.jackson.databind.jsontype.NamedType"
},
{
  "name":"com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator"
},
{
  "name":"com.fasterxml.jackson.databind.jsontype.SubtypeResolver"
},
{
  "name":"com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder"
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleDeserializers"
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addAbstractTypeMapping","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"addDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonDeserializer"] }, {"name":"addKeyDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.KeyDeserializer"] }, {"name":"addKeySerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] }, {"name":"addSerializer","parameterTypes":["com.fasterxml.jackson.databind.JsonSerializer"] }, {"name":"addSerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] }, {"name":"addValueInstantiator","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.deser.ValueInstantiator"] }, {"name":"getModuleName","parameterTypes":[] }, {"name":"getTypeId","parameterTypes":[] }, {"name":"registerSubtypes","parameterTypes":["java.util.Collection"] }, {"name":"registerSubtypes","parameterTypes":["com.fasterxml.jackson.databind.jsontype.NamedType[]"] }, {"name":"registerSubtypes","parameterTypes":["java.lang.Class[]"] }, {"name":"setAbstractTypes","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"] }, {"name":"setDeserializerModifier","parameterTypes":["com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"] }, {"name":"setDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleDeserializers"] }, {"name":"setKeyDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"] }, {"name":"setKeySerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] }, {"name":"setMixInAnnotation","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"setSerializerModifier","parameterTypes":["com.fasterxml.jackson.databind.ser.BeanSerializerModifier"] }, {"name":"setSerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] }, {"name":"setValueInstantiators","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleValueInstantiators"] }, {"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }, {"name":"version","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleSerializers"
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
},
{
  "name":"com.fasterxml.jackson.databind.node.ArrayNode"
},
{
  "name":"com.fasterxml.jackson.databind.node.JsonNodeFactory"
},
{
  "name":"com.fasterxml.jackson.databind.node.ObjectNode"
},
{
  "name":"com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
},
{
  "name":"com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"
},
{
  "name":"com.fasterxml.jackson.databind.ser.FilterProvider"
},
{
  "name":"com.fasterxml.jackson.databind.ser.SerializerFactory"
},
{
  "name":"com.fasterxml.jackson.databind.type.LogicalType"
},
{
  "name":"com.fasterxml.jackson.databind.type.TypeFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.cbor.CBORFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.smile.SmileFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.xml.XmlMapper"
},
{
  "name":"com.fasterxml.jackson.dataformat.yaml.YAMLFactory"
},
{
  "name":"com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.datatype.joda.JodaModule"
},
{
  "name":"com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.module.kotlin.KotlinModule"
},
{
  "name":"com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.Cache"
},
{
  "name":"com.github.benmanes.caffeine.cache.Caffeine"
},
{
  "name":"com.github.therapi.runtimejavadoc.CommentFormatter"
},
{
  "name":"com.google.common.base.Optional"
},
{
  "name":"com.google.common.cache.Cache",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.google.common.cache.CacheStats"
},
{
  "name":"com.google.common.cache.ElementTypesAreNonnullByDefault",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.common.cache.LocalCache$LocalManualCache",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"asMap","parameterTypes":[] }, {"name":"cleanUp","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"get","parameterTypes":["java.lang.Object","java.util.concurrent.Callable"] }, {"name":"getAllPresent","parameterTypes":["java.lang.Iterable"] }, {"name":"getIfPresent","parameterTypes":["java.lang.Object"] }, {"name":"invalidate","parameterTypes":["java.lang.Object"] }, {"name":"invalidateAll","parameterTypes":[] }, {"name":"invalidateAll","parameterTypes":["java.lang.Iterable"] }, {"name":"put","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"putAll","parameterTypes":["java.util.Map"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"size","parameterTypes":[] }, {"name":"stats","parameterTypes":[] }]
},
{
  "name":"com.google.common.cache.RemovalNotification"
},
{
  "name":"com.google.common.collect.ImmutableMap"
},
{
  "name":"com.google.common.collect.Multimap"
},
{
  "name":"com.google.common.collect.Range"
},
{
  "name":"com.google.errorprone.annotations.DoNotMock",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.google.gson.ExclusionStrategy"
},
{
  "name":"com.google.gson.FieldNamingPolicy"
},
{
  "name":"com.google.gson.FieldNamingStrategy"
},
{
  "name":"com.google.gson.Gson",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"com.google.gson.GsonBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"com.google.gson.JsonElement"
},
{
  "name":"com.google.gson.JsonIOException"
},
{
  "name":"com.google.gson.JsonSyntaxException"
},
{
  "name":"com.google.gson.LongSerializationPolicy"
},
{
  "name":"com.google.gson.ReflectionAccessFilter"
},
{
  "name":"com.google.gson.ToNumberStrategy"
},
{
  "name":"com.google.gson.TypeAdapter"
},
{
  "name":"com.google.gson.TypeAdapterFactory"
},
{
  "name":"com.google.gson.internal.Excluder"
},
{
  "name":"com.google.gson.reflect.TypeToken"
},
{
  "name":"com.google.gson.stream.JsonReader"
},
{
  "name":"com.google.gson.stream.JsonWriter"
},
{
  "name":"com.hazelcast.core.Hazelcast"
},
{
  "name":"com.hazelcast.core.HazelcastInstance"
},
{
  "name":"com.hazelcast.spring.cache.HazelcastCache"
},
{
  "name":"com.ibm.lang.management.OperatingSystemMXBean"
},
{
  "name":"com.jayway.jsonpath.DocumentContext"
},
{
  "name":"com.mchange.v2.c3p0.ComboPooledDataSource"
},
{
  "name":"com.mongodb.MongoClientSettings"
},
{
  "name":"com.mongodb.client.MongoClient"
},
{
  "name":"com.mongodb.reactivestreams.client.MongoClient"
},
{
  "name":"com.nimbusds.jose.jwk.source.JWKSource"
},
{
  "name":"com.nimbusds.jwt.JWT"
},
{
  "name":"com.opencsv.bean.CsvBindByName",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"com.opencsv.exceptions.CsvValidationException"
},
{
  "name":"com.querydsl.core.Query"
},
{
  "name":"com.querydsl.core.types.Predicate"
},
{
  "name":"com.rabbitmq.client.Channel"
},
{
  "name":"com.rabbitmq.client.ConnectionFactory"
},
{
  "name":"com.rometools.rome.feed.WireFeed"
},
{
  "name":"com.samskivert.mustache.Mustache"
},
{
  "name":"com.samskivert.mustache.Template"
},
{
  "name":"com.sendgrid.SendGrid"
},
{
  "name":"com.sun.crypto.provider.AESCipher$General",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ARCFOURCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESedeCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.GaloisCounterMode$AESGCM",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.HmacCore$HmacSHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.HmacCore$HmacSHA512",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.PBKDF2Core$HmacSHA1",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.PBKDF2Core$HmacSHA224",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.PBKDF2Core$HmacSHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.PBKDF2Core$HmacSHA384",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.PBKDF2Core$HmacSHA512",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.management.GarbageCollectionNotificationInfo"
},
{
  "name":"com.sun.management.GarbageCollectorMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.GcInfo",
  "queryAllPublicMethods":true,
  "fields":[{"name":"builder"}, {"name":"extAttributes"}],
  "methods":[{"name":"getMemoryUsageBeforeGc","parameterTypes":[] }]
},
{
  "name":"com.sun.management.HotSpotDiagnosticMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.OperatingSystemMXBean",
  "methods":[{"name":"getCpuLoad","parameterTypes":[] }, {"name":"getProcessCpuLoad","parameterTypes":[] }, {"name":"getProcessCpuTime","parameterTypes":[] }]
},
{
  "name":"com.sun.management.ThreadMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.UnixOperatingSystemMXBean",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getMaxFileDescriptorCount","parameterTypes":[] }, {"name":"getOpenFileDescriptorCount","parameterTypes":[] }]
},
{
  "name":"com.sun.management.VMOption",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.internal.GarbageCollectorExtImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotDiagnostic",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotThreadImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.OperatingSystemImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.xml.internal.stream.events.XMLEventFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.unboundid.ldap.listener.InMemoryDirectoryServer"
},
{
  "name":"com.wavefront.sdk.common.WavefrontSender"
},
{
  "name":"com.wavefront.sdk.common.application.ApplicationTags"
},
{
  "name":"com.zaxxer.hikari.HikariConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addDataSourceProperty","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"addHealthCheckProperty","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"copyStateTo","parameterTypes":["com.zaxxer.hikari.HikariConfig"] }, {"name":"getCatalog","parameterTypes":[] }, {"name":"getConnectionInitSql","parameterTypes":[] }, {"name":"getConnectionTestQuery","parameterTypes":[] }, {"name":"getConnectionTimeout","parameterTypes":[] }, {"name":"getDataSource","parameterTypes":[] }, {"name":"getDataSourceClassName","parameterTypes":[] }, {"name":"getDataSourceJNDI","parameterTypes":[] }, {"name":"getDataSourceProperties","parameterTypes":[] }, {"name":"getDriverClassName","parameterTypes":[] }, {"name":"getExceptionOverrideClassName","parameterTypes":[] }, {"name":"getHealthCheckProperties","parameterTypes":[] }, {"name":"getHealthCheckRegistry","parameterTypes":[] }, {"name":"getIdleTimeout","parameterTypes":[] }, {"name":"getInitializationFailTimeout","parameterTypes":[] }, {"name":"getJdbcUrl","parameterTypes":[] }, {"name":"getKeepaliveTime","parameterTypes":[] }, {"name":"getLeakDetectionThreshold","parameterTypes":[] }, {"name":"getMaxLifetime","parameterTypes":[] }, {"name":"getMaximumPoolSize","parameterTypes":[] }, {"name":"getMetricRegistry","parameterTypes":[] }, {"name":"getMetricsTrackerFactory","parameterTypes":[] }, {"name":"getMinimumIdle","parameterTypes":[] }, {"name":"getPassword","parameterTypes":[] }, {"name":"getPoolName","parameterTypes":[] }, {"name":"getScheduledExecutor","parameterTypes":[] }, {"name":"getSchema","parameterTypes":[] }, {"name":"getThreadFactory","parameterTypes":[] }, {"name":"getTransactionIsolation","parameterTypes":[] }, {"name":"getUsername","parameterTypes":[] }, {"name":"getValidationTimeout","parameterTypes":[] }, {"name":"isAllowPoolSuspension","parameterTypes":[] }, {"name":"isAutoCommit","parameterTypes":[] }, {"name":"isIsolateInternalQueries","parameterTypes":[] }, {"name":"isReadOnly","parameterTypes":[] }, {"name":"isRegisterMbeans","parameterTypes":[] }, {"name":"setAllowPoolSuspension","parameterTypes":["boolean"] }, {"name":"setAutoCommit","parameterTypes":["boolean"] }, {"name":"setCatalog","parameterTypes":["java.lang.String"] }, {"name":"setConnectionInitSql","parameterTypes":["java.lang.String"] }, {"name":"setConnectionTestQuery","parameterTypes":["java.lang.String"] }, {"name":"setConnectionTimeout","parameterTypes":["long"] }, {"name":"setDataSource","parameterTypes":["javax.sql.DataSource"] }, {"name":"setDataSourceClassName","parameterTypes":["java.lang.String"] }, {"name":"setDataSourceJNDI","parameterTypes":["java.lang.String"] }, {"name":"setDataSourceProperties","parameterTypes":["java.util.Properties"] }, {"name":"setDriverClassName","parameterTypes":["java.lang.String"] }, {"name":"setExceptionOverrideClassName","parameterTypes":["java.lang.String"] }, {"name":"setHealthCheckProperties","parameterTypes":["java.util.Properties"] }, {"name":"setIdleTimeout","parameterTypes":["long"] }, {"name":"setInitializationFailTimeout","parameterTypes":["long"] }, {"name":"setIsolateInternalQueries","parameterTypes":["boolean"] }, {"name":"setJdbcUrl","parameterTypes":["java.lang.String"] }, {"name":"setKeepaliveTime","parameterTypes":["long"] }, {"name":"setLeakDetectionThreshold","parameterTypes":["long"] }, {"name":"setMaxLifetime","parameterTypes":["long"] }, {"name":"setMaximumPoolSize","parameterTypes":["int"] }, {"name":"setMinimumIdle","parameterTypes":["int"] }, {"name":"setPassword","parameterTypes":["java.lang.String"] }, {"name":"setPoolName","parameterTypes":["java.lang.String"] }, {"name":"setReadOnly","parameterTypes":["boolean"] }, {"name":"setRegisterMbeans","parameterTypes":["boolean"] }, {"name":"setScheduledExecutor","parameterTypes":["java.util.concurrent.ScheduledExecutorService"] }, {"name":"setSchema","parameterTypes":["java.lang.String"] }, {"name":"setThreadFactory","parameterTypes":["java.util.concurrent.ThreadFactory"] }, {"name":"setTransactionIsolation","parameterTypes":["java.lang.String"] }, {"name":"setUsername","parameterTypes":["java.lang.String"] }, {"name":"setValidationTimeout","parameterTypes":["long"] }, {"name":"validate","parameterTypes":[] }]
},
{
  "name":"com.zaxxer.hikari.HikariConfigMXBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.zaxxer.hikari.HikariDataSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"getConnection","parameterTypes":[] }, {"name":"getConnection","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"getLogWriter","parameterTypes":[] }, {"name":"getLoginTimeout","parameterTypes":[] }, {"name":"getParentLogger","parameterTypes":[] }, {"name":"isWrapperFor","parameterTypes":["java.lang.Class"] }, {"name":"setHealthCheckRegistry","parameterTypes":["java.lang.Object"] }, {"name":"setLogWriter","parameterTypes":["java.io.PrintWriter"] }, {"name":"setLoginTimeout","parameterTypes":["int"] }, {"name":"setMetricRegistry","parameterTypes":["java.lang.Object"] }, {"name":"setMetricsTrackerFactory","parameterTypes":["com.zaxxer.hikari.metrics.MetricsTrackerFactory"] }, {"name":"toString","parameterTypes":[] }, {"name":"unwrap","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.zaxxer.hikari.HikariPoolMXBean"
},
{
  "name":"com.zaxxer.hikari.metrics.MetricsTrackerFactory"
},
{
  "name":"com.zaxxer.hikari.pool.HikariProxyConnection",
  "methods":[{"name":"getSchema","parameterTypes":[] }]
},
{
  "name":"com.zaxxer.hikari.pool.HikariProxyPreparedStatement"
},
{
  "name":"com.zaxxer.hikari.pool.PoolBase",
  "fields":[{"name":"catalog"}]
},
{
  "name":"com.zaxxer.hikari.pool.PoolEntry",
  "fields":[{"name":"state"}]
},
{
  "name":"com.zaxxer.hikari.pool.ProxyPreparedStatement"
},
{
  "name":"freemarker.template.Configuration"
},
{
  "name":"graphql.GraphQL"
},
{
  "name":"groovy.lang.MetaClass"
},
{
  "name":"groovy.text.TemplateEngine"
},
{
  "name":"groovy.text.markup.MarkupTemplateEngine"
},
{
  "name":"io.hypersistence.utils.hibernate.type.ImmutableType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"assemble","parameterTypes":["java.io.Serializable","java.lang.Object"] }, {"name":"assemble","parameterTypes":["java.io.Serializable","org.hibernate.engine.spi.SharedSessionContractImplementor","java.lang.Object"] }, {"name":"beforeAssemble","parameterTypes":["java.io.Serializable","org.hibernate.engine.spi.SharedSessionContractImplementor"] }, {"name":"compare","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"compare","parameterTypes":["java.lang.Object","java.lang.Object","org.hibernate.engine.spi.SessionFactoryImplementor"] }, {"name":"deepCopy","parameterTypes":["java.lang.Object"] }, {"name":"deepCopy","parameterTypes":["java.lang.Object","org.hibernate.engine.spi.SessionFactoryImplementor"] }, {"name":"disassemble","parameterTypes":["java.lang.Object"] }, {"name":"disassemble","parameterTypes":["java.lang.Object","org.hibernate.engine.spi.SharedSessionContractImplementor","java.lang.Object"] }, {"name":"equals","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"getColumnSpan","parameterTypes":["org.hibernate.engine.spi.Mapping"] }, {"name":"getHashCode","parameterTypes":["java.lang.Object"] }, {"name":"getHashCode","parameterTypes":["java.lang.Object","org.hibernate.engine.spi.SessionFactoryImplementor"] }, {"name":"getName","parameterTypes":[] }, {"name":"getReturnedClass","parameterTypes":[] }, {"name":"getSqlTypeCodes","parameterTypes":["org.hibernate.engine.spi.Mapping"] }, {"name":"hashCode","parameterTypes":["java.lang.Object"] }, {"name":"isAnyType","parameterTypes":[] }, {"name":"isAssociationType","parameterTypes":[] }, {"name":"isCollectionType","parameterTypes":[] }, {"name":"isComponentType","parameterTypes":[] }, {"name":"isDirty","parameterTypes":["java.lang.Object","java.lang.Object","org.hibernate.engine.spi.SharedSessionContractImplementor"] }, {"name":"isDirty","parameterTypes":["java.lang.Object","java.lang.Object","boolean[]","org.hibernate.engine.spi.SharedSessionContractImplementor"] }, {"name":"isEntityType","parameterTypes":[] }, {"name":"isEqual","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"isEqual","parameterTypes":["java.lang.Object","java.lang.Object","org.hibernate.engine.spi.SessionFactoryImplementor"] }, {"name":"isModified","parameterTypes":["java.lang.Object","java.lang.Object","boolean[]","org.hibernate.engine.spi.SharedSessionContractImplementor"] }, {"name":"isMutable","parameterTypes":[] }, {"name":"isSame","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"nullSafeGet","parameterTypes":["java.sql.ResultSet","int","org.hibernate.engine.spi.SharedSessionContractImplementor","java.lang.Object"] }, {"name":"nullSafeSet","parameterTypes":["java.sql.PreparedStatement","java.lang.Object","int","org.hibernate.engine.spi.SharedSessionContractImplementor"] }, {"name":"nullSafeSet","parameterTypes":["java.sql.PreparedStatement","java.lang.Object","int","boolean[]","org.hibernate.engine.spi.SharedSessionContractImplementor"] }, {"name":"replace","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.Object"] }, {"name":"replace","parameterTypes":["java.lang.Object","java.lang.Object","org.hibernate.engine.spi.SharedSessionContractImplementor","java.lang.Object","java.util.Map"] }, {"name":"replace","parameterTypes":["java.lang.Object","java.lang.Object","org.hibernate.engine.spi.SharedSessionContractImplementor","java.lang.Object","java.util.Map","org.hibernate.type.ForeignKeyDirection"] }, {"name":"returnedClass","parameterTypes":[] }, {"name":"set","parameterTypes":["java.sql.PreparedStatement","java.lang.Object","int","org.hibernate.engine.spi.SharedSessionContractImplementor"] }, {"name":"toColumnNullness","parameterTypes":["java.lang.Object","org.hibernate.engine.spi.Mapping"] }, {"name":"toLoggableString","parameterTypes":["java.lang.Object","org.hibernate.engine.spi.SessionFactoryImplementor"] }, {"name":"toSqlLiteral","parameterTypes":["java.lang.Object"] }, {"name":"toString","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"io.hypersistence.utils.hibernate.type.MutableDynamicParameterizedType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setParameterValues","parameterTypes":["java.util.Properties"] }]
},
{
  "name":"io.hypersistence.utils.hibernate.type.MutableType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"assemble","parameterTypes":["java.io.Serializable","java.lang.Object"] }, {"name":"deepCopy","parameterTypes":["java.lang.Object"] }, {"name":"disassemble","parameterTypes":["java.lang.Object"] }, {"name":"disassemble","parameterTypes":["java.lang.Object","org.hibernate.engine.spi.SharedSessionContractImplementor"] }, {"name":"equals","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"forEachDisassembledJdbcValue","parameterTypes":["java.lang.Object","int","java.lang.Object","java.lang.Object","org.hibernate.metamodel.mapping.Bindable$JdbcValuesBiConsumer","org.hibernate.engine.spi.SharedSessionContractImplementor"] }, {"name":"forEachJdbcType","parameterTypes":["int","org.hibernate.internal.util.IndexedConsumer"] }, {"name":"getBindableJavaType","parameterTypes":[] }, {"name":"getConfiguration","parameterTypes":[] }, {"name":"getExpressibleJavaType","parameterTypes":[] }, {"name":"getJavaTypeDescriptor","parameterTypes":[] }, {"name":"getJdbcMapping","parameterTypes":[] }, {"name":"getJdbcTypeDescriptor","parameterTypes":[] }, {"name":"getMappedType","parameterTypes":[] }, {"name":"getSqlType","parameterTypes":[] }, {"name":"hashCode","parameterTypes":["java.lang.Object"] }, {"name":"isMutable","parameterTypes":[] }, {"name":"nullSafeGet","parameterTypes":["java.sql.ResultSet","int","org.hibernate.engine.spi.SharedSessionContractImplementor","java.lang.Object"] }, {"name":"nullSafeSet","parameterTypes":["java.sql.PreparedStatement","java.lang.Object","int","org.hibernate.engine.spi.SharedSessionContractImplementor"] }, {"name":"replace","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.Object"] }, {"name":"returnedClass","parameterTypes":[] }]
},
{
  "name":"io.hypersistence.utils.hibernate.type.basic.PostgreSQLCITextType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.type.spi.TypeBootstrapContext"] }, {"name":"fromStringValue","parameterTypes":["java.lang.CharSequence"] }, {"name":"getSqlType","parameterTypes":[] }]
},
{
  "name":"io.hypersistence.utils.hibernate.type.json.JsonType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.type.spi.TypeBootstrapContext"] }]
},
{
  "name":"io.hypersistence.utils.hibernate.type.json.internal.JsonJavaTypeDescriptor",
  "methods":[{"name":"setJdbcType","parameterTypes":[] }]
},
{
  "name":"io.hypersistence.utils.hibernate.type.json.internal.JsonJdbcTypeDescriptor"
},
{
  "name":"io.hypersistence.utils.hibernate.type.util.Configuration"
},
{
  "name":"io.lettuce.core.metrics.MicrometerCommandLatencyRecorder"
},
{
  "name":"io.micrometer.appoptics.AppOpticsMeterRegistry"
},
{
  "name":"io.micrometer.atlas.AtlasMeterRegistry"
},
{
  "name":"io.micrometer.common.KeyValues"
},
{
  "name":"io.micrometer.common.lang.NonNullApi",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.common.lang.NonNullFields",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.common.lang.Nullable",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.context.ContextSnapshot"
},
{
  "name":"io.micrometer.core.annotation.Timed"
},
{
  "name":"io.micrometer.core.aop.TimedAspect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.Clock",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.Clock$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"monotonicTime","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"wallTime","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.Counter"
},
{
  "name":"io.micrometer.core.instrument.DistributionSummary"
},
{
  "name":"io.micrometer.core.instrument.FunctionCounter"
},
{
  "name":"io.micrometer.core.instrument.FunctionTimer"
},
{
  "name":"io.micrometer.core.instrument.Gauge"
},
{
  "name":"io.micrometer.core.instrument.HighCardinalityTagsDetector"
},
{
  "name":"io.micrometer.core.instrument.LongTaskTimer"
},
{
  "name":"io.micrometer.core.instrument.Measurement"
},
{
  "name":"io.micrometer.core.instrument.Meter"
},
{
  "name":"io.micrometer.core.instrument.Meter$Id"
},
{
  "name":"io.micrometer.core.instrument.Meter$Type"
},
{
  "name":"io.micrometer.core.instrument.MeterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"clear","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"config","parameterTypes":[] }, {"name":"counter","parameterTypes":["java.lang.String","java.lang.Iterable"] }, {"name":"counter","parameterTypes":["java.lang.String","java.lang.String[]"] }, {"name":"find","parameterTypes":["java.lang.String"] }, {"name":"forEachMeter","parameterTypes":["java.util.function.Consumer"] }, {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Iterable","java.lang.Number"] }, {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Iterable","java.lang.Object","java.util.function.ToDoubleFunction"] }, {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Number"] }, {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Object","java.util.function.ToDoubleFunction"] }, {"name":"gaugeCollectionSize","parameterTypes":["java.lang.String","java.lang.Iterable","java.util.Collection"] }, {"name":"gaugeMapSize","parameterTypes":["java.lang.String","java.lang.Iterable","java.util.Map"] }, {"name":"get","parameterTypes":["java.lang.String"] }, {"name":"getMeters","parameterTypes":[] }, {"name":"isClosed","parameterTypes":[] }, {"name":"more","parameterTypes":[] }, {"name":"remove","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, {"name":"remove","parameterTypes":["io.micrometer.core.instrument.Meter"] }, {"name":"removeByPreFilterId","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, {"name":"summary","parameterTypes":["java.lang.String","java.lang.Iterable"] }, {"name":"summary","parameterTypes":["java.lang.String","java.lang.String[]"] }, {"name":"timer","parameterTypes":["java.lang.String","java.lang.Iterable"] }, {"name":"timer","parameterTypes":["java.lang.String","java.lang.String[]"] }]
},
{
  "name":"io.micrometer.core.instrument.MeterRegistry$Config"
},
{
  "name":"io.micrometer.core.instrument.MeterRegistry$More"
},
{
  "name":"io.micrometer.core.instrument.Statistic"
},
{
  "name":"io.micrometer.core.instrument.Tag"
},
{
  "name":"io.micrometer.core.instrument.Tags"
},
{
  "name":"io.micrometer.core.instrument.TimeGauge"
},
{
  "name":"io.micrometer.core.instrument.Timer"
},
{
  "name":"io.micrometer.core.instrument.Timer$Builder"
},
{
  "name":"io.micrometer.core.instrument.binder.MeterBinder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.jetty.JettyServerThreadPoolMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.kafka.KafkaStreamsMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.logging.Log4j2Metrics"
},
{
  "name":"io.micrometer.core.instrument.binder.logging.LogbackMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.system.ProcessorMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.system.UptimeMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.tomcat.TomcatMetrics"
},
{
  "name":"io.micrometer.core.instrument.composite.CompositeMeterRegistry"
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"map","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }]
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilter$9",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"accept","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, {"name":"close","parameterTypes":[] }, {"name":"configure","parameterTypes":["io.micrometer.core.instrument.Meter$Id","io.micrometer.core.instrument.distribution.DistributionStatisticConfig"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilterReply"
},
{
  "name":"io.micrometer.core.instrument.config.MeterRegistryConfig",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"requireValid","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.config.NamingConvention"
},
{
  "name":"io.micrometer.core.instrument.config.validate.Validated"
},
{
  "name":"io.micrometer.core.instrument.config.validate.ValidationException"
},
{
  "name":"io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
},
{
  "name":"io.micrometer.core.instrument.distribution.HistogramSupport"
},
{
  "name":"io.micrometer.core.instrument.distribution.TimeWindowMax",
  "fields":[{"name":"rotating"}]
},
{
  "name":"io.micrometer.core.instrument.distribution.TimeWindowSum",
  "fields":[{"name":"rotating"}]
},
{
  "name":"io.micrometer.core.instrument.distribution.pause.PauseDetector"
},
{
  "name":"io.micrometer.core.instrument.observation.DefaultMeterObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"onEvent","parameterTypes":["io.micrometer.observation.Observation$Event","io.micrometer.observation.Observation$Context"] }, {"name":"onStart","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onStop","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.observation.DefaultMeterObservationHandler$IgnoredMeters"
},
{
  "name":"io.micrometer.core.instrument.observation.MeterObservationHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }]
},
{
  "name":"io.micrometer.core.instrument.search.RequiredSearch"
},
{
  "name":"io.micrometer.core.instrument.search.Search"
},
{
  "name":"io.micrometer.datadog.DatadogMeterRegistry"
},
{
  "name":"io.micrometer.dynatrace.DynatraceMeterRegistry"
},
{
  "name":"io.micrometer.elastic.ElasticMeterRegistry"
},
{
  "name":"io.micrometer.ganglia.GangliaMeterRegistry"
},
{
  "name":"io.micrometer.graphite.GraphiteMeterRegistry"
},
{
  "name":"io.micrometer.humio.HumioMeterRegistry"
},
{
  "name":"io.micrometer.influx.InfluxMeterRegistry"
},
{
  "name":"io.micrometer.jmx.JmxMeterRegistry"
},
{
  "name":"io.micrometer.kairos.KairosMeterRegistry"
},
{
  "name":"io.micrometer.newrelic.NewRelicMeterRegistry"
},
{
  "name":"io.micrometer.observation.Observation"
},
{
  "name":"io.micrometer.observation.Observation$Context"
},
{
  "name":"io.micrometer.observation.Observation$Event"
},
{
  "name":"io.micrometer.observation.Observation$Scope"
},
{
  "name":"io.micrometer.observation.ObservationFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.observation.ObservationHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"onError","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onScopeClosed","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onScopeOpened","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onScopeReset","parameterTypes":["io.micrometer.observation.Observation$Context"] }]
},
{
  "name":"io.micrometer.observation.ObservationPredicate",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.observation.ObservationRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.observation.ObservationRegistry$ObservationConfig"
},
{
  "name":"io.micrometer.observation.SimpleObservationRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getCurrentObservation","parameterTypes":[] }, {"name":"getCurrentObservationScope","parameterTypes":[] }, {"name":"isNoop","parameterTypes":[] }, {"name":"observationConfig","parameterTypes":[] }, {"name":"setCurrentObservationScope","parameterTypes":["io.micrometer.observation.Observation$Scope"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.prometheus.PrometheusMeterRegistry"
},
{
  "name":"io.micrometer.prometheusmetrics.MicrometerCollector"
},
{
  "name":"io.micrometer.prometheusmetrics.MicrometerCollector$Family"
},
{
  "name":"io.micrometer.prometheusmetrics.PrometheusConfig",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"validate","parameterTypes":[] }]
},
{
  "name":"io.micrometer.prometheusmetrics.PrometheusCounter"
},
{
  "name":"io.micrometer.prometheusmetrics.PrometheusDistributionSummary"
},
{
  "name":"io.micrometer.prometheusmetrics.PrometheusMeterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.prometheusmetrics.PrometheusTimer"
},
{
  "name":"io.micrometer.registry.otlp.OtlpMeterRegistry"
},
{
  "name":"io.micrometer.signalfx.SignalFxMeterRegistry"
},
{
  "name":"io.micrometer.stackdriver.StackdriverMeterRegistry"
},
{
  "name":"io.micrometer.statsd.StatsdMeterRegistry"
},
{
  "name":"io.micrometer.tracing.Tracer"
},
{
  "name":"io.micrometer.tracing.otel.bridge.OtelTracer"
},
{
  "name":"io.netty.buffer.PooledByteBufAllocator"
},
{
  "name":"io.netty.util.NettyRuntime"
},
{
  "name":"io.opentelemetry.sdk.OpenTelemetrySdk"
},
{
  "name":"io.prometheus.metrics.model.registry.Collector"
},
{
  "name":"io.prometheus.metrics.model.registry.MultiCollector"
},
{
  "name":"io.prometheus.metrics.model.registry.PrometheusRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.prometheus.metrics.model.registry.PrometheusScrapeRequest"
},
{
  "name":"io.prometheus.metrics.model.snapshots.DataPointSnapshot"
},
{
  "name":"io.prometheus.metrics.model.snapshots.Exemplar"
},
{
  "name":"io.prometheus.metrics.model.snapshots.Exemplars"
},
{
  "name":"io.prometheus.metrics.model.snapshots.Labels"
},
{
  "name":"io.prometheus.metrics.model.snapshots.MetricMetadata"
},
{
  "name":"io.prometheus.metrics.model.snapshots.MetricSnapshot"
},
{
  "name":"io.prometheus.metrics.model.snapshots.MetricSnapshots"
},
{
  "name":"io.r2dbc.pool.ConnectionPool"
},
{
  "name":"io.r2dbc.proxy.ProxyConnectionFactory"
},
{
  "name":"io.r2dbc.spi.ConnectionFactory"
},
{
  "name":"io.reactivex.rxjava3.core.Flowable"
},
{
  "name":"io.rsocket.RSocket"
},
{
  "name":"io.rsocket.core.RSocketServer"
},
{
  "name":"io.smallrye.mutiny.Multi"
},
{
  "name":"io.swagger.v3.core.converter.AnnotatedType"
},
{
  "name":"io.swagger.v3.core.converter.ModelConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"isOpenapi31","parameterTypes":[] }]
},
{
  "name":"io.swagger.v3.core.converter.ModelConverterContext"
},
{
  "name":"io.swagger.v3.core.converter.ModelConverters",
  "fields":[{"name":"converters"}]
},
{
  "name":"io.swagger.v3.core.filter.OpenAPISpecFilter"
},
{
  "name":"io.swagger.v3.core.filter.SpecFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"filter","parameterTypes":["io.swagger.v3.oas.models.OpenAPI","io.swagger.v3.core.filter.OpenAPISpecFilter","java.util.Map","java.util.Map","java.util.Map"] }]
},
{
  "name":"io.swagger.v3.core.util.ObjectMapperFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.ExternalDocumentation",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.Hidden",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.OpenAPI31",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.OpenAPIDefinition"
},
{
  "name":"io.swagger.v3.oas.annotations.Operation",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.Parameter",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.Parameters"
},
{
  "name":"io.swagger.v3.oas.annotations.StringToClassMapItem",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.enums.ParameterIn"
},
{
  "name":"io.swagger.v3.oas.annotations.extensions.Extension",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.extensions.ExtensionProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.headers.Header",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.links.Link",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.links.LinkParameter",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.ArraySchema",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.Content",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.DependentRequired",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.DependentSchema",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.DiscriminatorMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.Encoding",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.ExampleObject",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.Schema",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.SchemaProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.parameters.RequestBody",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.responses.ApiResponse",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.responses.ApiResponses"
},
{
  "name":"io.swagger.v3.oas.annotations.security.OAuthFlow"
},
{
  "name":"io.swagger.v3.oas.annotations.security.OAuthFlows"
},
{
  "name":"io.swagger.v3.oas.annotations.security.OAuthScope"
},
{
  "name":"io.swagger.v3.oas.annotations.security.SecurityRequirement",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.security.SecurityScheme"
},
{
  "name":"io.swagger.v3.oas.annotations.servers.Server",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.servers.ServerVariable",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.tags.Tag",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.tags.Tags"
},
{
  "name":"io.swagger.v3.oas.models.Components"
},
{
  "name":"io.swagger.v3.oas.models.ExternalDocumentation"
},
{
  "name":"io.swagger.v3.oas.models.OpenAPI",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"io.swagger.v3.oas.models.Operation"
},
{
  "name":"io.swagger.v3.oas.models.PathItem"
},
{
  "name":"io.swagger.v3.oas.models.Paths"
},
{
  "name":"io.swagger.v3.oas.models.SpecVersion"
},
{
  "name":"io.swagger.v3.oas.models.examples.Example"
},
{
  "name":"io.swagger.v3.oas.models.info.Info"
},
{
  "name":"io.swagger.v3.oas.models.media.ComposedSchema"
},
{
  "name":"io.swagger.v3.oas.models.media.Content"
},
{
  "name":"io.swagger.v3.oas.models.media.MediaType"
},
{
  "name":"io.swagger.v3.oas.models.media.Schema"
},
{
  "name":"io.swagger.v3.oas.models.parameters.Parameter"
},
{
  "name":"io.swagger.v3.oas.models.parameters.RequestBody"
},
{
  "name":"io.swagger.v3.oas.models.responses.ApiResponse"
},
{
  "name":"io.swagger.v3.oas.models.responses.ApiResponses"
},
{
  "name":"io.swagger.v3.oas.models.security.Scopes"
},
{
  "name":"io.swagger.v3.oas.models.security.SecurityRequirement"
},
{
  "name":"io.swagger.v3.oas.models.security.SecurityScheme"
},
{
  "name":"io.swagger.v3.oas.models.security.SecurityScheme$In"
},
{
  "name":"io.swagger.v3.oas.models.security.SecurityScheme$Type"
},
{
  "name":"io.swagger.v3.oas.models.servers.Server"
},
{
  "name":"io.swagger.v3.oas.models.tags.Tag"
},
{
  "name":"io.undertow.Undertow"
},
{
  "name":"io.undertow.websockets.jsr.Bootstrap"
},
{
  "name":"io.vavr.control.Either"
},
{
  "name":"io.vavr.control.Option"
},
{
  "name":"io.vavr.control.Try"
},
{
  "name":"jakarta.activation.MimeType"
},
{
  "name":"jakarta.annotation.ManagedBean"
},
{
  "name":"jakarta.annotation.Nullable",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.annotation.PostConstruct",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.annotation.PreDestroy"
},
{
  "name":"jakarta.annotation.Resource"
},
{
  "name":"jakarta.ejb.Asynchronous"
},
{
  "name":"jakarta.ejb.EJB"
},
{
  "name":"jakarta.ejb.TransactionAttribute"
},
{
  "name":"jakarta.enterprise.concurrent.Asynchronous"
},
{
  "name":"jakarta.faces.context.FacesContext"
},
{
  "name":"jakarta.inject.Inject"
},
{
  "name":"jakarta.inject.Named"
},
{
  "name":"jakarta.inject.Provider"
},
{
  "name":"jakarta.inject.Qualifier"
},
{
  "name":"jakarta.jms.ConnectionFactory"
},
{
  "name":"jakarta.jms.Message"
},
{
  "name":"jakarta.json.bind.Jsonb"
},
{
  "name":"jakarta.mail.internet.MimeMessage"
},
{
  "name":"jakarta.persistence.Access",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.AccessType"
},
{
  "name":"jakarta.persistence.AttributeConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.persistence.AttributeOverride",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.persistence.AttributeOverrides",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.Cache"
},
{
  "name":"jakarta.persistence.CacheRetrieveMode"
},
{
  "name":"jakarta.persistence.CacheStoreMode"
},
{
  "name":"jakarta.persistence.CollectionTable",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.Column",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.Converter",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.persistence.ElementCollection",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.Embeddable",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.Embedded",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.EmbeddedId",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.Entity",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.EntityGraph"
},
{
  "name":"jakarta.persistence.EntityListeners",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.EntityManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["jdk.proxy2.$Proxy243"] }, {"name":"clear","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"contains","parameterTypes":["java.lang.Object"] }, {"name":"createEntityGraph","parameterTypes":["java.lang.Class"] }, {"name":"createEntityGraph","parameterTypes":["java.lang.String"] }, {"name":"createNamedQuery","parameterTypes":["java.lang.String"] }, {"name":"createNamedQuery","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"createNamedStoredProcedureQuery","parameterTypes":["java.lang.String"] }, {"name":"createNativeQuery","parameterTypes":["java.lang.String"] }, {"name":"createNativeQuery","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"createNativeQuery","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"createQuery","parameterTypes":["jakarta.persistence.criteria.CriteriaDelete"] }, {"name":"createQuery","parameterTypes":["jakarta.persistence.criteria.CriteriaQuery"] }, {"name":"createQuery","parameterTypes":["jakarta.persistence.criteria.CriteriaUpdate"] }, {"name":"createQuery","parameterTypes":["java.lang.String"] }, {"name":"createQuery","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"createStoredProcedureQuery","parameterTypes":["java.lang.String"] }, {"name":"createStoredProcedureQuery","parameterTypes":["java.lang.String","java.lang.Class[]"] }, {"name":"createStoredProcedureQuery","parameterTypes":["java.lang.String","java.lang.String[]"] }, {"name":"detach","parameterTypes":["java.lang.Object"] }, {"name":"find","parameterTypes":["java.lang.Class","java.lang.Object"] }, {"name":"find","parameterTypes":["java.lang.Class","java.lang.Object","jakarta.persistence.LockModeType"] }, {"name":"find","parameterTypes":["java.lang.Class","java.lang.Object","jakarta.persistence.LockModeType","java.util.Map"] }, {"name":"find","parameterTypes":["java.lang.Class","java.lang.Object","java.util.Map"] }, {"name":"flush","parameterTypes":[] }, {"name":"from","parameterTypes":["jdk.proxy2.$Proxy243"] }, {"name":"getCriteriaBuilder","parameterTypes":[] }, {"name":"getDelegate","parameterTypes":[] }, {"name":"getEntityGraph","parameterTypes":["java.lang.String"] }, {"name":"getEntityGraphs","parameterTypes":["java.lang.Class"] }, {"name":"getEntityManagerFactory","parameterTypes":[] }, {"name":"getFlushMode","parameterTypes":[] }, {"name":"getLockMode","parameterTypes":["java.lang.Object"] }, {"name":"getMetamodel","parameterTypes":[] }, {"name":"getProperties","parameterTypes":[] }, {"name":"getReference","parameterTypes":["java.lang.Class","java.lang.Object"] }, {"name":"getTransaction","parameterTypes":[] }, {"name":"isJoinedToTransaction","parameterTypes":[] }, {"name":"isOpen","parameterTypes":[] }, {"name":"joinTransaction","parameterTypes":[] }, {"name":"lock","parameterTypes":["java.lang.Object","jakarta.persistence.LockModeType"] }, {"name":"lock","parameterTypes":["java.lang.Object","jakarta.persistence.LockModeType","java.util.Map"] }, {"name":"merge","parameterTypes":["java.lang.Object"] }, {"name":"of","parameterTypes":["jdk.proxy2.$Proxy243"] }, {"name":"persist","parameterTypes":["java.lang.Object"] }, {"name":"refresh","parameterTypes":["java.lang.Object"] }, {"name":"refresh","parameterTypes":["java.lang.Object","jakarta.persistence.LockModeType"] }, {"name":"refresh","parameterTypes":["java.lang.Object","jakarta.persistence.LockModeType","java.util.Map"] }, {"name":"refresh","parameterTypes":["java.lang.Object","java.util.Map"] }, {"name":"remove","parameterTypes":["java.lang.Object"] }, {"name":"setFlushMode","parameterTypes":["jakarta.persistence.FlushModeType"] }, {"name":"setProperty","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"unwrap","parameterTypes":["java.lang.Class"] }, {"name":"valueOf","parameterTypes":["jdk.proxy2.$Proxy243"] }]
},
{
  "name":"jakarta.persistence.EntityManagerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["jdk.proxy2.$Proxy237"] }, {"name":"addNamedEntityGraph","parameterTypes":["java.lang.String","jakarta.persistence.EntityGraph"] }, {"name":"addNamedQuery","parameterTypes":["java.lang.String","jakarta.persistence.Query"] }, {"name":"createEntityManager","parameterTypes":[] }, {"name":"createEntityManager","parameterTypes":["jakarta.persistence.SynchronizationType"] }, {"name":"createEntityManager","parameterTypes":["jakarta.persistence.SynchronizationType","java.util.Map"] }, {"name":"createEntityManager","parameterTypes":["java.util.Map"] }, {"name":"from","parameterTypes":["jdk.proxy2.$Proxy237"] }, {"name":"getCriteriaBuilder","parameterTypes":[] }, {"name":"getMetamodel","parameterTypes":[] }, {"name":"getPersistenceUnitUtil","parameterTypes":[] }, {"name":"getProperties","parameterTypes":[] }, {"name":"isOpen","parameterTypes":[] }, {"name":"of","parameterTypes":["jdk.proxy2.$Proxy237"] }, {"name":"unwrap","parameterTypes":["java.lang.Class"] }, {"name":"valueOf","parameterTypes":["jdk.proxy2.$Proxy237"] }]
},
{
  "name":"jakarta.persistence.Enumerated",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.FlushModeType"
},
{
  "name":"jakarta.persistence.ForeignKey",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.persistence.GeneratedValue",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.Id",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.Index",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.persistence.JoinColumn",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.JoinColumns",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.JoinTable",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.Lob",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.LockModeType"
},
{
  "name":"jakarta.persistence.ManyToMany",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.ManyToOne",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.MappedSuperclass",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.OneToMany",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.OneToOne",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.Persistence",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getPersistenceUtil","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.PersistenceContext",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.persistence.PersistenceException"
},
{
  "name":"jakarta.persistence.PersistenceProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.persistence.PersistenceUnitUtil"
},
{
  "name":"jakarta.persistence.PostLoad",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.PrePersist",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.PreUpdate",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.Query"
},
{
  "name":"jakarta.persistence.SequenceGenerator",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.SharedCacheMode"
},
{
  "name":"jakarta.persistence.SynchronizationType"
},
{
  "name":"jakarta.persistence.Table",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.Temporal",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.Transient",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.TypedQuery"
},
{
  "name":"jakarta.persistence.UniqueConstraint",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.persistence.ValidationMode"
},
{
  "name":"jakarta.persistence.criteria.CriteriaBuilder"
},
{
  "name":"jakarta.persistence.criteria.CriteriaDelete"
},
{
  "name":"jakarta.persistence.criteria.CriteriaQuery"
},
{
  "name":"jakarta.persistence.criteria.CriteriaUpdate"
},
{
  "name":"jakarta.persistence.criteria.Root"
},
{
  "name":"jakarta.persistence.metamodel.Metamodel"
},
{
  "name":"jakarta.persistence.spi.PersistenceProvider"
},
{
  "name":"jakarta.persistence.spi.PersistenceUnitInfo"
},
{
  "name":"jakarta.servlet.DispatcherType"
},
{
  "name":"jakarta.servlet.Filter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.web.FilterChainProxy"] }, {"name":"<init>","parameterTypes":["org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x0000008801e97db0"] }, {"name":"destroy","parameterTypes":[] }, {"name":"from","parameterTypes":["org.springframework.security.web.FilterChainProxy"] }, {"name":"from","parameterTypes":["org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x0000008801e97db0"] }, {"name":"init","parameterTypes":["jakarta.servlet.FilterConfig"] }, {"name":"of","parameterTypes":["org.springframework.security.web.FilterChainProxy"] }, {"name":"of","parameterTypes":["org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x0000008801e97db0"] }, {"name":"valueOf","parameterTypes":["org.springframework.security.web.FilterChainProxy"] }, {"name":"valueOf","parameterTypes":["org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda/0x0000008801e97db0"] }]
},
{
  "name":"jakarta.servlet.FilterChain"
},
{
  "name":"jakarta.servlet.FilterConfig"
},
{
  "name":"jakarta.servlet.FilterRegistration$Dynamic"
},
{
  "name":"jakarta.servlet.GenericFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.servlet.GenericServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInitParameter","parameterTypes":["java.lang.String"] }, {"name":"getInitParameterNames","parameterTypes":[] }, {"name":"getServletConfig","parameterTypes":[] }, {"name":"getServletContext","parameterTypes":[] }, {"name":"getServletInfo","parameterTypes":[] }, {"name":"log","parameterTypes":["java.lang.String"] }, {"name":"log","parameterTypes":["java.lang.String","java.lang.Throwable"] }]
},
{
  "name":"jakarta.servlet.MultipartConfigElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"jakarta.servlet.Registration$Dynamic"
},
{
  "name":"jakarta.servlet.Servlet",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.servlet.ServletConfig",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.servlet.ServletContext",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.servlet.ServletException"
},
{
  "name":"jakarta.servlet.ServletRegistration"
},
{
  "name":"jakarta.servlet.ServletRegistration$Dynamic"
},
{
  "name":"jakarta.servlet.ServletRequest"
},
{
  "name":"jakarta.servlet.ServletResponse"
},
{
  "name":"jakarta.servlet.http.HttpServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"init","parameterTypes":["jakarta.servlet.ServletConfig"] }, {"name":"service","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse"] }]
},
{
  "name":"jakarta.servlet.http.HttpServletRequest"
},
{
  "name":"jakarta.servlet.http.HttpServletResponse"
},
{
  "name":"jakarta.servlet.http.HttpSession"
},
{
  "name":"jakarta.servlet.jsp.jstl.core.Config"
},
{
  "name":"jakarta.transaction.Transaction"
},
{
  "name":"jakarta.transaction.TransactionManager"
},
{
  "name":"jakarta.transaction.Transactional"
},
{
  "name":"jakarta.validation.ClockProvider"
},
{
  "name":"jakarta.validation.Configuration"
},
{
  "name":"jakarta.validation.Constraint",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.validation.ConstraintValidatorFactory"
},
{
  "name":"jakarta.validation.ConstraintViolation"
},
{
  "name":"jakarta.validation.ConstraintViolationException"
},
{
  "name":"jakarta.validation.MessageInterpolator"
},
{
  "name":"jakarta.validation.ParameterNameProvider"
},
{
  "name":"jakarta.validation.TraversableResolver"
},
{
  "name":"jakarta.validation.Valid",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.validation.ValidationProviderResolver"
},
{
  "name":"jakarta.validation.Validator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.validation.ValidatorContext"
},
{
  "name":"jakarta.validation.ValidatorFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.validation.bootstrap.GenericBootstrap"
},
{
  "name":"jakarta.validation.constraints.DecimalMin",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.validation.constraints.Max",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"groups","parameterTypes":[] }, {"name":"message","parameterTypes":[] }, {"name":"payload","parameterTypes":[] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.validation.constraints.Min",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"groups","parameterTypes":[] }, {"name":"message","parameterTypes":[] }, {"name":"payload","parameterTypes":[] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.validation.constraints.NotBlank",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"groups","parameterTypes":[] }, {"name":"message","parameterTypes":[] }, {"name":"payload","parameterTypes":[] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.validation.constraints.NotNull",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"groups","parameterTypes":[] }, {"name":"message","parameterTypes":[] }, {"name":"payload","parameterTypes":[] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.validation.constraints.Positive",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.validation.constraints.PositiveOrZero",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.validation.executable.ExecutableValidator"
},
{
  "name":"jakarta.validation.metadata.BeanDescriptor"
},
{
  "name":"jakarta.validation.metadata.ConstraintDescriptor"
},
{
  "name":"jakarta.websocket.server.ServerContainer"
},
{
  "name":"jakarta.xml.bind.Binder"
},
{
  "name":"jakarta.xml.ws.WebServiceRef"
},
{
  "name":"java.io.Closeable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.io.Console",
  "methods":[{"name":"charset","parameterTypes":[] }, {"name":"isTerminal","parameterTypes":[] }]
},
{
  "name":"java.io.DataInput"
},
{
  "name":"java.io.DataOutput"
},
{
  "name":"java.io.File"
},
{
  "name":"java.io.IOException"
},
{
  "name":"java.io.InputStream"
},
{
  "name":"java.io.InvalidObjectException"
},
{
  "name":"java.io.ObjectInputStream"
},
{
  "name":"java.io.ObjectStreamException"
},
{
  "name":"java.io.OutputStream"
},
{
  "name":"java.io.PrintWriter"
},
{
  "name":"java.io.Reader"
},
{
  "name":"java.io.Serializable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setInternalId","parameterTypes":["java.lang.Long"] }, {"name":"setMappingId","parameterTypes":["java.lang.String"] }, {"name":"setType","parameterTypes":["org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.domain.entity.CodeMappingType"] }]
},
{
  "name":"java.io.Writer"
},
{
  "name":"java.lang.Appendable"
},
{
  "name":"java.lang.AutoCloseable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Boolean",
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"TYPE"}],
  "methods":[{"name":"toboolean","parameterTypes":[] }]
},
{
  "name":"java.lang.Byte",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.CharSequence"
},
{
  "name":"java.lang.Character",
  "fields":[{"name":"TYPE"}],
  "methods":[{"name":"tochar","parameterTypes":[] }]
},
{
  "name":"java.lang.Class",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"accessFlags","parameterTypes":[] }, {"name":"from","parameterTypes":["java.lang.String"] }, {"name":"getAnnotatedInterfaces","parameterTypes":[] }, {"name":"getAnnotatedSuperclass","parameterTypes":[] }, {"name":"getDeclaredMethod","parameterTypes":["java.lang.String","java.lang.Class[]"] }, {"name":"getMethod","parameterTypes":["java.lang.String","java.lang.Class[]"] }, {"name":"getModule","parameterTypes":[] }, {"name":"getNestHost","parameterTypes":[] }, {"name":"getNestMembers","parameterTypes":[] }, {"name":"getPermittedSubclasses","parameterTypes":[] }, {"name":"getRecordComponents","parameterTypes":[] }, {"name":"isNestmateOf","parameterTypes":["java.lang.Class"] }, {"name":"isRecord","parameterTypes":[] }, {"name":"isSealed","parameterTypes":[] }, {"name":"of","parameterTypes":["java.lang.String"] }, {"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.ClassLoader",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"defineClass","parameterTypes":["java.lang.String","byte[]","int","int","java.security.ProtectionDomain"] }, {"name":"getUnnamedModule","parameterTypes":[] }]
},
{
  "name":"java.lang.ClassNotFoundException"
},
{
  "name":"java.lang.CloneNotSupportedException"
},
{
  "name":"java.lang.Comparable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Configurable"
},
{
  "name":"java.lang.Deprecated",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Double",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Enum",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"compareTo","parameterTypes":["java.lang.Object"] }, {"name":"describeConstable","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"java.lang.Enum$EnumDesc"
},
{
  "name":"java.lang.Exception"
},
{
  "name":"java.lang.Float",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.FunctionalInterface"
},
{
  "name":"java.lang.IllegalArgumentException"
},
{
  "name":"java.lang.IllegalStateException"
},
{
  "name":"java.lang.Integer",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.InterruptedException"
},
{
  "name":"java.lang.Iterable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"forEach","parameterTypes":["java.util.function.Consumer"] }, {"name":"spliterator","parameterTypes":[] }]
},
{
  "name":"java.lang.LinkageError"
},
{
  "name":"java.lang.Long",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Module",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addExports","parameterTypes":["java.lang.String","java.lang.Module"] }, {"name":"canRead","parameterTypes":["java.lang.Module"] }, {"name":"getClassLoader","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getPackages","parameterTypes":[] }, {"name":"getResourceAsStream","parameterTypes":["java.lang.String"] }, {"name":"isExported","parameterTypes":["java.lang.String"] }, {"name":"isExported","parameterTypes":["java.lang.String","java.lang.Module"] }, {"name":"isNamed","parameterTypes":[] }, {"name":"isOpen","parameterTypes":["java.lang.String","java.lang.Module"] }]
},
{
  "name":"java.lang.Number"
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.CustomTransactionBatchRepositoryImpl"] }, {"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.CustomTransactionRepositoryImpl"] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"from","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.CustomTransactionBatchRepositoryImpl"] }, {"name":"from","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.CustomTransactionRepositoryImpl"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"of","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.CustomTransactionBatchRepositoryImpl"] }, {"name":"of","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.CustomTransactionRepositoryImpl"] }, {"name":"toString","parameterTypes":[] }, {"name":"valueOf","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.CustomTransactionBatchRepositoryImpl"] }, {"name":"valueOf","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.CustomTransactionRepositoryImpl"] }]
},
{
  "name":"java.lang.Package"
},
{
  "name":"java.lang.Record"
},
{
  "name":"java.lang.Runnable"
},
{
  "name":"java.lang.Runtime",
  "methods":[{"name":"version","parameterTypes":[] }]
},
{
  "name":"java.lang.Runtime$Version",
  "methods":[{"name":"feature","parameterTypes":[] }]
},
{
  "name":"java.lang.RuntimeException"
},
{
  "name":"java.lang.SafeVarargs"
},
{
  "name":"java.lang.SecurityManager",
  "methods":[{"name":"checkPermission","parameterTypes":["java.security.Permission"] }]
},
{
  "name":"java.lang.Short",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.StackTraceElement",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.String",
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.StringBuilder"
},
{
  "name":"java.lang.System",
  "methods":[{"name":"getSecurityManager","parameterTypes":[] }]
},
{
  "name":"java.lang.Thread",
  "fields":[{"name":"threadLocalRandomProbe"}],
  "methods":[{"name":"ofVirtual","parameterTypes":[] }]
},
{
  "name":"java.lang.Thread$Builder",
  "methods":[{"name":"name","parameterTypes":["java.lang.String","long"] }, {"name":"start","parameterTypes":["java.lang.Runnable"] }]
},
{
  "name":"java.lang.Thread$State"
},
{
  "name":"java.lang.ThreadGroup"
},
{
  "name":"java.lang.Throwable",
  "allDeclaredFields":true
},
{
  "name":"java.lang.UnsupportedOperationException"
},
{
  "name":"java.lang.VirtualThread"
},
{
  "name":"java.lang.Void",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.WrongThreadException"
},
{
  "name":"java.lang.annotation.Annotation"
},
{
  "name":"java.lang.annotation.Documented",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Inherited",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Repeatable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Retention",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.annotation.Target",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.constant.ClassDesc"
},
{
  "name":"java.lang.constant.Constable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.invoke.MethodHandles",
  "methods":[{"name":"privateLookupIn","parameterTypes":["java.lang.Class","java.lang.invoke.MethodHandles$Lookup"] }]
},
{
  "name":"java.lang.invoke.MethodHandles$Lookup",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class","int"] }, {"name":"defineClass","parameterTypes":["byte[]"] }, {"name":"lookupClass","parameterTypes":[] }, {"name":"lookupModes","parameterTypes":[] }]
},
{
  "name":"java.lang.invoke.SerializedLambda"
},
{
  "name":"java.lang.invoke.TypeDescriptor$OfField",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.BufferPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ClassLoadingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.CompilationMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.LockInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.ManagementPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.management.MemoryMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryManagerMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryUsage",
  "queryAllPublicMethods":true,
  "methods":[{"name":"from","parameterTypes":["javax.management.openmbean.CompositeData"] }]
},
{
  "name":"java.lang.management.MonitorInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.OperatingSystemMXBean"
},
{
  "name":"java.lang.management.PlatformLoggingMXBean",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getLoggerLevel","parameterTypes":["java.lang.String"] }, {"name":"getLoggerNames","parameterTypes":[] }, {"name":"getParentLoggerName","parameterTypes":["java.lang.String"] }, {"name":"setLoggerLevel","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getInputArguments","parameterTypes":[] }]
},
{
  "name":"java.lang.management.ThreadInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ThreadMXBean"
},
{
  "name":"java.lang.reflect.AnnotatedArrayType",
  "methods":[{"name":"getAnnotatedGenericComponentType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.AnnotatedElement",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.AnnotatedParameterizedType",
  "methods":[{"name":"getAnnotatedActualTypeArguments","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.AnnotatedType",
  "methods":[{"name":"getType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Constructor"
},
{
  "name":"java.lang.reflect.Executable",
  "methods":[{"name":"getAnnotatedExceptionTypes","parameterTypes":[] }, {"name":"getAnnotatedParameterTypes","parameterTypes":[] }, {"name":"getAnnotatedReceiverType","parameterTypes":[] }, {"name":"getParameterCount","parameterTypes":[] }, {"name":"getParameters","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Field"
},
{
  "name":"java.lang.reflect.GenericArrayType",
  "methods":[{"name":"getGenericComponentType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.GenericDeclaration",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.Method",
  "methods":[{"name":"getAnnotatedReturnType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Parameter",
  "methods":[{"name":"getModifiers","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"isNamePresent","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.ParameterizedType",
  "methods":[{"name":"getActualTypeArguments","parameterTypes":[] }, {"name":"getOwnerType","parameterTypes":[] }, {"name":"getRawType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Proxy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.reflect.RecordComponent",
  "methods":[{"name":"getAccessor","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Type",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.TypeVariable",
  "methods":[{"name":"getBounds","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.WildcardType",
  "methods":[{"name":"getLowerBounds","parameterTypes":[] }, {"name":"getUpperBounds","parameterTypes":[] }]
},
{
  "name":"java.math.BigDecimal"
},
{
  "name":"java.math.BigInteger"
},
{
  "name":"java.net.HttpURLConnection"
},
{
  "name":"java.net.Inet6AddressImpl"
},
{
  "name":"java.net.InetAddress"
},
{
  "name":"java.net.InetAddress$CachedLookup"
},
{
  "name":"java.net.InetAddress$NameServiceAddresses"
},
{
  "name":"java.net.InetAddress$PlatformResolver"
},
{
  "name":"java.net.Proxy"
},
{
  "name":"java.net.SocketTimeoutException"
},
{
  "name":"java.net.URI"
},
{
  "name":"java.net.URL"
},
{
  "name":"java.net.URLClassLoader",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.net.UnixDomainSocketAddress",
  "methods":[{"name":"of","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.net.http.HttpClient"
},
{
  "name":"java.nio.channels.ServerSocketChannel",
  "methods":[{"name":"open","parameterTypes":["java.net.ProtocolFamily"] }]
},
{
  "name":"java.nio.channels.SocketChannel",
  "methods":[{"name":"open","parameterTypes":["java.net.ProtocolFamily"] }]
},
{
  "name":"java.nio.charset.Charset"
},
{
  "name":"java.nio.file.Path"
},
{
  "name":"java.security.AccessController",
  "methods":[{"name":"doPrivileged","parameterTypes":["java.security.PrivilegedExceptionAction"] }]
},
{
  "name":"java.security.AlgorithmParametersSpi"
},
{
  "name":"java.security.KeyStoreSpi"
},
{
  "name":"java.security.NoSuchAlgorithmException"
},
{
  "name":"java.security.PrivateKey"
},
{
  "name":"java.security.SecureClassLoader",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.security.interfaces.RSAPublicKey"
},
{
  "name":"java.security.spec.InvalidKeySpecException"
},
{
  "name":"java.sql.CallableStatement"
},
{
  "name":"java.sql.Connection",
  "methods":[{"name":"getMetaData","parameterTypes":[] }]
},
{
  "name":"java.sql.ConnectionBuilder"
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.Driver"
},
{
  "name":"java.sql.DriverManager"
},
{
  "name":"java.sql.PreparedStatement"
},
{
  "name":"java.sql.ResultSet"
},
{
  "name":"java.sql.SQLException",
  "fields":[{"name":"next"}]
},
{
  "name":"java.sql.SQLFeatureNotSupportedException"
},
{
  "name":"java.sql.SQLWarning"
},
{
  "name":"java.sql.ShardingKeyBuilder"
},
{
  "name":"java.sql.Statement"
},
{
  "name":"java.sql.Timestamp"
},
{
  "name":"java.sql.Types",
  "allPublicFields":true
},
{
  "name":"java.sql.Wrapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.text.CompactNumberFormat"
},
{
  "name":"java.text.DateFormat"
},
{
  "name":"java.text.ListFormat"
},
{
  "name":"java.text.NumberFormat",
  "methods":[{"name":"isStrict","parameterTypes":[] }]
},
{
  "name":"java.time.Clock",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.time.Clock$SystemClock",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getZone","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"instant","parameterTypes":[] }, {"name":"millis","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }, {"name":"withZone","parameterTypes":["java.time.ZoneId"] }]
},
{
  "name":"java.time.Duration",
  "methods":[{"name":"isPositive","parameterTypes":[] }]
},
{
  "name":"java.time.Instant"
},
{
  "name":"java.time.InstantSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.time.LocalDate"
},
{
  "name":"java.time.LocalDateTime"
},
{
  "name":"java.time.YearMonth"
},
{
  "name":"java.time.ZoneId"
},
{
  "name":"java.time.temporal.TemporalAccessor"
},
{
  "name":"java.util.ArrayList",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.Collection"
},
{
  "name":"java.util.Comparator"
},
{
  "name":"java.util.Currency"
},
{
  "name":"java.util.Date"
},
{
  "name":"java.util.EnumMap"
},
{
  "name":"java.util.EnumSet"
},
{
  "name":"java.util.Enumeration"
},
{
  "name":"java.util.EventListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.HashMap"
},
{
  "name":"java.util.HashSet"
},
{
  "name":"java.util.Iterator"
},
{
  "name":"java.util.LinkedHashMap"
},
{
  "name":"java.util.LinkedHashSet"
},
{
  "name":"java.util.List"
},
{
  "name":"java.util.Locale"
},
{
  "name":"java.util.Map"
},
{
  "name":"java.util.Map$Entry"
},
{
  "name":"java.util.Map_"
},
{
  "name":"java.util.NavigableSet"
},
{
  "name":"java.util.Optional"
},
{
  "name":"java.util.Properties"
},
{
  "name":"java.util.PropertyPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.util.SequencedCollection"
},
{
  "name":"java.util.ServiceLoader"
},
{
  "name":"java.util.Set"
},
{
  "name":"java.util.SortedSet",
  "methods":[{"name":"getFirst","parameterTypes":[] }]
},
{
  "name":"java.util.Spliterator"
},
{
  "name":"java.util.TimeZone"
},
{
  "name":"java.util.TreeMap"
},
{
  "name":"java.util.concurrent.BlockingQueue"
},
{
  "name":"java.util.concurrent.Callable",
  "methods":[{"name":"call","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.CompletableFuture"
},
{
  "name":"java.util.concurrent.CompletableFuture$AsyncRun"
},
{
  "name":"java.util.concurrent.ConcurrentMap"
},
{
  "name":"java.util.concurrent.CountDownLatch"
},
{
  "name":"java.util.concurrent.ExecutionException"
},
{
  "name":"java.util.concurrent.Executor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.concurrent.ExecutorService"
},
{
  "name":"java.util.concurrent.Executors$RunnableAdapter"
},
{
  "name":"java.util.concurrent.ForkJoinTask",
  "fields":[{"name":"aux"}, {"name":"status"}]
},
{
  "name":"java.util.concurrent.Future",
  "methods":[{"name":"state","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.FutureTask"
},
{
  "name":"java.util.concurrent.RejectedExecutionHandler"
},
{
  "name":"java.util.concurrent.ScheduledExecutorService"
},
{
  "name":"java.util.concurrent.ScheduledFuture"
},
{
  "name":"java.util.concurrent.ScheduledThreadPoolExecutor"
},
{
  "name":"java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask"
},
{
  "name":"java.util.concurrent.ThreadFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.concurrent.ThreadPoolExecutor"
},
{
  "name":"java.util.concurrent.ThreadPoolExecutor$Worker"
},
{
  "name":"java.util.concurrent.TimeUnit"
},
{
  "name":"java.util.concurrent.TimeoutException"
},
{
  "name":"java.util.concurrent.atomic.AtomicBoolean",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.AtomicInteger"
},
{
  "name":"java.util.concurrent.atomic.AtomicLong"
},
{
  "name":"java.util.concurrent.atomic.AtomicReference",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.Striped64",
  "fields":[{"name":"base"}, {"name":"cellsBusy"}]
},
{
  "name":"java.util.concurrent.atomic.Striped64$Cell",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.function.BiConsumer"
},
{
  "name":"java.util.function.BiFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"andThen","parameterTypes":["java.util.function.Function"] }, {"name":"apply","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"setAccrualsAndShortTermProvisions","parameterTypes":["java.math.BigDecimal"] }, {"name":"setAmortizationOnIntangibleAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setAssets","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Assets"] }, {"name":"setBuildOfLongTermProvision","parameterTypes":["java.math.BigDecimal"] }, {"name":"setCapital","parameterTypes":["java.math.BigDecimal"] }, {"name":"setCapital","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Capital"] }, {"name":"setCashAndCashEquivalents","parameterTypes":["java.math.BigDecimal"] }, {"name":"setCostOfGoodsAndServices","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$CostOfGoodsAndServices"] }, {"name":"setCostOfGoodsAndServices","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$CostOfGoodsAndServices"] }, {"name":"setCryptoAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setCurrentAssets","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Assets$CurrentAssets"] }, {"name":"setCurrentLiabilities","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Liabilities$CurrentLiabilities"] }, {"name":"setDepreciationAndImpairmentLossesOnTangibleAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setDirectTaxes","parameterTypes":["java.math.BigDecimal"] }, {"name":"setExternalServices","parameterTypes":["java.math.BigDecimal"] }, {"name":"setExtraordinaryExpenses","parameterTypes":["java.math.BigDecimal"] }, {"name":"setExtraordinaryIncome","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$ExtraordinaryIncome"] }, {"name":"setExtraordinaryIncome","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$ExtraordinaryIncome"] }, {"name":"setFinancialAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setFinancialExpenses","parameterTypes":["java.math.BigDecimal"] }, {"name":"setFinancialIncome","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$FinancialIncome"] }, {"name":"setFinancialIncome","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$FinancialIncome"] }, {"name":"setFinancialRevenues","parameterTypes":["java.math.BigDecimal"] }, {"name":"setGeneralAndAdministrativeExpenses","parameterTypes":["java.math.BigDecimal"] }, {"name":"setIntangibleAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setInvestments","parameterTypes":["java.math.BigDecimal"] }, {"name":"setLiabilities","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Liabilities"] }, {"name":"setNetIncomeOptionsSale","parameterTypes":["java.math.BigDecimal"] }, {"name":"setNonCurrentAssets","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Assets$NonCurrentAssets"] }, {"name":"setNonCurrentLiabilities","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Liabilities$NonCurrentLiabilities"] }, {"name":"setOperatingExpenses","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$OperatingExpenses"] }, {"name":"setOperatingExpenses","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$OperatingExpenses"] }, {"name":"setOtherIncome","parameterTypes":["java.math.BigDecimal"] }, {"name":"setOtherReceivables","parameterTypes":["java.math.BigDecimal"] }, {"name":"setOtherShortTermLiabilities","parameterTypes":["java.math.BigDecimal"] }, {"name":"setPersonnelExpenses","parameterTypes":["java.math.BigDecimal"] }, {"name":"setPrepaymentsAndOtherShortTermAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setProfitForTheYear","parameterTypes":["java.math.BigDecimal"] }, {"name":"setProvisions","parameterTypes":["java.math.BigDecimal"] }, {"name":"setRealisedGainsOnSaleOfCryptocurrencies","parameterTypes":["java.math.BigDecimal"] }, {"name":"setRentExpenses","parameterTypes":["java.math.BigDecimal"] }, {"name":"setResultsCarriedForward","parameterTypes":["java.math.BigDecimal"] }, {"name":"setRevenues","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$Revenues"] }, {"name":"setRevenues","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$Revenues"] }, {"name":"setStakingRewardsIncome","parameterTypes":["java.math.BigDecimal"] }, {"name":"setTangibleAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setTaxExpenses","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$TaxExpenses"] }, {"name":"setTaxExpenses","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$TaxExpenses"] }, {"name":"setTradeAccountsPayables","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"java.util.function.BiPredicate",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"and","parameterTypes":["java.util.function.BiPredicate"] }, {"name":"negate","parameterTypes":[] }, {"name":"or","parameterTypes":["java.util.function.BiPredicate"] }]
},
{
  "name":"java.util.function.BinaryOperator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"setAccrualsAndShortTermProvisions","parameterTypes":["java.math.BigDecimal"] }, {"name":"setAmortizationOnIntangibleAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setAssets","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Assets"] }, {"name":"setBuildOfLongTermProvision","parameterTypes":["java.math.BigDecimal"] }, {"name":"setCapital","parameterTypes":["java.math.BigDecimal"] }, {"name":"setCapital","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Capital"] }, {"name":"setCashAndCashEquivalents","parameterTypes":["java.math.BigDecimal"] }, {"name":"setCostOfGoodsAndServices","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$CostOfGoodsAndServices"] }, {"name":"setCostOfGoodsAndServices","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$CostOfGoodsAndServices"] }, {"name":"setCryptoAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setCurrentAssets","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Assets$CurrentAssets"] }, {"name":"setCurrentLiabilities","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Liabilities$CurrentLiabilities"] }, {"name":"setDepreciationAndImpairmentLossesOnTangibleAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setDirectTaxes","parameterTypes":["java.math.BigDecimal"] }, {"name":"setExternalServices","parameterTypes":["java.math.BigDecimal"] }, {"name":"setExtraordinaryExpenses","parameterTypes":["java.math.BigDecimal"] }, {"name":"setExtraordinaryIncome","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$ExtraordinaryIncome"] }, {"name":"setExtraordinaryIncome","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$ExtraordinaryIncome"] }, {"name":"setFinancialAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setFinancialExpenses","parameterTypes":["java.math.BigDecimal"] }, {"name":"setFinancialIncome","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$FinancialIncome"] }, {"name":"setFinancialIncome","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$FinancialIncome"] }, {"name":"setFinancialRevenues","parameterTypes":["java.math.BigDecimal"] }, {"name":"setGeneralAndAdministrativeExpenses","parameterTypes":["java.math.BigDecimal"] }, {"name":"setIntangibleAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setInvestments","parameterTypes":["java.math.BigDecimal"] }, {"name":"setLiabilities","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Liabilities"] }, {"name":"setNetIncomeOptionsSale","parameterTypes":["java.math.BigDecimal"] }, {"name":"setNonCurrentAssets","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Assets$NonCurrentAssets"] }, {"name":"setNonCurrentLiabilities","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Liabilities$NonCurrentLiabilities"] }, {"name":"setOperatingExpenses","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$OperatingExpenses"] }, {"name":"setOperatingExpenses","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$OperatingExpenses"] }, {"name":"setOtherIncome","parameterTypes":["java.math.BigDecimal"] }, {"name":"setOtherReceivables","parameterTypes":["java.math.BigDecimal"] }, {"name":"setOtherShortTermLiabilities","parameterTypes":["java.math.BigDecimal"] }, {"name":"setPersonnelExpenses","parameterTypes":["java.math.BigDecimal"] }, {"name":"setPrepaymentsAndOtherShortTermAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setProfitForTheYear","parameterTypes":["java.math.BigDecimal"] }, {"name":"setProvisions","parameterTypes":["java.math.BigDecimal"] }, {"name":"setRealisedGainsOnSaleOfCryptocurrencies","parameterTypes":["java.math.BigDecimal"] }, {"name":"setRentExpenses","parameterTypes":["java.math.BigDecimal"] }, {"name":"setResultsCarriedForward","parameterTypes":["java.math.BigDecimal"] }, {"name":"setRevenues","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$Revenues"] }, {"name":"setRevenues","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$Revenues"] }, {"name":"setStakingRewardsIncome","parameterTypes":["java.math.BigDecimal"] }, {"name":"setTangibleAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setTaxExpenses","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$TaxExpenses"] }, {"name":"setTaxExpenses","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$TaxExpenses"] }, {"name":"setTradeAccountsPayables","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"java.util.function.Consumer"
},
{
  "name":"java.util.function.Function",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"andThen","parameterTypes":["java.util.function.Function"] }, {"name":"compose","parameterTypes":["java.util.function.Function"] }]
},
{
  "name":"java.util.function.ObjIntConsumer"
},
{
  "name":"java.util.function.Predicate"
},
{
  "name":"java.util.function.Supplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.function.ToDoubleFunction"
},
{
  "name":"java.util.function.ToLongFunction"
},
{
  "name":"java.util.logging.LogManager",
  "methods":[{"name":"getLoggingMXBean","parameterTypes":[] }]
},
{
  "name":"java.util.logging.Logger"
},
{
  "name":"java.util.logging.LoggingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.util.logging.SimpleFormatter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.regex.Pattern"
},
{
  "name":"java.util.stream.Collector"
},
{
  "name":"java.util.stream.Stream"
},
{
  "name":"javafx.beans.value.ObservableValue"
},
{
  "name":"javax.annotation.CheckForNull",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.annotation.ManagedBean"
},
{
  "name":"javax.annotation.Nonnull",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.annotation.Nullable",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"javax.annotation.PostConstruct"
},
{
  "name":"javax.annotation.PreDestroy"
},
{
  "name":"javax.annotation.Resource"
},
{
  "name":"javax.annotation.meta.TypeQualifier",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.annotation.meta.TypeQualifierDefault",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.cache.Cache"
},
{
  "name":"javax.cache.CacheManager"
},
{
  "name":"javax.cache.Caching"
},
{
  "name":"javax.crypto.SecretKey"
},
{
  "name":"javax.inject.Inject"
},
{
  "name":"javax.inject.Named"
},
{
  "name":"javax.inject.Qualifier"
},
{
  "name":"javax.management.MBeanOperationInfo",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getSignature","parameterTypes":[] }]
},
{
  "name":"javax.management.MBeanServerBuilder",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"javax.management.Notification"
},
{
  "name":"javax.management.NotificationEmitter"
},
{
  "name":"javax.management.NotificationListener"
},
{
  "name":"javax.management.ObjectName"
},
{
  "name":"javax.management.StandardEmitterMBean",
  "methods":[{"name":"cacheMBeanInfo","parameterTypes":["javax.management.MBeanInfo"] }, {"name":"getCachedMBeanInfo","parameterTypes":[] }, {"name":"getMBeanInfo","parameterTypes":[] }]
},
{
  "name":"javax.management.openmbean.CompositeData"
},
{
  "name":"javax.management.openmbean.OpenMBeanOperationInfoSupport"
},
{
  "name":"javax.management.openmbean.TabularData"
},
{
  "name":"javax.money.MonetaryAmount"
},
{
  "name":"javax.naming.InitialContext"
},
{
  "name":"javax.naming.NamingException"
},
{
  "name":"javax.naming.Reference"
},
{
  "name":"javax.naming.Referenceable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getReference","parameterTypes":[] }]
},
{
  "name":"javax.naming.ldap.LdapContext"
},
{
  "name":"javax.security.auth.Subject",
  "methods":[{"name":"callAs","parameterTypes":["javax.security.auth.Subject","java.util.concurrent.Callable"] }]
},
{
  "name":"javax.security.auth.x500.X500Principal",
  "fields":[{"name":"thisX500Name"}],
  "methods":[{"name":"<init>","parameterTypes":["sun.security.x509.X500Name"] }]
},
{
  "name":"javax.sql.CommonDataSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createShardingKeyBuilder","parameterTypes":[] }]
},
{
  "name":"javax.sql.DataSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createConnectionBuilder","parameterTypes":[] }]
},
{
  "name":"javax.sql.XADataSource"
},
{
  "name":"jdk.crac.management.CRaCMXBean"
},
{
  "name":"jdk.internal.loader.ClassLoaders$AppClassLoader",
  "methods":[{"name":"clearCache","parameterTypes":[] }]
},
{
  "name":"jdk.internal.loader.ClassLoaders$PlatformClassLoader",
  "methods":[{"name":"clearCache","parameterTypes":[] }]
},
{
  "name":"jdk.internal.misc.Unsafe"
},
{
  "name":"jdk.internal.reflect.DirectMethodHandleAccessor"
},
{
  "name":"jdk.internal.vm.annotation.IntrinsicCandidate"
},
{
  "name":"jdk.management.jfr.ConfigurationInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.EventTypeInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBeanImpl",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"cacheMBeanInfo","parameterTypes":["javax.management.MBeanInfo"] }, {"name":"getCachedMBeanInfo","parameterTypes":[] }, {"name":"getMBeanInfo","parameterTypes":[] }, {"name":"getNotificationInfo","parameterTypes":[] }]
},
{
  "name":"jdk.management.jfr.RecordingInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.SettingDescriptorInfo",
  "queryAllPublicMethods":true
},
{
  "name":"kotlin.Metadata",
  "queryAllDeclaredMethods":true
},
{
  "name":"kotlin.Unit"
},
{
  "name":"kotlin.annotation.AnnotationRetention"
},
{
  "name":"kotlin.annotation.AnnotationTarget"
},
{
  "name":"kotlin.annotation.MustBeDocumented",
  "queryAllDeclaredMethods":true
},
{
  "name":"kotlin.annotation.Retention",
  "queryAllDeclaredMethods":true
},
{
  "name":"kotlin.annotation.Target",
  "queryAllDeclaredMethods":true
},
{
  "name":"kotlin.coroutines.Continuation"
},
{
  "name":"kotlin.jvm.JvmInline"
},
{
  "name":"kotlin.reflect.KParameter"
},
{
  "name":"kotlin.reflect.full.KClasses"
},
{
  "name":"kotlinx.coroutines.flow.Flow"
},
{
  "name":"kotlinx.coroutines.reactor.MonoKt"
},
{
  "name":"kotlinx.serialization.cbor.Cbor"
},
{
  "name":"kotlinx.serialization.json.Json"
},
{
  "name":"kotlinx.serialization.protobuf.ProtoBuf"
},
{
  "name":"liquibase.change.DatabaseChange"
},
{
  "name":"liquibase.integration.spring.SpringLiquibase"
},
{
  "name":"net.bytebuddy.asm.Advice$AllArguments",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.asm.Advice$Argument",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"optional","parameterTypes":[] }, {"name":"readOnly","parameterTypes":[] }, {"name":"typing","parameterTypes":[] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.asm.Advice$Enter",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.asm.Advice$Exit",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.asm.Advice$FieldGetterHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.asm.Advice$FieldSetterHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.asm.Advice$FieldValue",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"declaringType","parameterTypes":[] }, {"name":"readOnly","parameterTypes":[] }, {"name":"typing","parameterTypes":[] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.asm.Advice$Local",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.asm.Advice$OnMethodEnter",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"inline","parameterTypes":[] }, {"name":"prependLineNumber","parameterTypes":[] }, {"name":"skipOn","parameterTypes":[] }, {"name":"skipOnIndex","parameterTypes":[] }, {"name":"suppress","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.asm.Advice$OnMethodExit",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"backupArguments","parameterTypes":[] }, {"name":"inline","parameterTypes":[] }, {"name":"onThrowable","parameterTypes":[] }, {"name":"repeatOn","parameterTypes":[] }, {"name":"repeatOnIndex","parameterTypes":[] }, {"name":"suppress","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.asm.Advice$Origin",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.asm.Advice$Return",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"readOnly","parameterTypes":[] }, {"name":"typing","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.asm.Advice$SelfCallHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.asm.Advice$This",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"optional","parameterTypes":[] }, {"name":"readOnly","parameterTypes":[] }, {"name":"typing","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.asm.Advice$Thrown",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.description.method.MethodDescription$InDefinedShape$AbstractBase$Executable",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Parameter",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Executable",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDefinition",
  "methods":[{"name":"asGenericType","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.description.type.TypeDefinition$Sort$AnnotatedType",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableExceptionType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableParameterType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedMethodReturnType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForComponentType$AnnotatedParameterizedType",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeArgument$AnnotatedParameterizedType",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles$Lookup",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.AllArguments",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"includeSelf","parameterTypes":[] }, {"name":"nullIfEmpty","parameterTypes":[] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Argument",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.BindingPriority",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Default",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.DefaultCall",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.DefaultCallHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.DefaultMethod",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.DefaultMethodHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.FieldGetterHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.FieldSetterHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.FieldValue",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"declaringType","parameterTypes":[] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Origin",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"cache","parameterTypes":[] }, {"name":"privileged","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.StubValue",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Super",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.SuperCall",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.SuperCallHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.SuperMethod",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.SuperMethodHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.This",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"optional","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.utility.Invoker",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.utility.Invoker$Dispatcher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.utility.JavaModule$Module",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.utility.JavaModule$Resolver",
  "queryAllPublicMethods":true
},
{
  "name":"net.sf.jsqlparser.parser.JSqlParser"
},
{
  "name":"okhttp3.OkHttpClient"
},
{
  "name":"oracle.jdbc.OracleConnection"
},
{
  "name":"oracle.ucp.jdbc.PoolDataSource"
},
{
  "name":"oracle.ucp.jdbc.PoolDataSourceImpl"
},
{
  "name":"org.aopalliance.aop.Advice",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.aopalliance.intercept.Interceptor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.aopalliance.intercept.MethodInterceptor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.catalina.Context"
},
{
  "name":"org.apache.catalina.Engine"
},
{
  "name":"org.apache.catalina.Host"
},
{
  "name":"org.apache.catalina.LifecycleEvent"
},
{
  "name":"org.apache.catalina.LifecycleListener"
},
{
  "name":"org.apache.catalina.Manager"
},
{
  "name":"org.apache.catalina.Valve"
},
{
  "name":"org.apache.catalina.WebResourceRoot"
},
{
  "name":"org.apache.catalina.connector.Connector"
},
{
  "name":"org.apache.catalina.core.ApplicationContextFacade",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addFilter","parameterTypes":["java.lang.String","jakarta.servlet.Filter"] }, {"name":"addFilter","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"addFilter","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"addJspFile","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"addListener","parameterTypes":["java.lang.Class"] }, {"name":"addListener","parameterTypes":["java.lang.String"] }, {"name":"addListener","parameterTypes":["java.util.EventListener"] }, {"name":"addServlet","parameterTypes":["java.lang.String","jakarta.servlet.Servlet"] }, {"name":"addServlet","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"addServlet","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"createFilter","parameterTypes":["java.lang.Class"] }, {"name":"createListener","parameterTypes":["java.lang.Class"] }, {"name":"createServlet","parameterTypes":["java.lang.Class"] }, {"name":"declareRoles","parameterTypes":["java.lang.String[]"] }, {"name":"getAttribute","parameterTypes":["java.lang.String"] }, {"name":"getAttributeNames","parameterTypes":[] }, {"name":"getClassLoader","parameterTypes":[] }, {"name":"getContext","parameterTypes":["java.lang.String"] }, {"name":"getContextPath","parameterTypes":[] }, {"name":"getDefaultSessionTrackingModes","parameterTypes":[] }, {"name":"getEffectiveMajorVersion","parameterTypes":[] }, {"name":"getEffectiveMinorVersion","parameterTypes":[] }, {"name":"getEffectiveSessionTrackingModes","parameterTypes":[] }, {"name":"getFilterRegistration","parameterTypes":["java.lang.String"] }, {"name":"getFilterRegistrations","parameterTypes":[] }, {"name":"getInitParameter","parameterTypes":["java.lang.String"] }, {"name":"getInitParameterNames","parameterTypes":[] }, {"name":"getJspConfigDescriptor","parameterTypes":[] }, {"name":"getMajorVersion","parameterTypes":[] }, {"name":"getMimeType","parameterTypes":["java.lang.String"] }, {"name":"getMinorVersion","parameterTypes":[] }, {"name":"getNamedDispatcher","parameterTypes":["java.lang.String"] }, {"name":"getRealPath","parameterTypes":["java.lang.String"] }, {"name":"getRequestCharacterEncoding","parameterTypes":[] }, {"name":"getRequestDispatcher","parameterTypes":["java.lang.String"] }, {"name":"getResource","parameterTypes":["java.lang.String"] }, {"name":"getResourceAsStream","parameterTypes":["java.lang.String"] }, {"name":"getResourcePaths","parameterTypes":["java.lang.String"] }, {"name":"getResponseCharacterEncoding","parameterTypes":[] }, {"name":"getServerInfo","parameterTypes":[] }, {"name":"getServletContextName","parameterTypes":[] }, {"name":"getServletRegistration","parameterTypes":["java.lang.String"] }, {"name":"getServletRegistrations","parameterTypes":[] }, {"name":"getSessionCookieConfig","parameterTypes":[] }, {"name":"getSessionTimeout","parameterTypes":[] }, {"name":"getVirtualServerName","parameterTypes":[] }, {"name":"log","parameterTypes":["java.lang.String"] }, {"name":"log","parameterTypes":["java.lang.String","java.lang.Throwable"] }, {"name":"removeAttribute","parameterTypes":["java.lang.String"] }, {"name":"setAttribute","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"setInitParameter","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"setRequestCharacterEncoding","parameterTypes":["java.lang.String"] }, {"name":"setResponseCharacterEncoding","parameterTypes":["java.lang.String"] }, {"name":"setSessionTimeout","parameterTypes":["int"] }, {"name":"setSessionTrackingModes","parameterTypes":["java.util.Set"] }]
},
{
  "name":"org.apache.catalina.loader.JdbcLeakPrevention",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"clearJdbcDriverRegistrations","parameterTypes":[] }]
},
{
  "name":"org.apache.catalina.startup.Tomcat"
},
{
  "name":"org.apache.catalina.util.CharsetMapper",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.commons.dbcp2.BasicDataSource"
},
{
  "name":"org.apache.commons.lang3.Range"
},
{
  "name":"org.apache.commons.logging.Log"
},
{
  "name":"org.apache.coyote.AbstractProtocol",
  "methods":[{"name":"getAddress","parameterTypes":[] }, {"name":"getLocalPort","parameterTypes":[] }, {"name":"getProperty","parameterTypes":["java.lang.String"] }, {"name":"setPort","parameterTypes":["int"] }, {"name":"setProperty","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"org.apache.coyote.ProtocolHandler"
},
{
  "name":"org.apache.coyote.UpgradeProtocol"
},
{
  "name":"org.apache.coyote.http11.AbstractHttp11Protocol",
  "methods":[{"name":"isSSLEnabled","parameterTypes":[] }]
},
{
  "name":"org.apache.coyote.http11.Http11NioProtocol",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.derby.jdbc.EmbeddedDriver"
},
{
  "name":"org.apache.el.ExpressionFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.hc.client5.http.classic.HttpClient"
},
{
  "name":"org.apache.hc.client5.http.impl.classic.HttpClients"
},
{
  "name":"org.apache.jasper.compiler.JspConfig"
},
{
  "name":"org.apache.jasper.servlet.JspServlet"
},
{
  "name":"org.apache.kafka.clients.ClientUtils"
},
{
  "name":"org.apache.kafka.clients.ClusterConnectionStates"
},
{
  "name":"org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState"
},
{
  "name":"org.apache.kafka.clients.DefaultHostResolver"
},
{
  "name":"org.apache.kafka.clients.NetworkClient"
},
{
  "name":"org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater"
},
{
  "name":"org.apache.kafka.clients.NetworkClient$TelemetrySender"
},
{
  "name":"org.apache.kafka.clients.admin.Admin"
},
{
  "name":"org.apache.kafka.clients.admin.AdminClient"
},
{
  "name":"org.apache.kafka.clients.admin.DescribeTopicsResult"
},
{
  "name":"org.apache.kafka.clients.admin.NewTopic"
},
{
  "name":"org.apache.kafka.clients.admin.TopicDescription"
},
{
  "name":"org.apache.kafka.clients.consumer.Consumer"
},
{
  "name":"org.apache.kafka.clients.consumer.ConsumerGroupMetadata"
},
{
  "name":"org.apache.kafka.clients.consumer.ConsumerRecord"
},
{
  "name":"org.apache.kafka.clients.consumer.ConsumerRecords"
},
{
  "name":"org.apache.kafka.clients.consumer.CooperativeStickyAssignor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.clients.consumer.KafkaConsumer"
},
{
  "name":"org.apache.kafka.clients.consumer.RangeAssignor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator"
},
{
  "name":"org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread"
},
{
  "name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator"
},
{
  "name":"org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient"
},
{
  "name":"org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer"
},
{
  "name":"org.apache.kafka.clients.producer.Callback"
},
{
  "name":"org.apache.kafka.clients.producer.Producer"
},
{
  "name":"org.apache.kafka.clients.producer.ProducerInterceptor"
},
{
  "name":"org.apache.kafka.clients.producer.ProducerRecord"
},
{
  "name":"org.apache.kafka.clients.producer.RecordMetadata"
},
{
  "name":"org.apache.kafka.common.KafkaFuture"
},
{
  "name":"org.apache.kafka.common.TopicPartition"
},
{
  "name":"org.apache.kafka.common.config.ConfigResource"
},
{
  "name":"org.apache.kafka.common.metrics.KafkaMetric",
  "fields":[{"name":"metricValueProvider"}]
},
{
  "name":"org.apache.kafka.common.metrics.stats.CumulativeCount"
},
{
  "name":"org.apache.kafka.common.metrics.stats.CumulativeSum"
},
{
  "name":"org.apache.kafka.common.serialization.Deserializer"
},
{
  "name":"org.apache.kafka.common.serialization.Serializer"
},
{
  "name":"org.apache.kafka.common.serialization.StringDeserializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.utils.AppInfoParser$AppInfo",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.kafka.common.utils.AppInfoParser$AppInfoMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.kafka.shaded.com.google.protobuf.ExtensionRegistry",
  "methods":[{"name":"getEmptyRegistry","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.streams.StreamsBuilder"
},
{
  "name":"org.apache.logging.log4j.core.LoggerContext"
},
{
  "name":"org.apache.logging.log4j.core.impl.Log4jContextFactory"
},
{
  "name":"org.apache.logging.log4j.spi.ExtendedLogger"
},
{
  "name":"org.apache.logging.slf4j.SLF4JProvider"
},
{
  "name":"org.apache.pulsar.client.api.PulsarClient"
},
{
  "name":"org.apache.tomcat.jdbc.pool.DataSource"
},
{
  "name":"org.apache.tomcat.jdbc.pool.DataSourceProxy"
},
{
  "name":"org.apache.tomcat.util.net.AbstractEndpoint",
  "methods":[{"name":"setBindOnInit","parameterTypes":["boolean"] }]
},
{
  "name":"org.apache.tomcat.util.net.NioEndpoint",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.tomcat.websocket.server.WsFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.tomcat.websocket.server.WsSci"
},
{
  "name":"org.apiguardian.api.API",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apiguardian.api.API$Status"
},
{
  "name":"org.aspectj.internal.lang.annotation.ajcDeclareParents",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.aspectj.lang.annotation.AfterReturning",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.aspectj.lang.annotation.Around",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.aspectj.lang.annotation.Aspect",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.aspectj.lang.annotation.Before",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.aspectj.lang.annotation.Pointcut",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.aspectj.lang.annotation.SuppressAjWarnings",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.aspectj.weaver.Advice"
},
{
  "name":"org.aspectj.weaver.reflect.Java15AnnotationFinder",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.aspectj.weaver.reflect.Java15GenericSignatureInformationProvider",
  "methods":[{"name":"<init>","parameterTypes":["org.aspectj.weaver.World"] }]
},
{
  "name":"org.aspectj.weaver.reflect.Java15ReflectionBasedReferenceTypeDelegate",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.aspectj.weaver.tools.Jdk14TraceFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.brotli.dec.BrotliInputStream"
},
{
  "name":"org.cache2k.Cache2kBuilder"
},
{
  "name":"org.cache2k.extra.micrometer.Cache2kCacheMetrics"
},
{
  "name":"org.cache2k.extra.spring.SpringCache2kCache"
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"main","parameterTypes":["java.lang.String[]"] }, {"name":"onStart","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$CacheConfig",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"shallowEtagHeaderFilter","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$CacheConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$CacheConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$CacheConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$JaversConfig",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"javers","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$JaversConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$JaversConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$JaversConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$MetricsConfig",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"timedAspect","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$MetricsConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$MetricsConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$MetricsConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$RestClientConfig",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"restClient","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$RestClientConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$RestClientConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$RestClientConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$SchedulerConfig",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"scheduledTaskRegistrar","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"threadPoolTaskScheduler","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$SchedulerConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$SchedulerConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$SchedulerConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$TimeConfig",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"clock","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$TimeConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$TimeConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.LobServiceApp$TimeConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.AccountingCorePublicApi",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.config.BusinessRulesConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["jakarta.validation.Validator","org.cardanofoundation.lob.app.organisation.OrganisationPublicApi","org.cardanofoundation.lob.app.accounting_reporting_core.repository.CoreCurrencyRepository"] }, {"name":"defaultBusinessRulesProcessor","parameterTypes":[] }, {"name":"reprocessBusinessRulesProcessor","parameterTypes":[] }, {"name":"selectorBusinessRulesProcessors","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.config.BusinessRulesConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":["jakarta.validation.Validator","org.cardanofoundation.lob.app.organisation.OrganisationPublicApi","org.cardanofoundation.lob.app.accounting_reporting_core.repository.CoreCurrencyRepository"] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.config.BusinessRulesConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.config.BusinessRulesConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.config.ReactiveConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"debouncerManager","parameterTypes":["org.cardanofoundation.lob.app.support.reactive.TransactionalTaskRunner"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"transactionalTaskRunner","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.config.ReactiveConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.config.ReactiveConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.config.ReactiveConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.Account"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.AccountEvent"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.CoreCurrency"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.CostCenter"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.Counterparty"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.Counterparty$Type"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.Document"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.ExtractorType"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.FatalError"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.LedgerDispatchStatus"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.OperationType"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.Organisation"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.OrganisationTransactions"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.Project"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.ReportStatusUpdate"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.Source"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.SystemExtractionParameters"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.Transaction"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.TransactionBatchStatus"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.TransactionItem"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.TransactionItem$TransactionItemBuilder"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.TransactionStatus"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.TransactionType"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.TransactionViolationCode"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.TxItemValidationStatus"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.TxStatusUpdate"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.TxValidationStatus"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.UserExtractionParameters"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.Validable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setAssets","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Assets"] }, {"name":"setCapital","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Capital"] }, {"name":"setCostOfGoodsAndServices","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$CostOfGoodsAndServices"] }, {"name":"setCostOfGoodsAndServices","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$CostOfGoodsAndServices"] }, {"name":"setExtraordinaryIncome","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$ExtraordinaryIncome"] }, {"name":"setExtraordinaryIncome","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$ExtraordinaryIncome"] }, {"name":"setFinancialIncome","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$FinancialIncome"] }, {"name":"setFinancialIncome","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$FinancialIncome"] }, {"name":"setLiabilities","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Liabilities"] }, {"name":"setOperatingExpenses","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$OperatingExpenses"] }, {"name":"setOperatingExpenses","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$OperatingExpenses"] }, {"name":"setProfitForTheYear","parameterTypes":["java.math.BigDecimal"] }, {"name":"setRevenues","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$Revenues"] }, {"name":"setRevenues","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$Revenues"] }, {"name":"setTaxExpenses","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$TaxExpenses"] }, {"name":"setTaxExpenses","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$TaxExpenses"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.Vat"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.Violation"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.Violation$Severity"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.annotations.LOBVersionSourceRelevant",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.metric.MetricEnum"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.metric.MetricEnum$SubMetric"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.reconcilation.Reconcilation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setFinalStatus","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.reconcilation.ReconcilationCode"] }, {"name":"setSink","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.reconcilation.ReconcilationCode"] }, {"name":"setSource","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.reconcilation.ReconcilationCode"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.reconcilation.ReconcilationCode"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.reconcilation.ReconcilationStatus"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.reconcilation.Reconcilation_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.Assets"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.BalanceSheetData"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.Capital"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.CostOfServicesAndGoods"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.CurrentAssets"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.CurrentLiabilities"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.ExtraordinaryIncome"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.FinancialIncome"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.IncomeStatementData"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.IntervalType"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.Liabilities"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.NonCurrentAssets"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.NonCurrentLiabilities"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.OperatingExpenses"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.Report"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.ReportMode"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.ReportType"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.Revenues"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.TaxExpenses"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Account",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCode","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setRefCode","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.AccountEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCode","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.AccountEvent_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Account_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.BatchStatistics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setApprovedTransactions","parameterTypes":["int"] }, {"name":"setInvalidTransactions","parameterTypes":["int"] }, {"name":"setPendingTransactions","parameterTypes":["int"] }, {"name":"setProcessedTransactions","parameterTypes":["int"] }, {"name":"setPublishedTransactions","parameterTypes":["int"] }, {"name":"setReadyToApproveTransactions","parameterTypes":["int"] }, {"name":"setTotal","parameterTypes":["int"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.BatchStatistics_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.CostCenter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCustomerCode","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.CostCenter_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Counterparty",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCustomerCode","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setType","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.Counterparty$Type"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Counterparty_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Currency",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCustomerCode","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Currency_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Details",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setBag","parameterTypes":["java.util.Map"] }, {"name":"setCode","parameterTypes":["java.lang.String"] }, {"name":"setSubCode","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Details_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Document",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCounterparty","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Counterparty"] }, {"name":"setCurrency","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Currency"] }, {"name":"setNum","parameterTypes":["java.lang.String"] }, {"name":"setVat","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Vat"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Document$DocumentBuilder"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Document_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.FilteringParameters",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setAccountingPeriodFrom","parameterTypes":["java.time.LocalDate"] }, {"name":"setAccountingPeriodTo","parameterTypes":["java.time.LocalDate"] }, {"name":"setFrom","parameterTypes":["java.time.LocalDate"] }, {"name":"setOrganisationId","parameterTypes":["java.lang.String"] }, {"name":"setTo","parameterTypes":["java.time.LocalDate"] }, {"name":"setTransactionNumbers","parameterTypes":["java.util.List"] }, {"name":"setTransactionTypes","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.FilteringParameters_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.LedgerDispatchReceipt",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setPrimaryBlockchainHash","parameterTypes":["java.lang.String"] }, {"name":"setPrimaryBlockchainType","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.LedgerDispatchReceipt_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Organisation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCountryCode","parameterTypes":["java.lang.String"] }, {"name":"setCurrencyId","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setTaxIdNumber","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Organisation_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.OverallStatusTransactionEntityListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Project",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCustomerCode","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Project_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Rejection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setRejectionReason","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.RejectionReason"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.RejectionReason"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Rejection_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.TransactionBatchAssocEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getId","parameterTypes":[] }, {"name":"setId","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.TransactionBatchAssocEntity$Id"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.TransactionBatchAssocEntity$HibernateAccessOptimizer$mx3ZpMln",
  "fields":[{"name":"invocationTarget$fjbev40"}],
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.TransactionBatchAssocEntity$HibernateInstantiator$WLDIjQ2P",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.TransactionBatchAssocEntity$Id",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"setTransactionBatchId","parameterTypes":["java.lang.String"] }, {"name":"setTransactionId","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.TransactionBatchAssocEntity$Id_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.TransactionBatchAssocEntity_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.TransactionBatchEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getId","parameterTypes":[] }, {"name":"setBatchStatistics","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.BatchStatistics"] }, {"name":"setDetails","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Details"] }, {"name":"setFilteringParameters","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.FilteringParameters"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setStatus","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.TransactionBatchStatus"] }, {"name":"setTransactions","parameterTypes":["java.util.Set"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.TransactionBatchEntity_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.TransactionEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getId","parameterTypes":[] }, {"name":"setAccountingPeriod","parameterTypes":["java.time.YearMonth"] }, {"name":"setAutomatedValidationStatus","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.TxValidationStatus"] }, {"name":"setBatchId","parameterTypes":["java.lang.String"] }, {"name":"setBatches","parameterTypes":["java.util.Set"] }, {"name":"setEntryDate","parameterTypes":["java.time.LocalDate"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setItems","parameterTypes":["java.util.Set"] }, {"name":"setLastReconcilation","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.reconcilation.ReconcilationEntity"] }, {"name":"setLedgerDispatchApproved","parameterTypes":["java.lang.Boolean"] }, {"name":"setLedgerDispatchReceipt","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.LedgerDispatchReceipt"] }, {"name":"setLedgerDispatchStatus","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.LedgerDispatchStatus"] }, {"name":"setOrganisation","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Organisation"] }, {"name":"setOverallStatus","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.TransactionStatus"] }, {"name":"setProcessingStatus","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.TransactionProcessingStatus"] }, {"name":"setReconcilation","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.reconcilation.Reconcilation"] }, {"name":"setTransactionApproved","parameterTypes":["java.lang.Boolean"] }, {"name":"setTransactionInternalNumber","parameterTypes":["java.lang.String"] }, {"name":"setTransactionType","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.TransactionType"] }, {"name":"setUserComment","parameterTypes":["java.lang.String"] }, {"name":"setViolations","parameterTypes":["java.util.Set"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.TransactionEntity_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.TransactionItemEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getId","parameterTypes":[] }, {"name":"setAccountCredit","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Account"] }, {"name":"setAccountDebit","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Account"] }, {"name":"setAccountEvent","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.AccountEvent"] }, {"name":"setAmountFcy","parameterTypes":["java.math.BigDecimal"] }, {"name":"setAmountLcy","parameterTypes":["java.math.BigDecimal"] }, {"name":"setCostCenter","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.CostCenter"] }, {"name":"setDocument","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Document"] }, {"name":"setFxRate","parameterTypes":["java.math.BigDecimal"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setOperationType","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.OperationType"] }, {"name":"setProject","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Project"] }, {"name":"setRejection","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Rejection"] }, {"name":"setStatus","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.TxItemValidationStatus"] }, {"name":"setTransaction","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.TransactionEntity"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.TransactionItemEntity_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.TransactionProcessingStatus"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.TransactionTypeConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"convertToDatabaseColumn","parameterTypes":["java.lang.Object"] }, {"name":"convertToEntityAttribute","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.TransactionViolation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setBag","parameterTypes":["java.util.Map"] }, {"name":"setCode","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.TransactionViolationCode"] }, {"name":"setProcessorModule","parameterTypes":["java.lang.String"] }, {"name":"setSeverity","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.Violation$Severity"] }, {"name":"setSource","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.Source"] }, {"name":"setSubCode","parameterTypes":["java.lang.String"] }, {"name":"setTxItemId","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.TransactionViolation_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Vat",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCustomerCode","parameterTypes":["java.lang.String"] }, {"name":"setRate","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Vat_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.metric.ChartEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"setDashboard","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.metric.DashboardEntity"] }, {"name":"setHeight","parameterTypes":["java.lang.Double"] }, {"name":"setId","parameterTypes":["java.lang.Long"] }, {"name":"setMetric","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.metric.MetricEnum"] }, {"name":"setSubMetric","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.metric.MetricEnum$SubMetric"] }, {"name":"setWidth","parameterTypes":["java.lang.Double"] }, {"name":"setXPos","parameterTypes":["java.lang.Double"] }, {"name":"setYPos","parameterTypes":["java.lang.Double"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.metric.ChartEntity_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.metric.DashboardEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"setCharts","parameterTypes":["java.util.List"] }, {"name":"setDescription","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["java.lang.Long"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setOrganisationID","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.metric.DashboardEntity_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.metric.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.reconcilation.ReconcilationEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getId","parameterTypes":[] }, {"name":"setDetails","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Details"] }, {"name":"setFrom","parameterTypes":["java.time.LocalDate"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setOrganisationId","parameterTypes":["java.lang.String"] }, {"name":"setProcessedTxCount","parameterTypes":["long"] }, {"name":"setStatus","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.reconcilation.ReconcilationStatus"] }, {"name":"setTo","parameterTypes":["java.time.LocalDate"] }, {"name":"setViolations","parameterTypes":["java.util.Set"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.reconcilation.ReconcilationEntity_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.reconcilation.ReconcilationRejectionCode"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.reconcilation.ReconcilationViolation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setAmountLcySum","parameterTypes":["java.math.BigDecimal"] }, {"name":"setRejectionCode","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.reconcilation.ReconcilationRejectionCode"] }, {"name":"setSourceDiff","parameterTypes":["java.lang.String"] }, {"name":"setTransactionEntryDate","parameterTypes":["java.time.LocalDate"] }, {"name":"setTransactionId","parameterTypes":["java.lang.String"] }, {"name":"setTransactionInternalNumber","parameterTypes":["java.lang.String"] }, {"name":"setTransactionType","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.TransactionType"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.reconcilation.ReconcilationViolation_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.reconcilation.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setAssets","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Assets"] }, {"name":"setCapital","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Capital"] }, {"name":"setLiabilities","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Liabilities"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Assets",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCurrentAssets","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Assets$CurrentAssets"] }, {"name":"setNonCurrentAssets","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Assets$NonCurrentAssets"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Assets$CurrentAssets",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCashAndCashEquivalents","parameterTypes":["java.math.BigDecimal"] }, {"name":"setCryptoAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setOtherReceivables","parameterTypes":["java.math.BigDecimal"] }, {"name":"setPrepaymentsAndOtherShortTermAssets","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Assets$CurrentAssets_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Assets$NonCurrentAssets",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setFinancialAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setIntangibleAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setInvestments","parameterTypes":["java.math.BigDecimal"] }, {"name":"setTangibleAssets","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Assets$NonCurrentAssets_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Assets_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Capital",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCapital","parameterTypes":["java.math.BigDecimal"] }, {"name":"setProfitForTheYear","parameterTypes":["java.math.BigDecimal"] }, {"name":"setResultsCarriedForward","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Capital_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Liabilities",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCurrentLiabilities","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Liabilities$CurrentLiabilities"] }, {"name":"setNonCurrentLiabilities","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Liabilities$NonCurrentLiabilities"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Liabilities$CurrentLiabilities",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setAccrualsAndShortTermProvisions","parameterTypes":["java.math.BigDecimal"] }, {"name":"setOtherShortTermLiabilities","parameterTypes":["java.math.BigDecimal"] }, {"name":"setTradeAccountsPayables","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Liabilities$CurrentLiabilities_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Liabilities$NonCurrentLiabilities",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setProvisions","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Liabilities$NonCurrentLiabilities_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Liabilities_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCostOfGoodsAndServices","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$CostOfGoodsAndServices"] }, {"name":"setExtraordinaryIncome","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$ExtraordinaryIncome"] }, {"name":"setFinancialIncome","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$FinancialIncome"] }, {"name":"setOperatingExpenses","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$OperatingExpenses"] }, {"name":"setProfitForTheYear","parameterTypes":["java.math.BigDecimal"] }, {"name":"setRevenues","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$Revenues"] }, {"name":"setTaxExpenses","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$TaxExpenses"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$CostOfGoodsAndServices",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setExternalServices","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$CostOfGoodsAndServices_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$ExtraordinaryIncome",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setExtraordinaryExpenses","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$ExtraordinaryIncome_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$FinancialIncome",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setFinancialExpenses","parameterTypes":["java.math.BigDecimal"] }, {"name":"setFinancialRevenues","parameterTypes":["java.math.BigDecimal"] }, {"name":"setNetIncomeOptionsSale","parameterTypes":["java.math.BigDecimal"] }, {"name":"setRealisedGainsOnSaleOfCryptocurrencies","parameterTypes":["java.math.BigDecimal"] }, {"name":"setStakingRewardsIncome","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$FinancialIncome_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$OperatingExpenses",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setAmortizationOnIntangibleAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setDepreciationAndImpairmentLossesOnTangibleAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setGeneralAndAdministrativeExpenses","parameterTypes":["java.math.BigDecimal"] }, {"name":"setPersonnelExpenses","parameterTypes":["java.math.BigDecimal"] }, {"name":"setRentExpenses","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$OperatingExpenses_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$Revenues",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setBuildOfLongTermProvision","parameterTypes":["java.math.BigDecimal"] }, {"name":"setOtherIncome","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$Revenues_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$TaxExpenses",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setDirectTaxes","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$TaxExpenses_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.ReportEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getPeriod","parameterTypes":[] }, {"name":"getReportId","parameterTypes":[] }, {"name":"setBalanceSheetReportData","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData"] }, {"name":"setDate","parameterTypes":["java.time.LocalDate"] }, {"name":"setIdControl","parameterTypes":["java.lang.String"] }, {"name":"setIncomeStatementReportData","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData"] }, {"name":"setIntervalType","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.IntervalType"] }, {"name":"setIsReadyToPublish","parameterTypes":["java.lang.Boolean"] }, {"name":"setLedgerDispatchApproved","parameterTypes":["java.lang.Boolean"] }, {"name":"setLedgerDispatchDate","parameterTypes":["java.time.LocalDateTime"] }, {"name":"setLedgerDispatchReceipt","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.LedgerDispatchReceipt"] }, {"name":"setLedgerDispatchStatus","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.LedgerDispatchStatus"] }, {"name":"setMode","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.ReportMode"] }, {"name":"setOrganisation","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.Organisation"] }, {"name":"setPeriod","parameterTypes":["java.lang.Short"] }, {"name":"setPublishedBy","parameterTypes":["java.lang.String"] }, {"name":"setReportId","parameterTypes":["java.lang.String"] }, {"name":"setType","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.ReportType"] }, {"name":"setVer","parameterTypes":["long"] }, {"name":"setYear","parameterTypes":["java.lang.Short"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.ReportEntity_"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.extraction.ScheduledIngestionEvent"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.extraction.TransactionBatchChunkEvent"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.extraction.TransactionBatchChunkEvent$TransactionBatchChunkEventBuilder"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.extraction.TransactionBatchCreatedEvent"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.extraction.TransactionBatchFailedEvent"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.extraction.TransactionBatchStartedEvent"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.extraction.ValidateIngestionEvent"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.extraction.ValidateIngestionResponseEvent"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.extraction.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.ledger.ReportLedgerUpdateCommand"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.ledger.ReportsLedgerUpdatedEvent"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.ledger.TransactionLedgerUpdateCommand"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.ledger.TxsLedgerUpdatedEvent"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.ledger.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.reconcilation.ReconcilationChunkEvent"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.reconcilation.ReconcilationChunkEvent$ReconcilationChunkEventBuilder"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.reconcilation.ReconcilationCreatedEvent"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.reconcilation.ReconcilationFailedEvent"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.reconcilation.ReconcilationFinalisationEvent"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.reconcilation.ReconcilationStartedEvent"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.reconcilation.ScheduledReconcilationEvent"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.domain.event.reconcilation.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.exception.MetricNotFoundException"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.job.DispatcherJob",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.LedgerService"] }, {"name":"execute","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.job.TxStatusUpdaterJob",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.LedgerService","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TransactionBatchService","org.cardanofoundation.lob.app.accounting_reporting_core.repository.ReportRepository","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.ReportService"] }, {"name":"execute","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.job.TxStatusUpdaterJob$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.mapper.ChartViewMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.mapper.ChartViewMapperImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"toChartEntity","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.metric.ChartView"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.mapper.DashboardViewMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.mapper.DashboardViewMapperImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"mapToDashboardEntity","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.metric.DashboardView","java.lang.String"] }, {"name":"mapToDashboardView","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.metric.DashboardEntity"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.repository.AccountingCoreTransactionRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.repository.CoreCurrencyRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.repository.CustomTransactionBatchRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"findByFilter","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.BatchSearchRequest"] }, {"name":"findByFilterCount","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.BatchSearchRequest"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.repository.CustomTransactionBatchRepositoryImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["jakarta.persistence.EntityManager"] }, {"name":"findByFilter","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.BatchSearchRequest"] }, {"name":"findByFilterCount","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.BatchSearchRequest"] }, {"name":"toObject","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.repository.CustomTransactionRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"findAllByStatus","parameterTypes":["java.lang.String","java.util.List","java.util.List","org.springframework.data.domain.PageRequest"] }, {"name":"findAllReconciliation","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.ReconciliationFilterStatusRequest","java.util.Optional","java.lang.Integer","java.lang.Integer"] }, {"name":"findAllReconciliationCount","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.ReconciliationFilterStatusRequest","java.util.Optional","java.lang.Integer","java.lang.Integer"] }, {"name":"findAllReconciliationSpecial","parameterTypes":["java.util.Set","java.util.Optional","java.util.Optional","java.lang.Integer","java.lang.Integer"] }, {"name":"findAllReconciliationSpecialCount","parameterTypes":["java.util.Set","java.util.Optional","java.util.Optional","java.lang.Integer","java.lang.Integer"] }, {"name":"findCalcReconciliationStatistic","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.repository.CustomTransactionRepositoryImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["jakarta.persistence.EntityManager"] }, {"name":"findAllByStatus","parameterTypes":["java.lang.String","java.util.List","java.util.List","org.springframework.data.domain.PageRequest"] }, {"name":"findAllReconciliation","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.ReconciliationFilterStatusRequest","java.util.Optional","java.lang.Integer","java.lang.Integer"] }, {"name":"findAllReconciliationCount","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.ReconciliationFilterStatusRequest","java.util.Optional","java.lang.Integer","java.lang.Integer"] }, {"name":"findAllReconciliationSpecial","parameterTypes":["java.util.Set","java.util.Optional","java.util.Optional","java.lang.Integer","java.lang.Integer"] }, {"name":"findAllReconciliationSpecialCount","parameterTypes":["java.util.Set","java.util.Optional","java.util.Optional","java.lang.Integer","java.lang.Integer"] }, {"name":"findCalcReconciliationStatistic","parameterTypes":[] }, {"name":"toObject","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.repository.DashboardRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.repository.PublicReportRepository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["jakarta.persistence.EntityManager"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.repository.PublicReportRepository$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.repository.ReportRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.repository.StaticCoreCurrencyRepository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"allCurrencies","parameterTypes":[] }, {"name":"findByCurrencyId","parameterTypes":["java.lang.String"] }, {"name":"init","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionBatchAssocRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionBatchRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionBatchRepositoryGateway",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionBatchRepository","org.cardanofoundation.lob.app.accounting_reporting_core.repository.AccountingCoreTransactionRepository"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionBatchRepositoryGateway$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionItemExtractionRepository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["jakarta.persistence.EntityManager","org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionItemRepository"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionItemRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionReconcilationRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.AccountingCoreResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.resource.presentation_layer_service.AccountingCorePresentationViewService","com.fasterxml.jackson.databind.ObjectMapper","org.cardanofoundation.lob.app.organisation.OrganisationPublicApi"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.AccountingCoreResource$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.AccountingCoreResourceNetSuiteMock",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.AccountingCoreResourceReconciliation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.resource.presentation_layer_service.AccountingCorePresentationViewService","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.AccountingCoreService"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.AccountingCoreResourceReconciliation$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.ExperimentalAccountingCoreResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.AccountingCoreService","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TransactionBatchService","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.ReportService"] }, {"name":"init","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.ExtractionController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.resource.presentation_layer_service.ExtractionItemService","org.cardanofoundation.lob.app.organisation.OrganisationPublicApi","org.cardanofoundation.lob.app.accounting_reporting_core.resource.presentation_layer_service.AccountingCorePresentationViewService","com.fasterxml.jackson.databind.ObjectMapper"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.ExtractionController$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.MetricController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.metrics.MetricService"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.MetricController$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.PublicInterfaceController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.resource.presentation_layer_service.ExtractionItemService","org.cardanofoundation.lob.app.accounting_reporting_core.resource.presentation_layer_service.ReportViewService","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.ReportService","org.cardanofoundation.lob.app.organisation.OrganisationPublicApi"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.ReportController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.resource.presentation_layer_service.ReportViewService","org.cardanofoundation.lob.app.organisation.service.CurrencyService","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.ReportService"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.ReportController$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.presentation_layer_service.AccountingCorePresentationViewService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TransactionRepositoryGateway","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.AccountingCoreService","org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionBatchRepositoryGateway","org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionReconcilationRepository","org.cardanofoundation.lob.app.organisation.repository.CostCenterRepository","org.cardanofoundation.lob.app.organisation.repository.ProjectMappingRepository","org.cardanofoundation.lob.app.organisation.OrganisationPublicApiIF","org.cardanofoundation.lob.app.accounting_reporting_core.repository.AccountingCoreTransactionRepository"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.presentation_layer_service.AccountingCorePresentationViewService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.presentation_layer_service.ExtractionItemService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionItemExtractionRepository","org.cardanofoundation.lob.app.organisation.OrganisationPublicApi"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.presentation_layer_service.ExtractionItemService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.presentation_layer_service.ReportViewService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.ReportService"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.presentation_layer_service.ReportViewService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.BatchSearchRequest"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.ExtractionRequest"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.ExtractionTransactionsRequest"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.LedgerDispatchStatusView"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.PublicInterfaceTransactionsRequest"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.PublicReportSearchRequest"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.ReconciliationFilterRequest"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.ReconciliationFilterSource"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.ReconciliationFilterStatusRequest"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.ReconciliationRejectionCodeRequest"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.ReconciliationRequest"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.ReportGenerateRequest"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.ReportPublishRequest"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.ReportReprocessRequest"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.ReportRequest"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.ReportSearchRequest"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.SearchRequest"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.TransactionItemsRejectionRequest"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.TransactionsRequest"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.metric.GetMetricDataRequest"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.metric.SaveDashboardRequest"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.requests.metric.UpdateDashboardRequest"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.BatchReprocessView"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.BatchStatisticsView",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.BatchView"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.BatchsDetailView"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.CreateReportView"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.ExtractionTransactionItemView"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.ExtractionTransactionView"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.FilteringParametersView"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.ReconciliationResponseView"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.ReportView"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.TransactionItemAggregateView"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.TransactionItemView"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.TransactionItemsProcessRejectView"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.TransactionItemsProcessView"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.TransactionProcessView"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.TransactionReconciliationStatisticView"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.TransactionReconciliationTransactionsView"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.TransactionView"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.ViolationView"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.metric.ChartView"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.metric.DashboardView"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.ValidateIngestionResponseWaiter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.assistance.AccountingPeriodCalculator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.time.Clock"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.assistance.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.business_rules.BusinessRulesPipelineProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.business_rules.BusinessRulesPipelineSelector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"run","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.OrganisationTransactions","org.cardanofoundation.lob.app.accounting_reporting_core.service.business_rules.ProcessorFlags"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.business_rules.DefaultBusinessRulesPipelineProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"run","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.OrganisationTransactions","org.cardanofoundation.lob.app.accounting_reporting_core.service.business_rules.ProcessorFlags"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.business_rules.PipelineTask"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.business_rules.ProcessorFlags"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.business_rules.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.AccountingCoreEventHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.ERPIncomingDataProcessor","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TransactionConverter","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.LedgerService","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TransactionBatchService","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TransactionReconcilationService","org.springframework.context.ApplicationEventPublisher","org.cardanofoundation.lob.app.accounting_reporting_core.job.TxStatusUpdaterJob","org.cardanofoundation.lob.app.accounting_reporting_core.service.ValidateIngestionResponseWaiter"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.AccountingCoreEventHandler$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.AccountingCoreService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.ApplicationEventPublisher","org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionBatchRepository","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.ERPIncomingDataProcessor","org.cardanofoundation.lob.app.organisation.OrganisationPublicApiIF","org.cardanofoundation.lob.app.accounting_reporting_core.service.assistance.AccountingPeriodCalculator","org.cardanofoundation.lob.app.support.security.KeycloakSecurityHelper","org.cardanofoundation.lob.app.support.reactive.DebouncerManager","org.cardanofoundation.lob.app.support.security.AntiVirusScanner","org.cardanofoundation.lob.app.accounting_reporting_core.service.ValidateIngestionResponseWaiter"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.AccountingCoreService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.BalanceSheetConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.CoreCurrencyService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.CoreCurrencyRepository"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.DbSynchronisationUseCaseService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.AccountingCoreTransactionRepository","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TransactionConverter","org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionItemRepository","org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionBatchAssocRepository","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TransactionBatchService"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.DbSynchronisationUseCaseService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.ERPIncomingDataProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TransactionReconcilationService","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TransactionBatchService","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.DbSynchronisationUseCaseService","org.cardanofoundation.lob.app.accounting_reporting_core.repository.AccountingCoreTransactionRepository"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.ERPIncomingDataProcessor$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.IncomeStatementConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.LedgerService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.AccountingCoreTransactionRepository","org.cardanofoundation.lob.app.accounting_reporting_core.repository.ReportRepository","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.ReportConverter","org.springframework.context.ApplicationEventPublisher","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TransactionConverter","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.PIIDataFilteringService","org.cardanofoundation.lob.app.organisation.OrganisationPublicApi"] }, {"name":"dispatchPending","parameterTypes":["int"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.LedgerService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.OrganisationConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.PIIDataFilteringService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"apply","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.ReportConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.OrganisationConverter","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.BalanceSheetConverter","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.IncomeStatementConverter"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.ReportService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.ReportRepository","org.cardanofoundation.lob.app.accounting_reporting_core.repository.PublicReportRepository","org.cardanofoundation.lob.app.organisation.OrganisationPublicApi","java.time.Clock","org.cardanofoundation.lob.app.support.security.AuthenticationUserService","org.cardanofoundation.lob.app.organisation.repository.ChartOfAccountRepository","org.cardanofoundation.lob.app.organisation.repository.ReportTypeRepository","org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionItemRepository"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.ReportService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.SystemExtractionParametersFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TransactionBatchService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionBatchRepositoryGateway","org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionBatchRepository","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TransactionConverter","org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionBatchAssocRepository","org.springframework.context.ApplicationEventPublisher","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TxBatchStatusCalculator","org.cardanofoundation.lob.app.support.reactive.DebouncerManager","org.cardanofoundation.lob.app.accounting_reporting_core.repository.AccountingCoreTransactionRepository"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TransactionBatchService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TransactionConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.CoreCurrencyService","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.OrganisationConverter"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TransactionReconcilationService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionReconcilationRepository","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TransactionRepositoryGateway","org.springframework.context.ApplicationEventPublisher","org.cardanofoundation.lob.app.blockchain_reader.BlockchainReaderPublicApiIF","org.javers.core.Javers"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TransactionReconcilationService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TransactionRepositoryGateway",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionItemRepository","org.cardanofoundation.lob.app.accounting_reporting_core.repository.AccountingCoreTransactionRepository","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TransactionBatchService","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.LedgerService"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TransactionRepositoryGateway$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.TxBatchStatusCalculator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.metrics.MetricExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getAvailableMetrics","parameterTypes":[] }, {"name":"getData","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.metric.MetricEnum$SubMetric","java.lang.String","java.util.Optional","java.util.Optional"] }, {"name":"getName","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.metrics.MetricService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.metrics.MetricServiceImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.util.List","org.cardanofoundation.lob.app.accounting_reporting_core.repository.DashboardRepository","org.cardanofoundation.lob.app.accounting_reporting_core.mapper.DashboardViewMapper"] }, {"name":"deleteDashboard","parameterTypes":["java.lang.String","java.lang.Long"] }, {"name":"getAllDashboards","parameterTypes":["java.lang.String"] }, {"name":"getAvailableMetrics","parameterTypes":[] }, {"name":"getData","parameterTypes":["java.util.Map","java.lang.String","java.util.Optional","java.util.Optional"] }, {"name":"saveDashboard","parameterTypes":["java.util.List","java.lang.String"] }, {"name":"updateDashboard","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.resource.views.metric.DashboardView","java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.metrics.executors.BalanceSheetMetricService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.ReportService"] }, {"name":"init","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.metrics.executors.IncomeStatementMetricService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.ReportService"] }, {"name":"init","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_common.config.BlockchainCommonConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"api1JsonSchemaMetadataChecker","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper","org.springframework.core.io.Resource"] }, {"name":"api3JsonSchemaMetadataChecker","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper","org.springframework.core.io.Resource"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_common.config.BlockchainCommonConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_common.config.BlockchainCommonConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_common.config.BlockchainCommonConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_common.domain.CardanoNetwork",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_common.domain.ChainTip"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_common.domain.FinalityScore"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_common.domain.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_common.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_common.service_assistance.JsonSchemaMetadataChecker",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"checkTransactionMetadata","parameterTypes":["java.lang.String"] }, {"name":"close","parameterTypes":[] }, {"name":"init","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_common.service_assistance.MetadataChecker",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_common.service_assistance.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.BlockchainPublisherPublicApi",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.config.CardanoClientLibConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"ownerAccount","parameterTypes":["org.cardanofoundation.lob.app.blockchain_common.domain.CardanoNetwork","java.lang.String"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.config.CardanoClientLibConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.config.CardanoClientLibConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.config.CardanoClientLibConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.config.TransactionSubmissionConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"api1L1TransactionCreator","parameterTypes":["com.bloxbean.cardano.client.backend.api.BackendService","org.cardanofoundation.lob.app.blockchain_publisher.service.API1MetadataSerialiser","org.cardanofoundation.lob.app.blockchain_reader.BlockchainReaderPublicApiIF","org.cardanofoundation.lob.app.blockchain_common.service_assistance.MetadataChecker","com.bloxbean.cardano.client.account.Account","int","boolean"] }, {"name":"api3L1TransactionCreator","parameterTypes":["com.bloxbean.cardano.client.backend.api.BackendService","org.cardanofoundation.lob.app.blockchain_publisher.service.API3MetadataSerialiser","org.cardanofoundation.lob.app.blockchain_reader.BlockchainReaderPublicApiIF","org.cardanofoundation.lob.app.blockchain_common.service_assistance.MetadataChecker","com.bloxbean.cardano.client.account.Account","int","boolean"] }, {"name":"backendServiceTransactionSubmissionService","parameterTypes":["com.bloxbean.cardano.client.backend.api.BackendService"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"transactionSubmissionService","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.service.transation_submit.BlockchainTransactionSubmissionService","com.bloxbean.cardano.client.backend.api.BackendService","com.bloxbean.cardano.client.api.UtxoSupplier","java.time.Clock","int","int"] }, {"name":"utxoSupplier","parameterTypes":["com.bloxbean.cardano.client.backend.api.BackendService"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.config.TransactionSubmissionConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.config.TransactionSubmissionConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.config.TransactionSubmissionConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.core.API1BlockchainTransactions"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.core.API3BlockchainTransaction"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.core.BlockchainPublishStatus"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.core.L1Submission"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.core.OnChainStatus"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.core.SerializedCardanoL1Transaction"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.core.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setAssets","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData$Assets"] }, {"name":"setCapital","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData$Capital"] }, {"name":"setLiabilities","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData$Liabilities"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData$Assets",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCurrentAssets","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData$Assets$CurrentAssets"] }, {"name":"setNonCurrentAssets","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData$Assets$NonCurrentAssets"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData$Assets$CurrentAssets",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCashAndCashEquivalents","parameterTypes":["java.math.BigDecimal"] }, {"name":"setCryptoAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setOtherReceivables","parameterTypes":["java.math.BigDecimal"] }, {"name":"setPrepaymentsAndOtherShortTermAssets","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData$Assets$CurrentAssets_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData$Assets$NonCurrentAssets",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setFinancialAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setIntangibleAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setInvestments","parameterTypes":["java.math.BigDecimal"] }, {"name":"setTangibleAssets","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData$Assets$NonCurrentAssets_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData$Assets_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData$Capital",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCapital","parameterTypes":["java.math.BigDecimal"] }, {"name":"setProfitForTheYear","parameterTypes":["java.math.BigDecimal"] }, {"name":"setResultsCarriedForward","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData$Capital_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData$Liabilities",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCurrentLiabilities","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData$Liabilities$CurrentLiabilities"] }, {"name":"setNonCurrentLiabilities","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData$Liabilities$NonCurrentLiabilities"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData$Liabilities$CurrentLiabilities",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setAccrualsAndShortTermProvisions","parameterTypes":["java.math.BigDecimal"] }, {"name":"setOtherShortTermLiabilities","parameterTypes":["java.math.BigDecimal"] }, {"name":"setTradeAccountsPayables","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData$Liabilities$CurrentLiabilities_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData$Liabilities$NonCurrentLiabilities",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setProvisions","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData$Liabilities$NonCurrentLiabilities_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData$Liabilities_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCostOfGoodsAndServices","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$CostOfGoodsAndServices"] }, {"name":"setExtraordinaryIncome","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$ExtraordinaryIncome"] }, {"name":"setFinancialIncome","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$FinancialIncome"] }, {"name":"setOperatingExpenses","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$OperatingExpenses"] }, {"name":"setProfitForTheYear","parameterTypes":["java.math.BigDecimal"] }, {"name":"setRevenues","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$Revenues"] }, {"name":"setTaxExpenses","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$TaxExpenses"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$CostOfGoodsAndServices",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setExternalServices","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$CostOfGoodsAndServices_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$ExtraordinaryIncome",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setExtraordinaryExpenses","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$ExtraordinaryIncome_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$FinancialIncome",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setFinancialExpenses","parameterTypes":["java.math.BigDecimal"] }, {"name":"setFinancialRevenues","parameterTypes":["java.math.BigDecimal"] }, {"name":"setNetIncomeOptionsSale","parameterTypes":["java.math.BigDecimal"] }, {"name":"setRealisedGainsOnSaleOfCryptocurrencies","parameterTypes":["java.math.BigDecimal"] }, {"name":"setStakingRewardsIncome","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$FinancialIncome_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$OperatingExpenses",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setAmortizationOnIntangibleAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setDepreciationAndImpairmentLossesOnTangibleAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setGeneralAndAdministrativeExpenses","parameterTypes":["java.math.BigDecimal"] }, {"name":"setPersonnelExpenses","parameterTypes":["java.math.BigDecimal"] }, {"name":"setRentExpenses","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$OperatingExpenses_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$Revenues",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setBuildOfLongTermProvision","parameterTypes":["java.math.BigDecimal"] }, {"name":"setOtherIncome","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$Revenues_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$TaxExpenses",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setDirectTaxes","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$TaxExpenses_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.ReportEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getPeriod","parameterTypes":[] }, {"name":"getReportId","parameterTypes":[] }, {"name":"setBalanceSheetReportData","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.BalanceSheetData"] }, {"name":"setDate","parameterTypes":["java.time.LocalDate"] }, {"name":"setIncomeStatementReportData","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData"] }, {"name":"setIntervalType","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.IntervalType"] }, {"name":"setL1SubmissionData","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.L1SubmissionData"] }, {"name":"setMode","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.ReportMode"] }, {"name":"setOrganisation","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.Organisation"] }, {"name":"setPeriod","parameterTypes":["java.lang.Short"] }, {"name":"setReportId","parameterTypes":["java.lang.String"] }, {"name":"setType","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.report.ReportType"] }, {"name":"setVer","parameterTypes":["long"] }, {"name":"setYear","parameterTypes":["java.lang.Short"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.ReportEntity_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.AccountEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCode","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.AccountEvent_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.CostCenter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCustomerCode","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.CostCenter_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.Counterparty",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCustomerCode","parameterTypes":["java.lang.String"] }, {"name":"setType","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.Counterparty$Type"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.Counterparty_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.Currency",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCustomerCode","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.Currency_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.Document",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCounterparty","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.Counterparty"] }, {"name":"setCurrency","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.Currency"] }, {"name":"setNum","parameterTypes":["java.lang.String"] }, {"name":"setVat","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.Vat"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.Document_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.L1SubmissionData",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setAbsoluteSlot","parameterTypes":["java.lang.Long"] }, {"name":"setCreationSlot","parameterTypes":["java.lang.Long"] }, {"name":"setFinalityScore","parameterTypes":["org.cardanofoundation.lob.app.blockchain_common.domain.FinalityScore"] }, {"name":"setPublishStatus","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.core.BlockchainPublishStatus"] }, {"name":"setTransactionHash","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.L1SubmissionData_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.Organisation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCountryCode","parameterTypes":["java.lang.String"] }, {"name":"setCurrencyId","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setTaxIdNumber","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.Organisation_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.Project",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCustomerCode","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.Project_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.TransactionEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getId","parameterTypes":[] }, {"name":"setAccountingPeriod","parameterTypes":["java.time.YearMonth"] }, {"name":"setBatchId","parameterTypes":["java.lang.String"] }, {"name":"setEntryDate","parameterTypes":["java.time.LocalDate"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setInternalNumber","parameterTypes":["java.lang.String"] }, {"name":"setItems","parameterTypes":["java.util.Set"] }, {"name":"setL1SubmissionData","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.L1SubmissionData"] }, {"name":"setOrganisation","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.Organisation"] }, {"name":"setTransactionType","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.core.TransactionType"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.TransactionEntity_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.TransactionItemEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getId","parameterTypes":[] }, {"name":"setAccountEvent","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.AccountEvent"] }, {"name":"setAmountFcy","parameterTypes":["java.math.BigDecimal"] }, {"name":"setCostCenter","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.CostCenter"] }, {"name":"setDocument","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.Document"] }, {"name":"setFxRate","parameterTypes":["java.math.BigDecimal"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setProject","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.Project"] }, {"name":"setTransaction","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.TransactionEntity"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.TransactionItemEntity_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.Vat",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setCustomerCode","parameterTypes":["java.lang.String"] }, {"name":"setRate","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.Vat_"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.txs.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.domain.event.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.repository.ReportEntityRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.repository.ReportEntityRepositoryGateway",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.repository.ReportEntityRepository"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.repository.ReportEntityRepositoryGateway$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.repository.TransactionEntityRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.repository.TransactionEntityRepositoryGateway",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.repository.TransactionEntityRepository","org.cardanofoundation.lob.app.blockchain_publisher.repository.TransactionItemEntityRepository","java.time.Clock"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.repository.TransactionEntityRepositoryGateway$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.repository.TransactionItemEntityRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.API1L1TransactionCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"init","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.API1MetadataSerialiser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.time.Clock"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.API3L1TransactionCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"init","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.API3MetadataSerialiser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.time.Clock"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.BlockchainPublishStatusMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.BlockchainPublisherService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.repository.TransactionEntityRepositoryGateway","org.cardanofoundation.lob.app.blockchain_publisher.repository.ReportEntityRepositoryGateway","org.cardanofoundation.lob.app.blockchain_publisher.service.event_publish.LedgerUpdatedEventPublisher","org.cardanofoundation.lob.app.blockchain_publisher.service.TransactionConverter","org.cardanofoundation.lob.app.blockchain_publisher.service.ReportConverter"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.BlockchainPublisherService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.ReportConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.service.BlockchainPublishStatusMapper"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.TransactionConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.service.BlockchainPublishStatusMapper","org.cardanofoundation.lob.app.organisation.OrganisationPublicApi"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.WatchDogService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.OrganisationPublicApiIF","org.cardanofoundation.lob.app.blockchain_publisher.service.BlockchainPublishStatusMapper","org.cardanofoundation.lob.app.blockchain_reader.BlockchainReaderPublicApiIF","org.cardanofoundation.lob.app.blockchain_publisher.repository.TransactionEntityRepositoryGateway","org.cardanofoundation.lob.app.blockchain_publisher.repository.ReportEntityRepositoryGateway","org.cardanofoundation.lob.app.blockchain_publisher.service.event_publish.LedgerUpdatedEventPublisher"] }, {"name":"init","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.WatchDogService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.dispatch.BlockchainReportsDispatcher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.OrganisationPublicApi","org.cardanofoundation.lob.app.blockchain_publisher.repository.ReportEntityRepositoryGateway","org.cardanofoundation.lob.app.blockchain_publisher.service.API3L1TransactionCreator","org.cardanofoundation.lob.app.blockchain_publisher.service.transation_submit.TransactionSubmissionService","org.cardanofoundation.lob.app.blockchain_publisher.service.event_publish.LedgerUpdatedEventPublisher"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.dispatch.BlockchainReportsDispatcher$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.dispatch.BlockchainTransactionsDispatcher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.repository.TransactionEntityRepositoryGateway","org.cardanofoundation.lob.app.organisation.OrganisationPublicApi","org.cardanofoundation.lob.app.blockchain_publisher.service.API1L1TransactionCreator","org.cardanofoundation.lob.app.blockchain_publisher.service.transation_submit.TransactionSubmissionService","org.cardanofoundation.lob.app.blockchain_publisher.service.event_publish.LedgerUpdatedEventPublisher","org.cardanofoundation.lob.app.blockchain_publisher.service.dispatch.DispatchingStrategy"] }, {"name":"init","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.dispatch.BlockchainTransactionsDispatcher$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.dispatch.DispatchingStrategy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"apply","parameterTypes":["java.lang.Object","java.lang.Object"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.dispatch.ImmediateDispatchingStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"apply","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"apply","parameterTypes":["java.lang.String","java.util.Set"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.dispatch.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.event_handle.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.event_publish.LedgerUpdatedEventPublisher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.ApplicationEventPublisher","org.cardanofoundation.lob.app.blockchain_publisher.service.BlockchainPublishStatusMapper"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.event_publish.LedgerUpdatedEventPublisher$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.event_publish.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.transation_submit.BackendServiceBlockchainTransactionSubmissionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"submitTransaction","parameterTypes":["byte[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.transation_submit.BlockchainTransactionSubmissionService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.transation_submit.DefaultTransactionSubmissionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"submitTransaction","parameterTypes":["byte[]"] }, {"name":"submitTransactionWithPossibleConfirmation","parameterTypes":["byte[]","java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_publisher.service.transation_submit.TransactionSubmissionService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.BlockchainReaderPublicApiIF",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.BlockchainReaderPublicApiIF$Noop",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getChainTip","parameterTypes":[] }, {"name":"getTxDetails","parameterTypes":["java.lang.String"] }, {"name":"isOnChain","parameterTypes":["java.util.Set"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.config.BlockchainReaderConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"blockchainReaderPublicApiMock","parameterTypes":["org.cardanofoundation.lob.app.blockchain_common.domain.CardanoNetwork"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.config.BlockchainReaderConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.config.BlockchainReaderConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.config.BlockchainReaderConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.config.CardanoClientLibConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"blockforstBlockchainBackendService","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.config.CardanoClientLibConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.config.CardanoClientLibConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.config.CardanoClientLibConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.config.CardanoConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"cardanoNetwork","parameterTypes":["org.cardanofoundation.lob.app.blockchain_common.domain.CardanoNetwork"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.config.CardanoConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.config.CardanoConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.config.CardanoConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.config.RestClientConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"clientHttpRequestFactory","parameterTypes":[] }, {"name":"restClient","parameterTypes":["org.springframework.web.client.RestClient$Builder","org.springframework.http.client.ClientHttpRequestFactory"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.config.RestClientConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.config.RestClientConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.config.RestClientConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.config.YaciStoreConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"coreBackendService","parameterTypes":["com.bloxbean.cardano.client.backend.api.BackendService"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.config.YaciStoreConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.config.YaciStoreConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.config.YaciStoreConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.blockchain_reader.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.cf_netsuite_altavia_erp_connector.config.CFConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"codesMappingService","parameterTypes":["org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.repository.CodesMappingRepository"] }, {"name":"extractionParametersFilteringService","parameterTypes":[] }, {"name":"netSuiteClient","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper","org.springframework.web.client.RestClient","java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String","int"] }, {"name":"netSuiteExtractionService","parameterTypes":["org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.repository.IngestionRepository","org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.client.NetSuiteClient","org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.TransactionConverter","org.springframework.context.ApplicationEventPublisher","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.SystemExtractionParametersFactory","org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.ExtractionParametersFilteringService","org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.NetSuiteParser","int","boolean"] }, {"name":"netSuiteParser","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper","org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.repository.IngestionRepository","org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.repository.IngestionBodyRepository","java.time.Clock"] }, {"name":"netsuiteReconcilationService","parameterTypes":["org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.repository.IngestionRepository","org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.client.NetSuiteClient","org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.TransactionConverter","org.springframework.context.ApplicationEventPublisher","org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.ExtractionParametersFilteringService","org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.NetSuiteParser","org.cardanofoundation.lob.app.accounting_reporting_core.repository.AccountingCoreTransactionRepository","int","boolean"] }, {"name":"preprocessorService","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"systemExtractionParametersFactory","parameterTypes":["org.cardanofoundation.lob.app.organisation.OrganisationPublicApiIF","org.cardanofoundation.lob.app.accounting_reporting_core.service.assistance.AccountingPeriodCalculator"] }, {"name":"transactionConverter","parameterTypes":["jakarta.validation.Validator","org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.CodesMappingService","org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.PreprocessorService","org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.TransactionTypeMapper","org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.domain.core.FinancialPeriodSource"] }, {"name":"transactionTypeMapper","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.cf_netsuite_altavia_erp_connector.config.CFConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.cf_netsuite_altavia_erp_connector.config.CFConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.cf_netsuite_altavia_erp_connector.config.CFConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.cf_netsuite_altavia_erp_connector.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.csv_erp_adapter.config.CacheConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"temporaryFileCache","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.csv_erp_adapter.config.CacheConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.csv_erp_adapter.config.CacheConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.csv_erp_adapter.config.CacheConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.csv_erp_adapter.domain.TransactionLine"
},
{
  "name":"org.cardanofoundation.lob.app.csv_erp_adapter.service.internal.CsvExtractionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.ApplicationEventPublisher","com.google.common.cache.Cache","org.cardanofoundation.lob.app.accounting_reporting_core.service.internal.SystemExtractionParametersFactory","org.cardanofoundation.lob.app.csv_erp_adapter.service.internal.TransactionConverter","org.cardanofoundation.lob.app.organisation.service.csv.CsvParser"] }]
},
{
  "name":"org.cardanofoundation.lob.app.csv_erp_adapter.service.internal.TransactionConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.kafka.consumer.AccountingCoreKafkaConsumer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }]
},
{
  "name":"org.cardanofoundation.lob.app.kafka.publisher.AccountingCoreKafkaPublisher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.kafka.core.KafkaTemplate"] }]
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.client.NetSuiteClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"init","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.client.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.domain.core.FieldType"
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.domain.core.FinancialPeriodSource"
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.domain.core.TxLine"
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.domain.core.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.domain.entity.CodeMappingEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"setCode","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.domain.entity.CodeMappingEntity$Id"] }]
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.domain.entity.CodeMappingEntity$Id",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"setInternalId","parameterTypes":["java.lang.Long"] }, {"name":"setMappingId","parameterTypes":["java.lang.String"] }, {"name":"setType","parameterTypes":["org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.domain.entity.CodeMappingType"] }]
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.domain.entity.CodeMappingEntity$Id_"
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.domain.entity.CodeMappingEntity_"
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.domain.entity.CodeMappingType"
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.domain.entity.NetSuiteIngestionEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"setAdapterInstanceId","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setIngestionBodies","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.domain.entity.NetSuiteIngestionEntity_"
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.domain.entity.NetsuiteIngestionBody",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"setId","parameterTypes":["java.lang.Long"] }, {"name":"setIngestionBody","parameterTypes":["java.lang.String"] }, {"name":"setIngestionBodyChecksum","parameterTypes":["java.lang.String"] }, {"name":"setIngestionBodyDebug","parameterTypes":["java.lang.String"] }, {"name":"setNetsuiteIngestionId","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.domain.entity.NetsuiteIngestionBody_"
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.domain.entity.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.repository.CodesMappingRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.repository.IngestionBodyRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.repository.IngestionRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.repository.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.event_handle.NetSuiteEventHandler"
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.event_handle.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.CodesMappingService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.CodesMappingService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.ExtractionParametersFilteringService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.NetSuiteExtractionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.NetSuiteExtractionService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.NetSuiteParser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.NetSuiteParser$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.NetSuiteReconcilationService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.NetSuiteReconcilationService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.PreprocessorService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.TransactionConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.TransactionTypeMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"apply","parameterTypes":["java.lang.Object"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.service.internal.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.notification_gateway.domain.core.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.notification_gateway.domain.event.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.notification_gateway.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.OrganisationPublicApi",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.service.OrganisationService","org.cardanofoundation.lob.app.organisation.service.CurrencyService","org.cardanofoundation.lob.app.organisation.service.VatService","org.cardanofoundation.lob.app.organisation.service.CostCenterService","org.cardanofoundation.lob.app.organisation.service.ProjectCodeService","org.cardanofoundation.lob.app.organisation.service.ChartOfAccountsService","org.cardanofoundation.lob.app.organisation.service.AccountEventService"] }, {"name":"findByOrganisationId","parameterTypes":["java.lang.String"] }, {"name":"findCostCenter","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"findCurrencyByCustomerCurrencyCode","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"findEventCode","parameterTypes":["java.lang.String","java.lang.String","java.lang.String"] }, {"name":"findOrganisationByVatAndCode","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"findProject","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"getChartOfAccounts","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"listAll","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.OrganisationPublicApiIF",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.core.OperationType"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.core.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.csv.ChartOfAccountUpdateCsv"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.csv.CostCenterUpdate"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.csv.ProjectUpdate"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.AccountEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"setActive","parameterTypes":["java.lang.Boolean"] }, {"name":"setCustomerCode","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["org.cardanofoundation.lob.app.organisation.domain.entity.AccountEvent$Id"] }, {"name":"setName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.AccountEvent$Id",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"setCreditReferenceCode","parameterTypes":["java.lang.String"] }, {"name":"setDebitReferenceCode","parameterTypes":["java.lang.String"] }, {"name":"setOrganisationId","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.AccountEvent$Id_"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.AccountEvent_"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.ChartOfAccount",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"setActive","parameterTypes":["java.lang.Boolean"] }, {"name":"setCounterParty","parameterTypes":["java.lang.String"] }, {"name":"setCurrencyId","parameterTypes":["java.lang.String"] }, {"name":"setEventRefCode","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["org.cardanofoundation.lob.app.organisation.domain.entity.ChartOfAccount$Id"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setOpeningBalance","parameterTypes":["org.cardanofoundation.lob.app.organisation.domain.entity.OpeningBalance"] }, {"name":"setParentCustomerCode","parameterTypes":["java.lang.String"] }, {"name":"setSubType","parameterTypes":["org.cardanofoundation.lob.app.organisation.domain.entity.ChartOfAccountSubType"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.ChartOfAccount$Id",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"setCustomerCode","parameterTypes":["java.lang.String"] }, {"name":"setOrganisationId","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.ChartOfAccount$Id_"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.ChartOfAccountSubType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"setId","parameterTypes":["java.lang.Long"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setOrganisationId","parameterTypes":["java.lang.String"] }, {"name":"setType","parameterTypes":["org.cardanofoundation.lob.app.organisation.domain.entity.ChartOfAccountType"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.ChartOfAccountSubType_"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.ChartOfAccountType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"setId","parameterTypes":["java.lang.Long"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setOrganisationId","parameterTypes":["java.lang.String"] }, {"name":"setSubTypes","parameterTypes":["java.util.Set"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.ChartOfAccountType_"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.ChartOfAccount_"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.CostCenter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"setActive","parameterTypes":["boolean"] }, {"name":"setId","parameterTypes":["org.cardanofoundation.lob.app.organisation.domain.entity.CostCenter$Id"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setParent","parameterTypes":["org.cardanofoundation.lob.app.organisation.domain.entity.CostCenter"] }, {"name":"setParentCustomerCode","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.CostCenter$Id",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"setCustomerCode","parameterTypes":["java.lang.String"] }, {"name":"setOrganisationId","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.CostCenter$Id_"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.CostCenter_"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.Currency",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"setCurrencyId","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["org.cardanofoundation.lob.app.organisation.domain.entity.Currency$Id"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.Currency$Id",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"setCustomerCode","parameterTypes":["java.lang.String"] }, {"name":"setOrganisationId","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.Currency$Id_"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.Currency_"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.OpeningBalance",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setBalanceFCY","parameterTypes":["java.math.BigDecimal"] }, {"name":"setBalanceLCY","parameterTypes":["java.math.BigDecimal"] }, {"name":"setBalanceType","parameterTypes":["org.cardanofoundation.lob.app.organisation.domain.core.OperationType"] }, {"name":"setDate","parameterTypes":["java.time.LocalDate"] }, {"name":"setOriginalCurrencyIdFCY","parameterTypes":["java.lang.String"] }, {"name":"setOriginalCurrencyIdLCY","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.OpeningBalance_"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.Organisation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"setAccountPeriodDays","parameterTypes":["int"] }, {"name":"setAddress","parameterTypes":["java.lang.String"] }, {"name":"setAdminEmail","parameterTypes":["java.lang.String"] }, {"name":"setCity","parameterTypes":["java.lang.String"] }, {"name":"setCountryCode","parameterTypes":["java.lang.String"] }, {"name":"setCurrencyId","parameterTypes":["java.lang.String"] }, {"name":"setDummyAccount","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setLogo","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setPhoneNumber","parameterTypes":["java.lang.String"] }, {"name":"setPostCode","parameterTypes":["java.lang.String"] }, {"name":"setPreApproveTransactions","parameterTypes":["java.lang.Boolean"] }, {"name":"setPreApproveTransactionsDispatch","parameterTypes":["java.lang.Boolean"] }, {"name":"setProvince","parameterTypes":["java.lang.String"] }, {"name":"setReportCurrencyId","parameterTypes":["java.lang.String"] }, {"name":"setTaxIdNumber","parameterTypes":["java.lang.String"] }, {"name":"setWebsiteUrl","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.Organisation_"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.Project",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"setId","parameterTypes":["org.cardanofoundation.lob.app.organisation.domain.entity.Project$Id"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setParent","parameterTypes":["org.cardanofoundation.lob.app.organisation.domain.entity.Project"] }, {"name":"setParentCustomerCode","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.Project$Id",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"setCustomerCode","parameterTypes":["java.lang.String"] }, {"name":"setOrganisationId","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.Project$Id_"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.Project_"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.ReferenceCode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"setId","parameterTypes":["org.cardanofoundation.lob.app.organisation.domain.entity.ReferenceCode$Id"] }, {"name":"setIsActive","parameterTypes":["boolean"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setParent","parameterTypes":["org.cardanofoundation.lob.app.organisation.domain.entity.ReferenceCode"] }, {"name":"setParentReferenceCode","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.ReferenceCode$Id",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"setOrganisationId","parameterTypes":["java.lang.String"] }, {"name":"setReferenceCode","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.ReferenceCode$Id_"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.ReferenceCode_"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.ReportTypeEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"setFields","parameterTypes":["java.util.List"] }, {"name":"setId","parameterTypes":["java.lang.Long"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setOrganisationId","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.ReportTypeEntity_"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.ReportTypeFieldEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"setAccumulated","parameterTypes":["boolean"] }, {"name":"setAccumulatedPreviousYear","parameterTypes":["boolean"] }, {"name":"setAccumulatedYearly","parameterTypes":["boolean"] }, {"name":"setChildFields","parameterTypes":["java.util.List"] }, {"name":"setId","parameterTypes":["java.lang.Long"] }, {"name":"setMappingReportTypes","parameterTypes":["java.util.List"] }, {"name":"setMappingTypes","parameterTypes":["java.util.List"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setNegate","parameterTypes":["boolean"] }, {"name":"setParent","parameterTypes":["org.cardanofoundation.lob.app.organisation.domain.entity.ReportTypeFieldEntity"] }, {"name":"setReport","parameterTypes":["org.cardanofoundation.lob.app.organisation.domain.entity.ReportTypeEntity"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.ReportTypeFieldEntity_"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.Vat",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"setActive","parameterTypes":["java.lang.Boolean"] }, {"name":"setCountryCode","parameterTypes":["java.lang.String"] }, {"name":"setDescription","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["org.cardanofoundation.lob.app.organisation.domain.entity.Vat$Id"] }, {"name":"setRate","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.Vat$Id",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"setCustomerCode","parameterTypes":["java.lang.String"] }, {"name":"setOrganisationId","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.Vat$Id_"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.Vat_"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.entity.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.request.ChartOfAccountUpdate"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.request.CurrencyUpdate"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.request.EventCodeUpdate"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.request.OrganisationCreate"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.request.OrganisationUpdate"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.request.ReferenceCodeUpdate"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.request.ReportTypeFieldUpdate"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.request.VatUpdate"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.view.AccountEventView"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.view.ChartOfAccountSubTypeView"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.view.ChartOfAccountTypeView"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.view.ChartOfAccountView"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.view.CostCenterView"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.view.CurrencyView"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.view.EventView"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.view.OrganisationView"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.view.ProjectView"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.view.ReferenceCodeView"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.view.ValidationView"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.domain.view.VatView"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.organisation.repository.AccountEventRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.organisation.repository.ChartOfAccountRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.organisation.repository.ChartOfAccountSubTypeRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.organisation.repository.ChartOfAccountTypeRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.organisation.repository.CostCenterRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.organisation.repository.CurrencyRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.organisation.repository.OrganisationRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.organisation.repository.ProjectMappingRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.organisation.repository.ReferenceCodeRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.organisation.repository.ReportTypeFieldRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.organisation.repository.ReportTypeRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.organisation.repository.VatRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.organisation.resource.AccountEventController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.service.AccountEventService","org.cardanofoundation.lob.app.organisation.service.OrganisationService"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.resource.AccountEventController$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.resource.ChartOfAccountController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.service.ChartOfAccountsService"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.resource.ChartOfAccountController$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.resource.CostCenterController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.service.CostCenterService"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.resource.CostCenterController$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.resource.CurrencyController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.service.CurrencyService"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.resource.CurrencyController$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.resource.OrganisationResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.service.OrganisationService","org.cardanofoundation.lob.app.support.security.KeycloakSecurityHelper"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.resource.OrganisationResource$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.resource.ProjectCodeController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.service.ProjectCodeService"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.resource.ProjectCodeController$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.resource.ReferenceCodeResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.service.ReferenceCodeService","org.cardanofoundation.lob.app.organisation.service.OrganisationService"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.resource.ReferenceCodeResource$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.resource.ReportTypeController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.service.ReportTypeService"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.resource.ReportTypeController$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.resource.VatController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.service.VatService"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.resource.VatController$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.service.AccountEventService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.repository.AccountEventRepository","org.cardanofoundation.lob.app.organisation.repository.ReferenceCodeRepository","org.cardanofoundation.lob.app.organisation.service.OrganisationService","org.cardanofoundation.lob.app.organisation.service.csv.CsvParser","org.springframework.validation.Validator"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.service.AccountEventService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.service.ChartOfAccountsService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.repository.ChartOfAccountRepository","org.cardanofoundation.lob.app.organisation.repository.ChartOfAccountTypeRepository","org.cardanofoundation.lob.app.organisation.repository.ChartOfAccountSubTypeRepository","org.cardanofoundation.lob.app.organisation.repository.ReferenceCodeRepository","org.cardanofoundation.lob.app.organisation.service.OrganisationService","org.cardanofoundation.lob.app.organisation.service.csv.CsvParser","org.springframework.validation.Validator"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.service.ChartOfAccountsService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.service.CostCenterService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.repository.CostCenterRepository","org.cardanofoundation.lob.app.organisation.service.csv.CsvParser","org.springframework.validation.Validator"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.service.CostCenterService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.service.CurrencyService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.repository.CurrencyRepository","org.cardanofoundation.lob.app.organisation.service.csv.CsvParser","org.springframework.validation.Validator"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.service.OrganisationService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.repository.OrganisationRepository","org.cardanofoundation.lob.app.organisation.repository.AccountEventRepository","org.cardanofoundation.lob.app.organisation.service.CurrencyService","java.util.List","org.cardanofoundation.lob.app.organisation.service.CostCenterService","org.cardanofoundation.lob.app.organisation.service.ProjectCodeService"] }, {"name":"findAll","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.service.OrganisationService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.service.ProjectCodeService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.repository.ProjectMappingRepository","org.cardanofoundation.lob.app.organisation.service.csv.CsvParser","org.springframework.validation.Validator"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.service.ProjectCodeService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.service.ReferenceCodeService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.repository.ReferenceCodeRepository","org.cardanofoundation.lob.app.organisation.service.OrganisationService","org.cardanofoundation.lob.app.organisation.service.csv.CsvParser","org.cardanofoundation.lob.app.organisation.service.AccountEventService","org.springframework.validation.Validator"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.service.ReferenceCodeService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.service.ReportTypeService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.repository.ReportTypeRepository","org.cardanofoundation.lob.app.organisation.repository.ReportTypeFieldRepository","org.cardanofoundation.lob.app.organisation.repository.ChartOfAccountSubTypeRepository","org.cardanofoundation.lob.app.organisation.service.csv.CsvParser"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.service.ReportTypeService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.service.VatService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.repository.VatRepository","org.cardanofoundation.lob.app.organisation.service.csv.CsvParser","org.springframework.validation.Validator"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.service.VatService$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.service.csv.CsvParser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.support.security.AntiVirusScanner"] }]
},
{
  "name":"org.cardanofoundation.lob.app.organisation.service.validation.OrganisationValidationRule",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.organisation.service.validation.rules.OpeningBalanceEvenRule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.organisation.repository.ChartOfAccountRepository"] }, {"name":"validate","parameterTypes":["org.cardanofoundation.lob.app.organisation.domain.entity.Organisation"] }]
},
{
  "name":"org.cardanofoundation.lob.app.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.support.calc.Summable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"setAccrualsAndShortTermProvisions","parameterTypes":["java.math.BigDecimal"] }, {"name":"setAmortizationOnIntangibleAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setAssets","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Assets"] }, {"name":"setBuildOfLongTermProvision","parameterTypes":["java.math.BigDecimal"] }, {"name":"setCapital","parameterTypes":["java.math.BigDecimal"] }, {"name":"setCapital","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Capital"] }, {"name":"setCashAndCashEquivalents","parameterTypes":["java.math.BigDecimal"] }, {"name":"setCostOfGoodsAndServices","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$CostOfGoodsAndServices"] }, {"name":"setCostOfGoodsAndServices","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$CostOfGoodsAndServices"] }, {"name":"setCryptoAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setCurrentAssets","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Assets$CurrentAssets"] }, {"name":"setCurrentLiabilities","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Liabilities$CurrentLiabilities"] }, {"name":"setDepreciationAndImpairmentLossesOnTangibleAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setDirectTaxes","parameterTypes":["java.math.BigDecimal"] }, {"name":"setExternalServices","parameterTypes":["java.math.BigDecimal"] }, {"name":"setExtraordinaryExpenses","parameterTypes":["java.math.BigDecimal"] }, {"name":"setExtraordinaryIncome","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$ExtraordinaryIncome"] }, {"name":"setExtraordinaryIncome","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$ExtraordinaryIncome"] }, {"name":"setFinancialAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setFinancialExpenses","parameterTypes":["java.math.BigDecimal"] }, {"name":"setFinancialIncome","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$FinancialIncome"] }, {"name":"setFinancialIncome","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$FinancialIncome"] }, {"name":"setFinancialRevenues","parameterTypes":["java.math.BigDecimal"] }, {"name":"setGeneralAndAdministrativeExpenses","parameterTypes":["java.math.BigDecimal"] }, {"name":"setIntangibleAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setInvestments","parameterTypes":["java.math.BigDecimal"] }, {"name":"setLiabilities","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Liabilities"] }, {"name":"setNetIncomeOptionsSale","parameterTypes":["java.math.BigDecimal"] }, {"name":"setNonCurrentAssets","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Assets$NonCurrentAssets"] }, {"name":"setNonCurrentLiabilities","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.BalanceSheetData$Liabilities$NonCurrentLiabilities"] }, {"name":"setOperatingExpenses","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$OperatingExpenses"] }, {"name":"setOperatingExpenses","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$OperatingExpenses"] }, {"name":"setOtherIncome","parameterTypes":["java.math.BigDecimal"] }, {"name":"setOtherReceivables","parameterTypes":["java.math.BigDecimal"] }, {"name":"setOtherShortTermLiabilities","parameterTypes":["java.math.BigDecimal"] }, {"name":"setPersonnelExpenses","parameterTypes":["java.math.BigDecimal"] }, {"name":"setPrepaymentsAndOtherShortTermAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setProfitForTheYear","parameterTypes":["java.math.BigDecimal"] }, {"name":"setProvisions","parameterTypes":["java.math.BigDecimal"] }, {"name":"setRealisedGainsOnSaleOfCryptocurrencies","parameterTypes":["java.math.BigDecimal"] }, {"name":"setRentExpenses","parameterTypes":["java.math.BigDecimal"] }, {"name":"setResultsCarriedForward","parameterTypes":["java.math.BigDecimal"] }, {"name":"setRevenues","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$Revenues"] }, {"name":"setRevenues","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$Revenues"] }, {"name":"setStakingRewardsIncome","parameterTypes":["java.math.BigDecimal"] }, {"name":"setTangibleAssets","parameterTypes":["java.math.BigDecimal"] }, {"name":"setTaxExpenses","parameterTypes":["org.cardanofoundation.lob.app.accounting_reporting_core.domain.entity.report.IncomeStatementData$TaxExpenses"] }, {"name":"setTaxExpenses","parameterTypes":["org.cardanofoundation.lob.app.blockchain_publisher.domain.entity.reports.IncomeStatementData$TaxExpenses"] }, {"name":"setTradeAccountsPayables","parameterTypes":["java.math.BigDecimal"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.calc.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.support.collections.Partitions$Partition"
},
{
  "name":"org.cardanofoundation.lob.app.support.collections.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.support.crypto.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.support.database.SequenceResyncRunner",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"run","parameterTypes":["org.springframework.boot.ApplicationArguments"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.database.SequenceResyncRunner$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.jakarta_validation.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.support.javers.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.support.modulith.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.support.orm.YearMonthStringAttributeConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"convertToDatabaseColumn","parameterTypes":["java.lang.Object"] }, {"name":"convertToEntityAttribute","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.orm.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.support.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.support.problem_support.IdentifiableProblem"
},
{
  "name":"org.cardanofoundation.lob.app.support.problem_support.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.support.reactive.Debouncer"
},
{
  "name":"org.cardanofoundation.lob.app.support.reactive.DebouncerManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"cleanup","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.reactive.TransactionalTaskRunner",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.reactive.TransactionalTaskRunner$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.reactive.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.support.security.AntiVirusScanner",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.cardanofoundation.lob.app.support.security.AuthenticationUserService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.security.KeycloakSecurityHelper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.security.impl.ClamAVService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"isFileSafe","parameterTypes":["byte[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_audit.CommonDateOnlyEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setCreatedAt","parameterTypes":["java.time.LocalDateTime"] }, {"name":"setUpdatedAt","parameterTypes":["java.time.LocalDateTime"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_audit.CommonDateOnlyEntity_"
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_audit.CommonDateOnlyLockableEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setLockedAt","parameterTypes":["java.time.LocalDateTime"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_audit.CommonDateOnlyLockableEntity_"
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_audit.CommonEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"markNotNew","parameterTypes":[] }, {"name":"setBatches","parameterTypes":["java.util.Set"] }, {"name":"setCreatedAt","parameterTypes":["java.time.LocalDateTime"] }, {"name":"setCreatedBy","parameterTypes":["java.lang.String"] }, {"name":"setIsActive","parameterTypes":["boolean"] }, {"name":"setUpdatedAt","parameterTypes":["java.time.LocalDateTime"] }, {"name":"setUpdatedBy","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_audit.CommonEntity$HibernateAccessOptimizer$kdsQaTcj",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_audit.CommonEntity_"
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_audit.internal.AuditConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"auditDataProvider","parameterTypes":["java.time.Clock"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_audit.internal.AuditConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_audit.internal.AuditConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_audit.internal.AuditConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_audit.internal.AuditDataProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getCurrentAuditor","parameterTypes":[] }, {"name":"getNow","parameterTypes":[] }, {"name":"init","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"toDateTimeProvider","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_audit.internal.RevInfoEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getRev","parameterTypes":[] }, {"name":"setRev","parameterTypes":["java.lang.Long"] }, {"name":"setRevTimestamp","parameterTypes":["java.time.LocalDateTime"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_audit.internal.RevInfoEntity_"
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_audit.internal.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_audit.package-info"
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_web.ExceptionResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_web.JsonConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"jackson2ObjectMapperBuilder","parameterTypes":["org.zalando.problem.jackson.ProblemModule"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_web.JsonConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_web.JsonConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_web.JsonConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_web.OrganisationCheckInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.support.security.KeycloakSecurityHelper","com.fasterxml.jackson.databind.ObjectMapper"] }, {"name":"preHandle","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","java.lang.Object"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_web.RequestCachingFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_web.SecurityConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"jwtDecoder","parameterTypes":[] }, {"name":"securityFilterChain","parameterTypes":["org.springframework.security.config.annotation.web.builders.HttpSecurity"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_web.SecurityConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_web.SecurityConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_web.SecurityConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_web.SpringWebConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.support.spring_web.OrganisationCheckInterceptor"] }, {"name":"corsConfigurer","parameterTypes":[] }, {"name":"init","parameterTypes":[] }, {"name":"multipartResolver","parameterTypes":[] }, {"name":"openAPI","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_web.SpringWebConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.support.spring_web.OrganisationCheckInterceptor"] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_web.SpringWebConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_web.SpringWebConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_web.SpringWebConfig$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addCorsMappings","parameterTypes":["org.springframework.web.servlet.config.annotation.CorsRegistry"] }, {"name":"addInterceptors","parameterTypes":["org.springframework.web.servlet.config.annotation.InterceptorRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.cardanofoundation.lob.app.support.spring_web.package-info"
},
{
  "name":"org.crac.Core"
},
{
  "name":"org.crac.Resource"
},
{
  "name":"org.eclipse.collections.api.list.ImmutableList"
},
{
  "name":"org.eclipse.core.runtime.FileLocator"
},
{
  "name":"org.eclipse.jetty.client.HttpClient"
},
{
  "name":"org.eclipse.jetty.ee10.webapp.WebAppContext"
},
{
  "name":"org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer"
},
{
  "name":"org.eclipse.jetty.server.Server"
},
{
  "name":"org.eclipse.jetty.util.Loader"
},
{
  "name":"org.eclipse.persistence.internal.jpa.deployment.JavaSECMPInitializerAgent"
},
{
  "name":"org.eclipse.persistence.jpa.JpaEntityManager"
},
{
  "name":"org.elasticsearch.client.RestClient"
},
{
  "name":"org.elasticsearch.client.RestClientBuilder"
},
{
  "name":"org.flywaydb.core.Flyway",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.flywaydb.core.FlywayTelemetryManager"
},
{
  "name":"org.flywaydb.core.api.FlywayException"
},
{
  "name":"org.flywaydb.core.api.MigrationInfoService"
},
{
  "name":"org.flywaydb.core.api.configuration.Configuration"
},
{
  "name":"org.flywaydb.core.api.configuration.FluentConfiguration"
},
{
  "name":"org.flywaydb.core.api.migration.baseline.BaselineMigrationConfigurationExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getBaselineMigrationPrefix","parameterTypes":[] }, {"name":"setBaselineMigrationPrefix","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.flywaydb.core.api.output.BaselineResult"
},
{
  "name":"org.flywaydb.core.api.output.CleanResult"
},
{
  "name":"org.flywaydb.core.api.output.MigrateResult"
},
{
  "name":"org.flywaydb.core.api.output.OperationResult"
},
{
  "name":"org.flywaydb.core.api.output.RepairResult"
},
{
  "name":"org.flywaydb.core.api.output.ValidateResult"
},
{
  "name":"org.flywaydb.core.api.pattern.ValidatePattern"
},
{
  "name":"org.flywaydb.core.extensibility.ConfigurationExtension",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.flywaydb.core.extensibility.Plugin",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.flywaydb.core.internal.callback.CallbackExecutor"
},
{
  "name":"org.flywaydb.core.internal.command.clean.CleanModeConfigurationExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getClean","parameterTypes":[] }, {"name":"setClean","parameterTypes":["org.flywaydb.core.internal.command.clean.CleanModel"] }]
},
{
  "name":"org.flywaydb.core.internal.command.clean.CleanModel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.flywaydb.core.internal.command.clean.SchemaModel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.flywaydb.core.internal.database.base.Connection"
},
{
  "name":"org.flywaydb.core.internal.database.base.Database"
},
{
  "name":"org.flywaydb.core.internal.database.base.Schema"
},
{
  "name":"org.flywaydb.core.internal.database.base.Table"
},
{
  "name":"org.flywaydb.core.internal.jdbc.StatementInterceptor"
},
{
  "name":"org.flywaydb.core.internal.logging.slf4j.Slf4jLogCreator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.flywaydb.core.internal.proprietaryStubs.LicensingConfigurationExtensionStub",
  "allDeclaredFields":true
},
{
  "name":"org.flywaydb.core.internal.resolver.CompositeMigrationResolver"
},
{
  "name":"org.flywaydb.core.internal.schemahistory.SchemaHistory"
},
{
  "name":"org.flywaydb.database.oracle.OracleConfigurationExtension"
},
{
  "name":"org.flywaydb.database.postgresql.PostgreSQLConfigurationExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getTransactional","parameterTypes":[] }, {"name":"isTransactionalLock","parameterTypes":[] }, {"name":"setTransactional","parameterTypes":["org.flywaydb.database.postgresql.TransactionalModel"] }, {"name":"setTransactionalLock","parameterTypes":["boolean"] }]
},
{
  "name":"org.flywaydb.database.postgresql.TransactionalModel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.flywaydb.database.sqlserver.SQLServerConfigurationExtension"
},
{
  "name":"org.glassfish.jersey.micrometer.server.ObservationApplicationEventListener"
},
{
  "name":"org.glassfish.jersey.server.ResourceConfig"
},
{
  "name":"org.glassfish.jersey.server.spring.SpringComponentProvider"
},
{
  "name":"org.graalvm.nativeimage.ImageInfo",
  "methods":[{"name":"inImageCode","parameterTypes":[] }]
},
{
  "name":"org.h2.Driver"
},
{
  "name":"org.h2.server.web.JakartaWebServlet"
},
{
  "name":"org.hibernate.Cache"
},
{
  "name":"org.hibernate.CacheMode"
},
{
  "name":"org.hibernate.Filter"
},
{
  "name":"org.hibernate.FlushMode"
},
{
  "name":"org.hibernate.HibernateException"
},
{
  "name":"org.hibernate.IdentifierLoadAccess"
},
{
  "name":"org.hibernate.Incubating",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.hibernate.Internal",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.hibernate.LobHelper"
},
{
  "name":"org.hibernate.LockMode"
},
{
  "name":"org.hibernate.LockOptions"
},
{
  "name":"org.hibernate.MappingException"
},
{
  "name":"org.hibernate.MultiIdentifierLoadAccess"
},
{
  "name":"org.hibernate.NaturalIdLoadAccess"
},
{
  "name":"org.hibernate.NaturalIdMultiLoadAccess"
},
{
  "name":"org.hibernate.ReplicationMode"
},
{
  "name":"org.hibernate.Session",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"clear","parameterTypes":[] }, {"name":"createEntityGraph","parameterTypes":["java.lang.Class"] }, {"name":"createEntityGraph","parameterTypes":["java.lang.String"] }, {"name":"createNamedQuery","parameterTypes":["java.lang.String"] }, {"name":"createNamedQuery","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"createQuery","parameterTypes":["jakarta.persistence.criteria.CriteriaDelete"] }, {"name":"createQuery","parameterTypes":["jakarta.persistence.criteria.CriteriaQuery"] }, {"name":"createQuery","parameterTypes":["jakarta.persistence.criteria.CriteriaUpdate"] }, {"name":"createQuery","parameterTypes":["java.lang.String"] }, {"name":"createQuery","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"detach","parameterTypes":["java.lang.Object"] }, {"name":"disableFilter","parameterTypes":["java.lang.String"] }, {"name":"enableFilter","parameterTypes":["java.lang.String"] }, {"name":"flush","parameterTypes":[] }, {"name":"getEnabledFilter","parameterTypes":["java.lang.String"] }, {"name":"getEntityGraph","parameterTypes":["java.lang.String"] }, {"name":"getEntityGraphs","parameterTypes":["java.lang.Class"] }, {"name":"getFlushMode","parameterTypes":[] }, {"name":"getReference","parameterTypes":["java.lang.Class","java.lang.Object"] }, {"name":"merge","parameterTypes":["java.lang.Object"] }, {"name":"persist","parameterTypes":["java.lang.Object"] }, {"name":"refresh","parameterTypes":["java.lang.Object"] }, {"name":"remove","parameterTypes":["java.lang.Object"] }, {"name":"setFlushMode","parameterTypes":["jakarta.persistence.FlushModeType"] }]
},
{
  "name":"org.hibernate.Session$LockRequest"
},
{
  "name":"org.hibernate.SessionBuilder"
},
{
  "name":"org.hibernate.SessionEventListener"
},
{
  "name":"org.hibernate.SessionFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getCache","parameterTypes":[] }, {"name":"getCriteriaBuilder","parameterTypes":[] }]
},
{
  "name":"org.hibernate.SharedSessionBuilder"
},
{
  "name":"org.hibernate.SharedSessionContract",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"beginTransaction","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"createEntityGraph","parameterTypes":["java.lang.Class","java.lang.String"] }, {"name":"createNamedStoredProcedureQuery","parameterTypes":["java.lang.String"] }, {"name":"createStoredProcedureCall","parameterTypes":["java.lang.String"] }, {"name":"createStoredProcedureCall","parameterTypes":["java.lang.String","java.lang.Class[]"] }, {"name":"createStoredProcedureCall","parameterTypes":["java.lang.String","java.lang.String[]"] }, {"name":"createStoredProcedureQuery","parameterTypes":["java.lang.String"] }, {"name":"createStoredProcedureQuery","parameterTypes":["java.lang.String","java.lang.Class[]"] }, {"name":"createStoredProcedureQuery","parameterTypes":["java.lang.String","java.lang.String[]"] }, {"name":"doReturningWork","parameterTypes":["org.hibernate.jdbc.ReturningWork"] }, {"name":"doWork","parameterTypes":["org.hibernate.jdbc.Work"] }, {"name":"getCriteriaBuilder","parameterTypes":[] }, {"name":"getFactory","parameterTypes":[] }, {"name":"getJdbcBatchSize","parameterTypes":[] }, {"name":"getNamedProcedureCall","parameterTypes":["java.lang.String"] }, {"name":"getTenantIdentifier","parameterTypes":[] }, {"name":"getTenantIdentifierValue","parameterTypes":[] }, {"name":"getTransaction","parameterTypes":[] }, {"name":"isConnected","parameterTypes":[] }, {"name":"isJoinedToTransaction","parameterTypes":[] }, {"name":"isOpen","parameterTypes":[] }, {"name":"joinTransaction","parameterTypes":[] }, {"name":"setJdbcBatchSize","parameterTypes":["java.lang.Integer"] }]
},
{
  "name":"org.hibernate.SimpleNaturalIdLoadAccess"
},
{
  "name":"org.hibernate.StatelessSession"
},
{
  "name":"org.hibernate.StatelessSessionBuilder"
},
{
  "name":"org.hibernate.Transaction"
},
{
  "name":"org.hibernate.UnknownProfileException"
},
{
  "name":"org.hibernate.annotations.JdbcType",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.hibernate.annotations.JdbcTypeCode",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.hibernate.annotations.Parameter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.hibernate.annotations.Type",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.hibernate.boot.archive.scan.internal.DisabledScanner",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.hibernate.boot.archive.spi.ArchiveDescriptorFactory"] }]
},
{
  "name":"org.hibernate.boot.beanvalidation.TypeSafeActivator",
  "methods":[{"name":"activate","parameterTypes":["org.hibernate.boot.beanvalidation.ActivationContext"] }]
},
{
  "name":"org.hibernate.boot.cfgxml.internal.CfgXmlAccessServiceImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.boot.internal.DefaultSessionFactoryBuilderService",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.boot.model.naming.ImplicitNamingStrategy"
},
{
  "name":"org.hibernate.boot.model.naming.PhysicalNamingStrategy"
},
{
  "name":"org.hibernate.boot.model.relational.ColumnOrderingStrategyStandard",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.boot.model.relational.Database"
},
{
  "name":"org.hibernate.boot.spi.SessionFactoryOptions"
},
{
  "name":"org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$AreFieldsDirty",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$AreFieldsDirtyWithoutCollections",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$ClearDirtyAttributes",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$ClearDirtyAttributesWithoutCollections",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$ClearOwner",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$GetCollectionTrackerWithoutCollections",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$GetDirtyAttributes",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$GetDirtyAttributesWithoutCollections",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$InitializeLazyAttributeLoadingInterceptor",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$SetOwner",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$SuspendDirtyTracking",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$TrackChange",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.bytecode.enhance.spi.interceptor.BytecodeInterceptorLogging_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.bytecode.enhance.spi.interceptor.BytecodeInterceptorLogging_$logger_en"
},
{
  "name":"org.hibernate.bytecode.enhance.spi.interceptor.BytecodeInterceptorLogging_$logger_en_US"
},
{
  "name":"org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.bytecode.spi.ReflectionOptimizer$AccessOptimizer",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.bytecode.spi.ReflectionOptimizer$InstantiationOptimizer",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.cache.MutableCacheKeyBuilder"
},
{
  "name":"org.hibernate.cache.internal.DisabledCaching",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.cache.internal.NoCachingRegionFactory",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.dialect.Dialect"
},
{
  "name":"org.hibernate.dialect.DialectLogging_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.dialect.DialectLogging_$logger_en"
},
{
  "name":"org.hibernate.dialect.DialectLogging_$logger_en_US"
},
{
  "name":"org.hibernate.dialect.PostgreSQL95Dialect"
},
{
  "name":"org.hibernate.dialect.PostgreSQLEnumJdbcType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"addAuxiliaryDatabaseObjects","parameterTypes":["org.hibernate.type.descriptor.java.JavaType","org.hibernate.engine.jdbc.Size","org.hibernate.boot.model.relational.Database","org.hibernate.type.descriptor.jdbc.JdbcTypeIndicators"] }, {"name":"addAuxiliaryDatabaseObjects","parameterTypes":["org.hibernate.type.descriptor.java.JavaType","org.hibernate.engine.jdbc.Size","org.hibernate.boot.model.relational.Database","org.hibernate.type.spi.TypeConfiguration"] }, {"name":"getBinder","parameterTypes":["org.hibernate.type.descriptor.java.JavaType"] }, {"name":"getDefaultSqlTypeCode","parameterTypes":[] }, {"name":"getExtractor","parameterTypes":["org.hibernate.type.descriptor.java.JavaType"] }, {"name":"getFriendlyName","parameterTypes":[] }, {"name":"getJdbcLiteralFormatter","parameterTypes":["org.hibernate.type.descriptor.java.JavaType"] }, {"name":"getJdbcTypeCode","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.hibernate.dialect.PostgreSQLInetJdbcType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.dialect.PostgreSQLJsonPGObjectJsonbType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.dialect.PostgreSQLStructPGObjectJdbcType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.engine.config.internal.ConfigurationServiceImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.Size"
},
{
  "name":"org.hibernate.engine.jdbc.batch.JdbcBatchLogging_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.engine.jdbc.batch.JdbcBatchLogging_$logger_en"
},
{
  "name":"org.hibernate.engine.jdbc.batch.JdbcBatchLogging_$logger_en_US"
},
{
  "name":"org.hibernate.engine.jdbc.batch.internal.BatchBuilderImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl",
  "queryAllPublicMethods":true,
  "methods":[{"name":"setJndiService","parameterTypes":["org.hibernate.engine.jndi.spi.JndiService"] }]
},
{
  "name":"org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.env.internal.LobCreationLogging_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.engine.jdbc.env.internal.LobCreationLogging_$logger_en"
},
{
  "name":"org.hibernate.engine.jdbc.env.internal.LobCreationLogging_$logger_en_US"
},
{
  "name":"org.hibernate.engine.jdbc.internal.JdbcServicesImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.mutation.internal.StandardMutationExecutorService",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper"
},
{
  "name":"org.hibernate.engine.jdbc.spi.SqlStatementLogger",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.jndi.internal.JndiServiceImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.query.internal.NativeQueryInterpreterStandardImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.spi.FilterDefinition"
},
{
  "name":"org.hibernate.engine.spi.Mapping"
},
{
  "name":"org.hibernate.engine.spi.PrimeAmongSecondarySupertypes",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.engine.spi.SessionFactoryImplementor"
},
{
  "name":"org.hibernate.engine.spi.SessionImplementor"
},
{
  "name":"org.hibernate.engine.spi.SharedSessionContractImplementor"
},
{
  "name":"org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.envers.Audited",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.hibernate.envers.NotAudited",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.hibernate.envers.RevisionEntity",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.hibernate.envers.RevisionNumber",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.hibernate.envers.RevisionTimestamp",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.hibernate.envers.boot.internal.EnversServiceImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.envers.boot.internal.LegacyModifiedColumnNamingStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.envers.boot.model.RootPersistentEntity",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.envers.configuration.internal.metadata.AuditTableData","org.hibernate.mapping.PersistentClass"] }]
},
{
  "name":"org.hibernate.envers.internal.EnversMessageLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.envers.internal.EnversMessageLogger_$logger_en"
},
{
  "name":"org.hibernate.envers.internal.EnversMessageLogger_$logger_en_US"
},
{
  "name":"org.hibernate.envers.internal.entities.mapper.relation.lazy.proxy.ListProxy",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.envers.internal.entities.mapper.relation.lazy.initializor.Initializor"] }]
},
{
  "name":"org.hibernate.envers.internal.entities.mapper.relation.lazy.proxy.SetProxy",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.envers.internal.entities.mapper.relation.lazy.initializor.Initializor"] }]
},
{
  "name":"org.hibernate.envers.strategy.DefaultAuditStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.event.spi.EventType",
  "allDeclaredFields":true
},
{
  "name":"org.hibernate.exception.internal.SQLStateConversionDelegate"
},
{
  "name":"org.hibernate.exception.internal.StandardSQLExceptionConverter"
},
{
  "name":"org.hibernate.graph.RootGraph"
},
{
  "name":"org.hibernate.id.Assigned",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.id.IdentityGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.id.enhanced.NoopOptimizer",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class","int"] }]
},
{
  "name":"org.hibernate.id.enhanced.SequenceStyleGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.internal.CoreMessageLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.internal.CoreMessageLogger_$logger_en"
},
{
  "name":"org.hibernate.internal.CoreMessageLogger_$logger_en_US"
},
{
  "name":"org.hibernate.internal.EntityManagerMessageLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.internal.EntityManagerMessageLogger_$logger_en"
},
{
  "name":"org.hibernate.internal.EntityManagerMessageLogger_$logger_en_US"
},
{
  "name":"org.hibernate.internal.util.IndexedConsumer"
},
{
  "name":"org.hibernate.jdbc.ReturningWork"
},
{
  "name":"org.hibernate.jdbc.Work"
},
{
  "name":"org.hibernate.metamodel.mapping.BasicValuedMapping",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"addToCacheKey","parameterTypes":["org.hibernate.cache.MutableCacheKeyBuilder","java.lang.Object","org.hibernate.engine.spi.SharedSessionContractImplementor"] }, {"name":"getJdbcMapping","parameterTypes":["int"] }, {"name":"getJdbcTypeCount","parameterTypes":[] }, {"name":"getSingleJdbcMapping","parameterTypes":[] }]
},
{
  "name":"org.hibernate.metamodel.mapping.Bindable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"forEachDisassembledJdbcValue","parameterTypes":["java.lang.Object","int","org.hibernate.metamodel.mapping.Bindable$JdbcValuesConsumer","org.hibernate.engine.spi.SharedSessionContractImplementor"] }, {"name":"forEachDisassembledJdbcValue","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.Object","org.hibernate.metamodel.mapping.Bindable$JdbcValuesBiConsumer","org.hibernate.engine.spi.SharedSessionContractImplementor"] }, {"name":"forEachDisassembledJdbcValue","parameterTypes":["java.lang.Object","org.hibernate.metamodel.mapping.Bindable$JdbcValuesConsumer","org.hibernate.engine.spi.SharedSessionContractImplementor"] }, {"name":"forEachJdbcType","parameterTypes":["org.hibernate.internal.util.IndexedConsumer"] }, {"name":"forEachJdbcValue","parameterTypes":["java.lang.Object","int","java.lang.Object","java.lang.Object","org.hibernate.metamodel.mapping.Bindable$JdbcValuesBiConsumer","org.hibernate.engine.spi.SharedSessionContractImplementor"] }, {"name":"forEachJdbcValue","parameterTypes":["java.lang.Object","int","org.hibernate.metamodel.mapping.Bindable$JdbcValuesConsumer","org.hibernate.engine.spi.SharedSessionContractImplementor"] }, {"name":"forEachJdbcValue","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.Object","org.hibernate.metamodel.mapping.Bindable$JdbcValuesBiConsumer","org.hibernate.engine.spi.SharedSessionContractImplementor"] }, {"name":"forEachJdbcValue","parameterTypes":["java.lang.Object","org.hibernate.metamodel.mapping.Bindable$JdbcValuesConsumer","org.hibernate.engine.spi.SharedSessionContractImplementor"] }]
},
{
  "name":"org.hibernate.metamodel.mapping.Bindable$JdbcValuesBiConsumer"
},
{
  "name":"org.hibernate.metamodel.mapping.Bindable$JdbcValuesConsumer"
},
{
  "name":"org.hibernate.metamodel.mapping.JdbcMapping"
},
{
  "name":"org.hibernate.metamodel.mapping.JdbcMappingContainer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.metamodel.mapping.MappingModelCreationLogging_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.metamodel.mapping.MappingModelCreationLogging_$logger_en"
},
{
  "name":"org.hibernate.metamodel.mapping.MappingModelCreationLogging_$logger_en_US"
},
{
  "name":"org.hibernate.metamodel.mapping.MappingModelExpressible",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.metamodel.mapping.MappingType"
},
{
  "name":"org.hibernate.metamodel.mapping.SqlExpressible",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.metamodel.mapping.ValueMapping",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"treatAs","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.hibernate.metamodel.model.domain.DomainType",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getSqmType","parameterTypes":[] }, {"name":"getTupleLength","parameterTypes":[] }]
},
{
  "name":"org.hibernate.metamodel.model.domain.JpaMetamodel"
},
{
  "name":"org.hibernate.persister.collection.BasicCollectionPersister",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.mapping.Collection","org.hibernate.cache.spi.access.CollectionDataAccess","org.hibernate.metamodel.spi.RuntimeModelCreationContext"] }]
},
{
  "name":"org.hibernate.persister.collection.OneToManyPersister",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.mapping.Collection","org.hibernate.cache.spi.access.CollectionDataAccess","org.hibernate.metamodel.spi.RuntimeModelCreationContext"] }]
},
{
  "name":"org.hibernate.persister.entity.SingleTableEntityPersister",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.mapping.PersistentClass","org.hibernate.cache.spi.access.EntityDataAccess","org.hibernate.cache.spi.access.NaturalIdDataAccess","org.hibernate.metamodel.spi.RuntimeModelCreationContext"] }]
},
{
  "name":"org.hibernate.persister.internal.PersisterFactoryImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.persister.internal.StandardPersisterClassResolver",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.procedure.ProcedureCall"
},
{
  "name":"org.hibernate.property.access.internal.PropertyAccessStrategyResolverStandardImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.proxy.HibernateProxy",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.proxy.ProxyConfiguration",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.proxy.ProxyConfiguration$InterceptorDispatcher",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.query.BindableType",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.query.MutationQuery"
},
{
  "name":"org.hibernate.query.NativeQuery"
},
{
  "name":"org.hibernate.query.Query"
},
{
  "name":"org.hibernate.query.QueryLogging_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.query.QueryLogging_$logger_en"
},
{
  "name":"org.hibernate.query.QueryLogging_$logger_en_US"
},
{
  "name":"org.hibernate.query.QueryProducer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createMutationQuery","parameterTypes":["jakarta.persistence.criteria.CriteriaDelete"] }, {"name":"createMutationQuery","parameterTypes":["jakarta.persistence.criteria.CriteriaUpdate"] }, {"name":"createMutationQuery","parameterTypes":["java.lang.String"] }, {"name":"createMutationQuery","parameterTypes":["org.hibernate.query.criteria.JpaCriteriaInsert"] }, {"name":"createMutationQuery","parameterTypes":["org.hibernate.query.criteria.JpaCriteriaInsertSelect"] }, {"name":"createNamedMutationQuery","parameterTypes":["java.lang.String"] }, {"name":"createNamedSelectionQuery","parameterTypes":["java.lang.String"] }, {"name":"createNamedSelectionQuery","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"createNativeMutationQuery","parameterTypes":["java.lang.String"] }, {"name":"createNativeQuery","parameterTypes":["java.lang.String"] }, {"name":"createNativeQuery","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"createNativeQuery","parameterTypes":["java.lang.String","java.lang.Class","java.lang.String"] }, {"name":"createNativeQuery","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"createNativeQuery","parameterTypes":["java.lang.String","java.lang.String","java.lang.Class"] }, {"name":"createSelectionQuery","parameterTypes":["jakarta.persistence.criteria.CriteriaQuery"] }, {"name":"createSelectionQuery","parameterTypes":["java.lang.String"] }, {"name":"createSelectionQuery","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"getNamedNativeQuery","parameterTypes":["java.lang.String"] }, {"name":"getNamedNativeQuery","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"getNamedQuery","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.hibernate.query.SelectionQuery"
},
{
  "name":"org.hibernate.query.TypedParameterValue"
},
{
  "name":"org.hibernate.query.criteria.HibernateCriteriaBuilder"
},
{
  "name":"org.hibernate.query.criteria.JpaCriteriaInsert"
},
{
  "name":"org.hibernate.query.criteria.JpaCriteriaInsertSelect"
},
{
  "name":"org.hibernate.query.hql.HqlLogging_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.query.hql.HqlLogging_$logger_en"
},
{
  "name":"org.hibernate.query.hql.HqlLogging_$logger_en_US"
},
{
  "name":"org.hibernate.query.spi.AbstractSelectionQuery"
},
{
  "name":"org.hibernate.query.sqm.CastType"
},
{
  "name":"org.hibernate.query.sqm.SqmExpressible",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getRelationalJavaType","parameterTypes":[] }, {"name":"getTypeName","parameterTypes":[] }, {"name":"isInstance","parameterTypes":["java.lang.Object"] }, {"name":"resolveExpressible","parameterTypes":["org.hibernate.engine.spi.SessionFactoryImplementor"] }]
},
{
  "name":"org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan"
},
{
  "name":"org.hibernate.query.sqm.internal.QuerySqmImpl"
},
{
  "name":"org.hibernate.relational.SchemaManager"
},
{
  "name":"org.hibernate.resource.beans.container.spi.BeanContainer"
},
{
  "name":"org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.sql.ast.internal.ParameterMarkerStrategyStandard",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.sql.ast.spi.SqlAppender"
},
{
  "name":"org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger_en"
},
{
  "name":"org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger_en_US"
},
{
  "name":"org.hibernate.sql.ast.tree.expression.Expression"
},
{
  "name":"org.hibernate.sql.exec.SqlExecLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.sql.exec.SqlExecLogger_$logger_en"
},
{
  "name":"org.hibernate.sql.exec.SqlExecLogger_$logger_en_US"
},
{
  "name":"org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl"
},
{
  "name":"org.hibernate.sql.exec.spi.JdbcSelectExecutor"
},
{
  "name":"org.hibernate.sql.results.LoadingLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.sql.results.LoadingLogger_$logger_en"
},
{
  "name":"org.hibernate.sql.results.LoadingLogger_$logger_en_US"
},
{
  "name":"org.hibernate.sql.results.ResultsLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.sql.results.ResultsLogger_$logger_en"
},
{
  "name":"org.hibernate.sql.results.ResultsLogger_$logger_en_US"
},
{
  "name":"org.hibernate.sql.results.internal.RowProcessingStateStandardImpl"
},
{
  "name":"org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues"
},
{
  "name":"org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess"
},
{
  "name":"org.hibernate.sql.results.jdbc.internal.JdbcValuesMappingProducerProviderStandard",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl"
},
{
  "name":"org.hibernate.sql.results.spi.ListResultsConsumer"
},
{
  "name":"org.hibernate.stat.HibernateMetrics"
},
{
  "name":"org.hibernate.stat.SessionStatistics"
},
{
  "name":"org.hibernate.stat.Statistics"
},
{
  "name":"org.hibernate.stat.internal.StatisticsImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.type.ForeignKeyDirection"
},
{
  "name":"org.hibernate.type.SqlTypes",
  "allPublicFields":true
},
{
  "name":"org.hibernate.type.Type",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"disassemble","parameterTypes":["java.lang.Object","org.hibernate.engine.spi.SessionFactoryImplementor"] }, {"name":"getReturnedClassName","parameterTypes":[] }]
},
{
  "name":"org.hibernate.type.descriptor.ValueBinder"
},
{
  "name":"org.hibernate.type.descriptor.ValueExtractor"
},
{
  "name":"org.hibernate.type.descriptor.WrapperOptions"
},
{
  "name":"org.hibernate.type.descriptor.converter.spi.BasicValueConverter"
},
{
  "name":"org.hibernate.type.descriptor.java.AbstractClassJavaType",
  "methods":[{"name":"setJdbcType","parameterTypes":[] }]
},
{
  "name":"org.hibernate.type.descriptor.java.JavaType"
},
{
  "name":"org.hibernate.type.descriptor.java.JavaTypedExpressible",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.type.descriptor.jdbc.JdbcLiteralFormatter"
},
{
  "name":"org.hibernate.type.descriptor.jdbc.JdbcType",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"appendWriteExpression","parameterTypes":["java.lang.String","org.hibernate.sql.ast.spi.SqlAppender","org.hibernate.dialect.Dialect"] }, {"name":"getCastType","parameterTypes":[] }, {"name":"getCheckCondition","parameterTypes":["java.lang.String","org.hibernate.type.descriptor.java.JavaType","org.hibernate.type.descriptor.converter.spi.BasicValueConverter","org.hibernate.dialect.Dialect"] }, {"name":"getDdlTypeCode","parameterTypes":[] }, {"name":"getExtraCreateTableInfo","parameterTypes":["org.hibernate.type.descriptor.java.JavaType","java.lang.String","java.lang.String","org.hibernate.boot.model.relational.Database"] }, {"name":"getJdbcRecommendedJavaTypeMapping","parameterTypes":["java.lang.Integer","java.lang.Integer","org.hibernate.type.spi.TypeConfiguration"] }, {"name":"getPreferredJavaTypeClass","parameterTypes":["org.hibernate.type.descriptor.WrapperOptions"] }, {"name":"isBinary","parameterTypes":[] }, {"name":"isDecimal","parameterTypes":[] }, {"name":"isDuration","parameterTypes":[] }, {"name":"isFloat","parameterTypes":[] }, {"name":"isInteger","parameterTypes":[] }, {"name":"isInterval","parameterTypes":[] }, {"name":"isLob","parameterTypes":[] }, {"name":"isLobOrLong","parameterTypes":[] }, {"name":"isNationalized","parameterTypes":[] }, {"name":"isNumber","parameterTypes":[] }, {"name":"isString","parameterTypes":[] }, {"name":"isStringLike","parameterTypes":[] }, {"name":"isTemporal","parameterTypes":[] }, {"name":"registerOutParameter","parameterTypes":["java.sql.CallableStatement","int"] }, {"name":"registerOutParameter","parameterTypes":["java.sql.CallableStatement","java.lang.String"] }, {"name":"wrapTopLevelSelectionExpression","parameterTypes":["org.hibernate.sql.ast.tree.expression.Expression"] }, {"name":"wrapWriteExpression","parameterTypes":["java.lang.String","org.hibernate.dialect.Dialect"] }]
},
{
  "name":"org.hibernate.type.descriptor.jdbc.JdbcTypeIndicators"
},
{
  "name":"org.hibernate.type.spi.TypeConfiguration"
},
{
  "name":"org.hibernate.usertype.DynamicParameterizedType",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.usertype.EnhancedUserType",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.usertype.ParameterizedType",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.usertype.UserType",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getDefaultSqlLength","parameterTypes":["org.hibernate.dialect.Dialect","org.hibernate.type.descriptor.jdbc.JdbcType"] }, {"name":"getDefaultSqlPrecision","parameterTypes":["org.hibernate.dialect.Dialect","org.hibernate.type.descriptor.jdbc.JdbcType"] }, {"name":"getDefaultSqlScale","parameterTypes":["org.hibernate.dialect.Dialect","org.hibernate.type.descriptor.jdbc.JdbcType"] }, {"name":"getJdbcType","parameterTypes":["org.hibernate.type.spi.TypeConfiguration"] }, {"name":"getValueConverter","parameterTypes":[] }]
},
{
  "name":"org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
  "methods":[{"name":"externalClassLoader","parameterTypes":["java.lang.ClassLoader"] }]
},
{
  "name":"org.hibernate.validator.internal.engine.ConfigurationImpl"
},
{
  "name":"org.hibernate.validator.internal.engine.resolver.JPATraversableResolver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger_en"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger_en_US"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Messages_$bundle",
  "fields":[{"name":"INSTANCE"}]
},
{
  "name":"org.hibernate.validator.internal.util.logging.Messages_$bundle_en"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Messages_$bundle_en_US"
},
{
  "name":"org.hsqldb.jdbc.JDBCDriver"
},
{
  "name":"org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager"
},
{
  "name":"org.influxdb.InfluxDB"
},
{
  "name":"org.javers.core.Changes"
},
{
  "name":"org.javers.core.CoreConfiguration"
},
{
  "name":"org.javers.core.Javers",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.javers.core.JaversCore",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.diff.DiffFactory","org.javers.core.metamodel.type.TypeMapper","org.javers.core.json.JsonConverter","org.javers.core.commit.CommitFactory","org.javers.repository.api.JaversExtendedRepository","org.javers.repository.jql.QueryRunner","org.javers.core.metamodel.object.GlobalIdFactory","org.javers.core.CoreConfiguration"] }, {"name":"close","parameterTypes":[] }, {"name":"commit","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"commit","parameterTypes":["java.lang.String","java.lang.Object","java.util.Map"] }, {"name":"commitAsync","parameterTypes":["java.lang.String","java.lang.Object","java.util.Map","java.util.concurrent.Executor"] }, {"name":"commitAsync","parameterTypes":["java.lang.String","java.lang.Object","java.util.concurrent.Executor"] }, {"name":"commitShallowDelete","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"commitShallowDelete","parameterTypes":["java.lang.String","java.lang.Object","java.util.Map"] }, {"name":"commitShallowDeleteById","parameterTypes":["java.lang.String","org.javers.repository.jql.GlobalIdDTO"] }, {"name":"commitShallowDeleteById","parameterTypes":["java.lang.String","org.javers.repository.jql.GlobalIdDTO","java.util.Map"] }, {"name":"compare","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"compareCollections","parameterTypes":["java.util.Collection","java.util.Collection","java.lang.Class"] }, {"name":"findChanges","parameterTypes":["org.javers.repository.jql.JqlQuery"] }, {"name":"findShadows","parameterTypes":["org.javers.repository.jql.JqlQuery"] }, {"name":"findShadowsAndStream","parameterTypes":["org.javers.repository.jql.JqlQuery"] }, {"name":"findSnapshots","parameterTypes":["org.javers.repository.jql.JqlQuery"] }, {"name":"getCoreConfiguration","parameterTypes":[] }, {"name":"getHistoricalSnapshot","parameterTypes":["java.lang.Object","java.lang.Class","java.time.LocalDateTime"] }, {"name":"getJsonConverter","parameterTypes":[] }, {"name":"getLatestSnapshot","parameterTypes":["java.lang.Object","java.lang.Class"] }, {"name":"getProperty","parameterTypes":["org.javers.core.diff.changetype.PropertyChange"] }, {"name":"getTypeMapping","parameterTypes":["java.lang.reflect.Type"] }, {"name":"initial","parameterTypes":["java.lang.Object"] }, {"name":"processChangeList","parameterTypes":["java.util.List","org.javers.core.changelog.ChangeProcessor"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.javers.core.JaversCore$CommitWithTimestamp"
},
{
  "name":"org.javers.core.changelog.ChangeProcessor"
},
{
  "name":"org.javers.core.commit.Commit"
},
{
  "name":"org.javers.core.commit.CommitFactory",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.diff.DiffFactory","org.javers.repository.api.JaversExtendedRepository","org.javers.common.date.DateProvider","org.javers.core.graph.LiveGraphFactory","org.javers.core.snapshot.SnapshotFactory","org.javers.core.snapshot.SnapshotGraphFactory","org.javers.core.snapshot.ChangedCdoSnapshotsFactory","org.javers.core.commit.CommitIdFactory"] }]
},
{
  "name":"org.javers.core.commit.CommitIdFactory",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.CoreConfiguration","org.javers.repository.api.JaversExtendedRepository","org.javers.core.commit.CommitSeqGenerator","org.javers.core.commit.DistributedCommitSeqGenerator"] }]
},
{
  "name":"org.javers.core.commit.CommitSeqGenerator",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.javers.core.commit.DistributedCommitSeqGenerator",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.javers.core.diff.Diff"
},
{
  "name":"org.javers.core.diff.DiffFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.type.TypeMapper","java.util.List","java.util.List","org.javers.core.graph.LiveGraphFactory","org.javers.core.CoreConfiguration"] }]
},
{
  "name":"org.javers.core.diff.appenders.ArrayChangeAppender",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.diff.appenders.MapChangeAppender"] }]
},
{
  "name":"org.javers.core.diff.appenders.CollectionAsListChangeAppender",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.diff.appenders.MapChangeAppender"] }]
},
{
  "name":"org.javers.core.diff.appenders.MapChangeAppender",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.javers.core.diff.appenders.NewObjectAppender",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.javers.core.diff.appenders.ObjectRemovedAppender",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.javers.core.diff.appenders.OptionalChangeAppender",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.javers.core.diff.appenders.ReferenceChangeAppender",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.javers.core.diff.appenders.SetChangeAppender",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.javers.core.diff.appenders.SimpleListChangeAppender",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.diff.appenders.MapChangeAppender"] }]
},
{
  "name":"org.javers.core.diff.appenders.ValueChangeAppender",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.javers.core.diff.changetype.PropertyChange"
},
{
  "name":"org.javers.core.graph.CollectionsCdoFactory",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.scanner.ClassScanner","org.javers.core.graph.TailoredJaversMemberFactory","org.javers.core.metamodel.type.TypeMapper"] }]
},
{
  "name":"org.javers.core.graph.LiveCdoFactory",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.object.GlobalIdFactory","org.javers.core.graph.ObjectAccessHook","org.javers.core.metamodel.type.TypeMapper","org.javers.core.graph.ObjectHasher"] }]
},
{
  "name":"org.javers.core.graph.LiveGraphFactory",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.type.TypeMapper","org.javers.core.graph.LiveCdoFactory","org.javers.core.graph.CollectionsCdoFactory"] }]
},
{
  "name":"org.javers.core.graph.ObjectAccessHookDoNothingImpl",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.javers.core.graph.SnapshotObjectHasher",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.snapshot.SnapshotFactory","org.javers.core.json.JsonConverter"] }]
},
{
  "name":"org.javers.core.graph.TailoredJaversFieldFactory",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.javers.core.json.JsonConverter"
},
{
  "name":"org.javers.core.json.JsonConverterBuilder",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.javers.core.json.typeadapter.change.ArrayChangeTypeAdapter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.type.TypeMapper"] }]
},
{
  "name":"org.javers.core.json.typeadapter.change.ChangeTypeAdapter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.type.TypeMapper"] }]
},
{
  "name":"org.javers.core.json.typeadapter.change.ListChangeTypeAdapter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.type.TypeMapper"] }]
},
{
  "name":"org.javers.core.json.typeadapter.change.MapChangeTypeAdapter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.type.TypeMapper"] }]
},
{
  "name":"org.javers.core.json.typeadapter.change.NewObjectTypeAdapter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.type.TypeMapper"] }]
},
{
  "name":"org.javers.core.json.typeadapter.change.ObjectRemovedTypeAdapter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.type.TypeMapper"] }]
},
{
  "name":"org.javers.core.json.typeadapter.change.ReferenceChangeTypeAdapter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.type.TypeMapper"] }]
},
{
  "name":"org.javers.core.json.typeadapter.change.SetChangeTypeAdapter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.type.TypeMapper"] }]
},
{
  "name":"org.javers.core.json.typeadapter.change.ValueChangeTypeAdapter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.type.TypeMapper"] }]
},
{
  "name":"org.javers.core.json.typeadapter.commit.CdoSnapshotStateTypeAdapter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.javers.core.json.typeadapter.commit.CdoSnapshotTypeAdapter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.type.TypeMapper"] }]
},
{
  "name":"org.javers.core.json.typeadapter.commit.CommitIdTypeAdapter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.javers.core.json.typeadapter.commit.CommitMetadataTypeAdapter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.javers.core.json.typeadapter.commit.GlobalIdTypeAdapter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.type.TypeMapper"] }]
},
{
  "name":"org.javers.core.metamodel.annotation.DiffIgnore",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.javers.core.metamodel.object.GlobalIdFactory",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.type.TypeMapper","org.javers.core.graph.ObjectAccessHook"] }]
},
{
  "name":"org.javers.core.metamodel.property.Property"
},
{
  "name":"org.javers.core.metamodel.scanner.AnnotationNamesProvider",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.javers.core.metamodel.scanner.ClassAnnotationsScanner",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.scanner.AnnotationNamesProvider"] }]
},
{
  "name":"org.javers.core.metamodel.scanner.ClassScanner",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.scanner.PropertyScanner","org.javers.core.metamodel.scanner.ClassAnnotationsScanner"] }]
},
{
  "name":"org.javers.core.metamodel.scanner.FieldBasedPropertyScanner",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.scanner.AnnotationNamesProvider"] }]
},
{
  "name":"org.javers.core.metamodel.type.JaversType"
},
{
  "name":"org.javers.core.metamodel.type.ManagedType"
},
{
  "name":"org.javers.core.metamodel.type.TypeMapper",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.scanner.ClassScanner","org.javers.core.metamodel.type.DynamicMappingStrategy"] }]
},
{
  "name":"org.javers.core.snapshot.ChangedCdoSnapshotsFactory",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.snapshot.SnapshotFactory"] }]
},
{
  "name":"org.javers.core.snapshot.SnapshotDiffer",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.diff.DiffFactory","org.javers.core.CoreConfiguration"] }]
},
{
  "name":"org.javers.core.snapshot.SnapshotFactory",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.type.TypeMapper"] }]
},
{
  "name":"org.javers.core.snapshot.SnapshotGraphFactory",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.repository.api.JaversExtendedRepository"] }]
},
{
  "name":"org.javers.guava.MultimapChangeAppender",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.type.TypeMapper"] }]
},
{
  "name":"org.javers.guava.MultisetChangeAppender",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.javers.repository.api.JaversExtendedRepository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.repository.api.JaversRepository","org.javers.core.snapshot.SnapshotDiffer"] }]
},
{
  "name":"org.javers.repository.jql.ChangesQueryRunner",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.repository.jql.QueryCompiler","org.javers.repository.api.JaversExtendedRepository"] }]
},
{
  "name":"org.javers.repository.jql.GlobalIdDTO"
},
{
  "name":"org.javers.repository.jql.JqlQuery"
},
{
  "name":"org.javers.repository.jql.QueryCompiler",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.metamodel.object.GlobalIdFactory","org.javers.core.metamodel.type.TypeMapper","org.javers.core.CoreConfiguration"] }]
},
{
  "name":"org.javers.repository.jql.QueryRunner",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.repository.jql.ChangesQueryRunner","org.javers.repository.jql.SnapshotQueryRunner","org.javers.repository.jql.ShadowStreamQueryRunner"] }]
},
{
  "name":"org.javers.repository.jql.ShadowQueryRunner",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.repository.jql.SnapshotQueryRunner","org.javers.repository.api.JaversExtendedRepository","org.javers.shadow.ShadowFactory","org.javers.core.CoreConfiguration"] }]
},
{
  "name":"org.javers.repository.jql.ShadowStreamQueryRunner",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.repository.jql.ShadowQueryRunner","org.javers.repository.jql.QueryCompiler"] }]
},
{
  "name":"org.javers.repository.jql.SnapshotQueryRunner",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.repository.jql.QueryCompiler","org.javers.core.metamodel.object.GlobalIdFactory","org.javers.repository.api.JaversExtendedRepository"] }]
},
{
  "name":"org.javers.shadow.ShadowFactory",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.javers.core.json.JsonConverter","org.javers.core.metamodel.type.TypeMapper"] }]
},
{
  "name":"org.jboss.logging.Logger"
},
{
  "name":"org.jmolecules.ddd.annotation.Identity"
},
{
  "name":"org.jmolecules.ddd.annotation.Service",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.jmolecules.ddd.types.Association"
},
{
  "name":"org.jmolecules.event.annotation.DomainEvent",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.joda.time.ReadableInstant"
},
{
  "name":"org.jooq.DSLContext"
},
{
  "name":"org.neo4j.driver.Driver"
},
{
  "name":"org.postgresql.Driver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.postgresql.core.QueryExecutorCloseAction",
  "fields":[{"name":"pgStream"}]
},
{
  "name":"org.postgresql.core.v3.QueryExecutorImpl"
},
{
  "name":"org.postgresql.jdbc.PgPreparedStatement"
},
{
  "name":"org.postgresql.jdbc.PgStatement",
  "fields":[{"name":"cancelTimerTask"}, {"name":"isClosed"}, {"name":"statementState"}]
},
{
  "name":"org.postgresql.util.PGobject"
},
{
  "name":"org.quartz.Scheduler"
},
{
  "name":"org.reactivestreams.Publisher"
},
{
  "name":"org.slf4j.Logger"
},
{
  "name":"org.slf4j.LoggerFactory"
},
{
  "name":"org.slf4j.bridge.SLF4JBridgeHandler"
},
{
  "name":"org.slf4j.spi.LocationAwareLogger",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"log","parameterTypes":["org.slf4j.Marker","java.lang.String","int","java.lang.String","java.lang.Object[]","java.lang.Throwable"] }]
},
{
  "name":"org.springdoc.api.AbstractOpenApiResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.api.AbstractOpenApiResource$ConditionType"
},
{
  "name":"org.springdoc.api.OpenApiResourceNotFoundException"
},
{
  "name":"org.springdoc.core.annotations.RouterOperation"
},
{
  "name":"org.springdoc.core.conditions.CacheOrGroupedOpenApiCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.conditions.MultipleOpenApiGroupsCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.conditions.MultipleOpenApiSupportCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.conditions.SpecPropertiesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.configuration.SpringDocConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"additionalModelsConverter","parameterTypes":["org.springdoc.core.providers.ObjectMapperProvider"] }, {"name":"fileSupportConverter","parameterTypes":["org.springdoc.core.providers.ObjectMapperProvider"] }, {"name":"genericReturnTypeParser","parameterTypes":[] }, {"name":"localSpringDocParameterNameDiscoverer","parameterTypes":[] }, {"name":"modelConverterRegistrar","parameterTypes":["java.util.Optional","org.springdoc.core.properties.SpringDocConfigProperties"] }, {"name":"openAPIBuilder","parameterTypes":["java.util.Optional","org.springdoc.core.service.SecurityService","org.springdoc.core.properties.SpringDocConfigProperties","org.springdoc.core.utils.PropertyResolverUtils","java.util.Optional","java.util.Optional","java.util.Optional"] }, {"name":"operationBuilder","parameterTypes":["org.springdoc.core.service.GenericParameterService","org.springdoc.core.service.RequestBodyService","org.springdoc.core.service.SecurityService","org.springdoc.core.utils.PropertyResolverUtils"] }, {"name":"parameterBuilder","parameterTypes":["org.springdoc.core.utils.PropertyResolverUtils","java.util.Optional","java.util.Optional","org.springdoc.core.providers.ObjectMapperProvider","java.util.Optional"] }, {"name":"polymorphicModelConverter","parameterTypes":["org.springdoc.core.providers.ObjectMapperProvider"] }, {"name":"propertyResolverUtils","parameterTypes":["org.springframework.beans.factory.config.ConfigurableBeanFactory","org.springframework.context.MessageSource","org.springdoc.core.properties.SpringDocConfigProperties"] }, {"name":"requestBodyBuilder","parameterTypes":["org.springdoc.core.service.GenericParameterService","org.springdoc.core.utils.PropertyResolverUtils"] }, {"name":"responseSupportConverter","parameterTypes":["org.springdoc.core.providers.ObjectMapperProvider"] }, {"name":"schemaPropertyDeprecatingConverter","parameterTypes":[] }, {"name":"securityParser","parameterTypes":["org.springdoc.core.utils.PropertyResolverUtils"] }, {"name":"springDocCustomizers","parameterTypes":["java.util.Optional","java.util.Optional","java.util.Optional","java.util.Optional","java.util.Optional","java.util.Optional","java.util.Optional","java.util.Optional"] }, {"name":"springDocProviders","parameterTypes":["java.util.Optional","java.util.Optional","java.util.Optional","java.util.Optional","java.util.Optional","java.util.Optional","java.util.Optional","org.springdoc.core.providers.ObjectMapperProvider"] }, {"name":"springdocObjectMapperProvider","parameterTypes":["org.springdoc.core.properties.SpringDocConfigProperties"] }]
},
{
  "name":"org.springdoc.core.configuration.SpringDocConfiguration$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springdoc.core.configuration.SpringDocConfiguration"] }]
},
{
  "name":"org.springdoc.core.configuration.SpringDocConfiguration$QuerydslProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"queryDslQuerydslPredicateOperationCustomizer","parameterTypes":["java.util.Optional","org.springdoc.core.properties.SpringDocConfigProperties"] }]
},
{
  "name":"org.springdoc.core.configuration.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"springDataWebPropertiesProvider","parameterTypes":["java.util.Optional"] }]
},
{
  "name":"org.springdoc.core.configuration.SpringDocConfiguration$WebConversionServiceConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"webConversionServiceProvider","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.configuration.SpringDocKotlinConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"kotlinCoroutinesReturnTypeParser","parameterTypes":[] }, {"name":"nullableKotlinRequestParameterCustomizer","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.configuration.SpringDocPageableConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"delegatingMethodParameterCustomizer","parameterTypes":["java.util.Optional","java.util.Optional"] }, {"name":"pageableOpenAPIConverter","parameterTypes":["org.springdoc.core.providers.ObjectMapperProvider"] }]
},
{
  "name":"org.springdoc.core.configuration.SpringDocSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.configuration.SpringDocSecurityConfiguration$SpringSecurityLoginEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springdoc.core.configuration.SpringDocSecurityConfiguration"] }]
},
{
  "name":"org.springdoc.core.configuration.SpringDocSortConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"sortOpenAPIConverter","parameterTypes":["org.springdoc.core.providers.ObjectMapperProvider"] }]
},
{
  "name":"org.springdoc.core.configuration.SpringDocUIConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.util.Optional"] }, {"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.configuration.hints.SpringDocSecurityHints"
},
{
  "name":"org.springdoc.core.converters.AdditionalModelsConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.converters.FileSupportConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.converters.ModelConverterRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.converters.PageableOpenAPIConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.converters.PolymorphicModelConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.converters.PropertyCustomizingConverter"
},
{
  "name":"org.springdoc.core.converters.ResponseSupportConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.converters.SchemaPropertyDeprecatingConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.converters.SortOpenAPIConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.customizers.DataRestDelegatingMethodParameterCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.core.MethodParameter","org.springframework.core.MethodParameter"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.customizers.DataRestDelegatingMethodParameterCustomizer$DefaultSort"
},
{
  "name":"org.springdoc.core.customizers.DelegatingMethodParameterCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.core.customizers.GlobalOpenApiCustomizer"
},
{
  "name":"org.springdoc.core.customizers.GlobalOperationCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.core.customizers.OpenApiBuilderCustomizer"
},
{
  "name":"org.springdoc.core.customizers.OpenApiCustomizer"
},
{
  "name":"org.springdoc.core.customizers.OpenApiLocaleCustomizer"
},
{
  "name":"org.springdoc.core.customizers.OperationCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.core.customizers.ParameterCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.core.customizers.PropertyCustomizer"
},
{
  "name":"org.springdoc.core.customizers.QuerydslPredicateOperationCustomizer",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customize","parameterTypes":["io.swagger.v3.oas.models.Operation","org.springframework.web.method.HandlerMethod"] }]
},
{
  "name":"org.springdoc.core.customizers.SpringDocCustomizers",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.discoverer.SpringDocParameterNameDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getParameterNames","parameterTypes":["java.lang.reflect.Method"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.filters.OpenApiMethodFilter"
},
{
  "name":"org.springdoc.core.fn.AbstractRouterFunctionVisitor"
},
{
  "name":"org.springdoc.core.fn.RouterFunctionData"
},
{
  "name":"org.springdoc.core.fn.RouterOperation"
},
{
  "name":"org.springdoc.core.models.ControllerAdviceInfo"
},
{
  "name":"org.springdoc.core.models.GroupedOpenApi"
},
{
  "name":"org.springdoc.core.models.MethodAttributes"
},
{
  "name":"org.springdoc.core.models.ParameterId"
},
{
  "name":"org.springdoc.core.models.ParameterInfo"
},
{
  "name":"org.springdoc.core.models.RequestBodyInfo"
},
{
  "name":"org.springdoc.core.parsers.KotlinCoroutinesReturnTypeParser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getReturnType","parameterTypes":["org.springframework.core.MethodParameter"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.parsers.ReturnTypeParser",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getReturnType","parameterTypes":["org.springframework.core.MethodParameter"] }]
},
{
  "name":"org.springdoc.core.properties.AbstractSwaggerUiConfigProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getConfigUrl","parameterTypes":[] }, {"name":"getDeepLinking","parameterTypes":[] }, {"name":"getDefaultModelExpandDepth","parameterTypes":[] }, {"name":"getDefaultModelRendering","parameterTypes":[] }, {"name":"getDefaultModelsExpandDepth","parameterTypes":[] }, {"name":"getDisplayOperationId","parameterTypes":[] }, {"name":"getDisplayRequestDuration","parameterTypes":[] }, {"name":"getDocExpansion","parameterTypes":[] }, {"name":"getFilter","parameterTypes":[] }, {"name":"getGroupsOrder","parameterTypes":[] }, {"name":"getLayout","parameterTypes":[] }, {"name":"getMaxDisplayedTags","parameterTypes":[] }, {"name":"getOauth2RedirectUrl","parameterTypes":[] }, {"name":"getOperationsSorter","parameterTypes":[] }, {"name":"getPath","parameterTypes":[] }, {"name":"getPersistAuthorization","parameterTypes":[] }, {"name":"getQueryConfigEnabled","parameterTypes":[] }, {"name":"getShowCommonExtensions","parameterTypes":[] }, {"name":"getShowExtensions","parameterTypes":[] }, {"name":"getSupportedSubmitMethods","parameterTypes":[] }, {"name":"getTagsSorter","parameterTypes":[] }, {"name":"getTryItOutEnabled","parameterTypes":[] }, {"name":"getUrl","parameterTypes":[] }, {"name":"getUrls","parameterTypes":[] }, {"name":"getUrlsPrimaryName","parameterTypes":[] }, {"name":"getValidatorUrl","parameterTypes":[] }, {"name":"getWithCredentials","parameterTypes":[] }, {"name":"setConfigUrl","parameterTypes":["java.lang.String"] }, {"name":"setDeepLinking","parameterTypes":["java.lang.Boolean"] }, {"name":"setDefaultModelExpandDepth","parameterTypes":["java.lang.Integer"] }, {"name":"setDefaultModelRendering","parameterTypes":["java.lang.String"] }, {"name":"setDefaultModelsExpandDepth","parameterTypes":["java.lang.Integer"] }, {"name":"setDisplayOperationId","parameterTypes":["java.lang.Boolean"] }, {"name":"setDisplayRequestDuration","parameterTypes":["java.lang.Boolean"] }, {"name":"setDocExpansion","parameterTypes":["java.lang.String"] }, {"name":"setFilter","parameterTypes":["java.lang.String"] }, {"name":"setGroupsOrder","parameterTypes":["org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$Direction"] }, {"name":"setLayout","parameterTypes":["java.lang.String"] }, {"name":"setMaxDisplayedTags","parameterTypes":["java.lang.Integer"] }, {"name":"setOauth2RedirectUrl","parameterTypes":["java.lang.String"] }, {"name":"setOperationsSorter","parameterTypes":["java.lang.String"] }, {"name":"setPath","parameterTypes":["java.lang.String"] }, {"name":"setPersistAuthorization","parameterTypes":["java.lang.Boolean"] }, {"name":"setQueryConfigEnabled","parameterTypes":["java.lang.Boolean"] }, {"name":"setShowCommonExtensions","parameterTypes":["java.lang.Boolean"] }, {"name":"setShowExtensions","parameterTypes":["java.lang.Boolean"] }, {"name":"setSupportedSubmitMethods","parameterTypes":["java.util.List"] }, {"name":"setTagsSorter","parameterTypes":["java.lang.String"] }, {"name":"setTryItOutEnabled","parameterTypes":["java.lang.Boolean"] }, {"name":"setUrl","parameterTypes":["java.lang.String"] }, {"name":"setUrls","parameterTypes":["java.util.Set"] }, {"name":"setUrlsPrimaryName","parameterTypes":["java.lang.String"] }, {"name":"setValidatorUrl","parameterTypes":["java.lang.String"] }, {"name":"setWithCredentials","parameterTypes":["java.lang.Boolean"] }]
},
{
  "name":"org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$Direction"
},
{
  "name":"org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$SwaggerUrl"
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getApiDocs","parameterTypes":[] }, {"name":"setApiDocs","parameterTypes":["org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs"] }]
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setEnabled","parameterTypes":["boolean"] }]
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$Cache"
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$GroupConfig"
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters"
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$SortConverter"
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$Webjars"
},
{
  "name":"org.springdoc.core.properties.SwaggerUiConfigParameters",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springdoc.core.properties.SwaggerUiConfigProperties"] }]
},
{
  "name":"org.springdoc.core.properties.SwaggerUiConfigProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.properties.SwaggerUiConfigProperties$Csrf"
},
{
  "name":"org.springdoc.core.properties.SwaggerUiConfigProperties$SyntaxHighlight"
},
{
  "name":"org.springdoc.core.properties.SwaggerUiOAuthProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setClientId","parameterTypes":["java.lang.String"] }, {"name":"setRealm","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springdoc.core.providers.ActuatorProvider"
},
{
  "name":"org.springdoc.core.providers.CloudFunctionProvider"
},
{
  "name":"org.springdoc.core.providers.JavadocProvider"
},
{
  "name":"org.springdoc.core.providers.ObjectMapperProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.providers.RepositoryRestResourceProvider"
},
{
  "name":"org.springdoc.core.providers.RouterFunctionProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.core.providers.SpringDataWebPropertiesProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.providers.SpringDocProviders",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.providers.SpringWebProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springdoc.core.providers.WebConversionServiceProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.service.AbstractRequestService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"applyBeanValidatorAnnotations","parameterTypes":["io.swagger.v3.oas.models.parameters.Parameter","java.util.List"] }, {"name":"applyBeanValidatorAnnotations","parameterTypes":["io.swagger.v3.oas.models.parameters.RequestBody","java.util.List","boolean"] }, {"name":"build","parameterTypes":["org.springframework.web.method.HandlerMethod","org.springframework.web.bind.annotation.RequestMethod","io.swagger.v3.oas.models.Operation","org.springdoc.core.models.MethodAttributes","io.swagger.v3.oas.models.OpenAPI"] }, {"name":"buildParam","parameterTypes":["org.springdoc.core.models.ParameterInfo","io.swagger.v3.oas.models.Components","com.fasterxml.jackson.annotation.JsonView"] }, {"name":"buildParams","parameterTypes":["org.springdoc.core.models.ParameterInfo","io.swagger.v3.oas.models.Components","org.springframework.web.bind.annotation.RequestMethod","com.fasterxml.jackson.annotation.JsonView","java.lang.String"] }, {"name":"getRequestBodyBuilder","parameterTypes":[] }, {"name":"isDefaultFlatParamObject","parameterTypes":[] }, {"name":"isParamToIgnore","parameterTypes":["org.springframework.core.MethodParameter"] }, {"name":"isValidParameter","parameterTypes":["io.swagger.v3.oas.models.parameters.Parameter"] }]
},
{
  "name":"org.springdoc.core.service.GenericParameterService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.service.GenericResponseService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.service.OpenAPIService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.service.OperationService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.service.RequestBodyService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.service.SecurityService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.utils.Constants",
  "allPublicFields":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.core.utils.PropertyResolverUtils",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.ui.AbstractSwaggerIndexTransformer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.ui.AbstractSwaggerResourceResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.ui.AbstractSwaggerWelcome",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.webmvc.api.OpenApiActuatorResource"
},
{
  "name":"org.springdoc.webmvc.api.OpenApiResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.webmvc.api.OpenApiWebMvcResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"openapiJson","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.String","java.util.Locale"] }, {"name":"openapiYaml","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.String","java.util.Locale"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"openApiResource","parameterTypes":["org.springframework.beans.factory.ObjectFactory","org.springdoc.core.service.AbstractRequestService","org.springdoc.core.service.GenericResponseService","org.springdoc.core.service.OperationService","org.springdoc.core.properties.SpringDocConfigProperties","org.springdoc.core.providers.SpringDocProviders","org.springdoc.core.customizers.SpringDocCustomizers"] }, {"name":"requestBuilder","parameterTypes":["org.springdoc.core.service.GenericParameterService","org.springdoc.core.service.RequestBodyService","org.springdoc.core.service.OperationService","java.util.Optional","org.springdoc.core.discoverer.SpringDocParameterNameDiscoverer"] }, {"name":"responseBuilder","parameterTypes":["org.springdoc.core.service.OperationService","java.util.List","org.springdoc.core.properties.SpringDocConfigProperties","org.springdoc.core.utils.PropertyResolverUtils"] }, {"name":"springWebProvider","parameterTypes":[] }]
},
{
  "name":"org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcActuatorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"routerFunctionProvider","parameterTypes":[] }]
},
{
  "name":"org.springdoc.webmvc.core.providers.RouterFunctionWebMvcProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getRouterFunctionPaths","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.webmvc.core.providers.SpringWebMvcProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"findPathPrefix","parameterTypes":["org.springdoc.core.properties.SpringDocConfigProperties"] }, {"name":"getActivePatterns","parameterTypes":["java.lang.Object"] }, {"name":"getHandlerMethods","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.webmvc.core.service.RequestService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.webmvc.ui.SwaggerConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"indexPageTransformer","parameterTypes":["org.springdoc.core.properties.SwaggerUiConfigProperties","org.springdoc.core.properties.SwaggerUiOAuthProperties","org.springdoc.core.properties.SwaggerUiConfigParameters","org.springdoc.webmvc.ui.SwaggerWelcomeCommon","org.springdoc.core.providers.ObjectMapperProvider"] }, {"name":"swaggerConfigResource","parameterTypes":["org.springdoc.webmvc.ui.SwaggerWelcomeCommon"] }, {"name":"swaggerResourceResolver","parameterTypes":["org.springdoc.core.properties.SwaggerUiConfigProperties"] }, {"name":"swaggerWebMvcConfigurer","parameterTypes":["org.springdoc.core.properties.SwaggerUiConfigParameters","org.springdoc.webmvc.ui.SwaggerIndexTransformer","java.util.Optional","org.springdoc.webmvc.ui.SwaggerResourceResolver"] }, {"name":"swaggerWelcome","parameterTypes":["org.springdoc.core.properties.SwaggerUiConfigProperties","org.springdoc.core.properties.SpringDocConfigProperties","org.springdoc.core.properties.SwaggerUiConfigParameters","org.springdoc.core.providers.SpringWebProvider"] }]
},
{
  "name":"org.springdoc.webmvc.ui.SwaggerConfigResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.webmvc.ui.SwaggerIndexPageTransformer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"transform","parameterTypes":["jakarta.servlet.http.HttpServletRequest","org.springframework.core.io.Resource","org.springframework.web.servlet.resource.ResourceTransformerChain"] }]
},
{
  "name":"org.springdoc.webmvc.ui.SwaggerIndexTransformer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.webmvc.ui.SwaggerResourceResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolveResource","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.String","java.util.List","org.springframework.web.servlet.resource.ResourceResolverChain"] }, {"name":"resolveUrlPath","parameterTypes":["java.lang.String","java.util.List","org.springframework.web.servlet.resource.ResourceResolverChain"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.webmvc.ui.SwaggerUiHome"
},
{
  "name":"org.springdoc.webmvc.ui.SwaggerWebMvcConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addArgumentResolvers","parameterTypes":["java.util.List"] }, {"name":"addCorsMappings","parameterTypes":["org.springframework.web.servlet.config.annotation.CorsRegistry"] }, {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, {"name":"addInterceptors","parameterTypes":["org.springframework.web.servlet.config.annotation.InterceptorRegistry"] }, {"name":"addResourceHandlers","parameterTypes":["org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"] }, {"name":"addReturnValueHandlers","parameterTypes":["java.util.List"] }, {"name":"addViewControllers","parameterTypes":["org.springframework.web.servlet.config.annotation.ViewControllerRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"configureAsyncSupport","parameterTypes":["org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"] }, {"name":"configureContentNegotiation","parameterTypes":["org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"] }, {"name":"configureDefaultServletHandling","parameterTypes":["org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"] }, {"name":"configureHandlerExceptionResolvers","parameterTypes":["java.util.List"] }, {"name":"configureMessageConverters","parameterTypes":["java.util.List"] }, {"name":"configurePathMatch","parameterTypes":["org.springframework.web.servlet.config.annotation.PathMatchConfigurer"] }, {"name":"configureViewResolvers","parameterTypes":["org.springframework.web.servlet.config.annotation.ViewResolverRegistry"] }, {"name":"extendHandlerExceptionResolvers","parameterTypes":["java.util.List"] }, {"name":"extendMessageConverters","parameterTypes":["java.util.List"] }, {"name":"getMessageCodesResolver","parameterTypes":[] }, {"name":"getValidator","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.webmvc.ui.SwaggerWelcomeCommon",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.amqp.rabbit.core.RabbitTemplate"
},
{
  "name":"org.springframework.aop.Advisor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"isPerInstance","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.IntroductionAdvisor"
},
{
  "name":"org.springframework.aop.PointcutAdvisor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aop.SpringProxy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aop.TargetClassAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getTargetClass","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.TargetSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.aop.target.LazyInitTargetSource"] }, {"name":"from","parameterTypes":["org.springframework.aop.target.LazyInitTargetSource"] }, {"name":"isStatic","parameterTypes":[] }, {"name":"of","parameterTypes":["org.springframework.aop.target.LazyInitTargetSource"] }, {"name":"releaseTarget","parameterTypes":["java.lang.Object"] }, {"name":"valueOf","parameterTypes":["org.springframework.aop.target.LazyInitTargetSource"] }]
},
{
  "name":"org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aop.framework.Advised",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"addAdvisor","parameterTypes":["org.springframework.aop.Advisor"] }, {"name":"getTargetSource","parameterTypes":[] }, {"name":"isFrozen","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.framework.AdvisedSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addAdvice","parameterTypes":["int","org.aopalliance.aop.Advice"] }, {"name":"addAdvice","parameterTypes":["org.aopalliance.aop.Advice"] }, {"name":"addAdvisor","parameterTypes":["int","org.springframework.aop.Advisor"] }, {"name":"addAdvisor","parameterTypes":["org.springframework.aop.Advisor"] }, {"name":"addAdvisors","parameterTypes":["java.util.Collection"] }, {"name":"addAdvisors","parameterTypes":["org.springframework.aop.Advisor[]"] }, {"name":"addInterface","parameterTypes":["java.lang.Class"] }, {"name":"adviceIncluded","parameterTypes":["org.aopalliance.aop.Advice"] }, {"name":"countAdvicesOfType","parameterTypes":["java.lang.Class"] }, {"name":"getAdvisorChainFactory","parameterTypes":[] }, {"name":"getAdvisorCount","parameterTypes":[] }, {"name":"getAdvisors","parameterTypes":[] }, {"name":"getInterceptorsAndDynamicInterceptionAdvice","parameterTypes":["java.lang.reflect.Method","java.lang.Class"] }, {"name":"getProxiedInterfaces","parameterTypes":[] }, {"name":"getTargetClass","parameterTypes":[] }, {"name":"getTargetSource","parameterTypes":[] }, {"name":"indexOf","parameterTypes":["org.aopalliance.aop.Advice"] }, {"name":"indexOf","parameterTypes":["org.springframework.aop.Advisor"] }, {"name":"isInterfaceProxied","parameterTypes":["java.lang.Class"] }, {"name":"isPreFiltered","parameterTypes":[] }, {"name":"removeAdvice","parameterTypes":["org.aopalliance.aop.Advice"] }, {"name":"removeAdvisor","parameterTypes":["int"] }, {"name":"removeAdvisor","parameterTypes":["org.springframework.aop.Advisor"] }, {"name":"removeInterface","parameterTypes":["java.lang.Class"] }, {"name":"replaceAdvisor","parameterTypes":["org.springframework.aop.Advisor","org.springframework.aop.Advisor"] }, {"name":"setAdvisorChainFactory","parameterTypes":["org.springframework.aop.framework.AdvisorChainFactory"] }, {"name":"setInterfaces","parameterTypes":["java.lang.Class[]"] }, {"name":"setPreFiltered","parameterTypes":["boolean"] }, {"name":"setTarget","parameterTypes":["java.lang.Object"] }, {"name":"setTargetClass","parameterTypes":["java.lang.Class"] }, {"name":"setTargetSource","parameterTypes":["org.springframework.aop.TargetSource"] }, {"name":"toProxyConfigString","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.framework.AdvisedSupportListener"
},
{
  "name":"org.springframework.aop.framework.AdvisorChainFactory"
},
{
  "name":"org.springframework.aop.framework.AopConfigException"
},
{
  "name":"org.springframework.aop.framework.AopInfrastructureBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aop.framework.AopProxy"
},
{
  "name":"org.springframework.aop.framework.AopProxyFactory"
},
{
  "name":"org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation"
},
{
  "name":"org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor"
},
{
  "name":"org.springframework.aop.framework.JdkDynamicAopProxy"
},
{
  "name":"org.springframework.aop.framework.ProxyConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"copyFrom","parameterTypes":["org.springframework.aop.framework.ProxyConfig"] }, {"name":"isExposeProxy","parameterTypes":[] }, {"name":"isFrozen","parameterTypes":[] }, {"name":"isOpaque","parameterTypes":[] }, {"name":"isOptimize","parameterTypes":[] }, {"name":"isProxyTargetClass","parameterTypes":[] }, {"name":"setExposeProxy","parameterTypes":["boolean"] }, {"name":"setOpaque","parameterTypes":["boolean"] }, {"name":"setOptimize","parameterTypes":["boolean"] }, {"name":"setProxyTargetClass","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.aop.framework.ProxyCreatorSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addListener","parameterTypes":["org.springframework.aop.framework.AdvisedSupportListener"] }, {"name":"getAopProxyFactory","parameterTypes":[] }, {"name":"removeListener","parameterTypes":["org.springframework.aop.framework.AdvisedSupportListener"] }, {"name":"setAopProxyFactory","parameterTypes":["org.springframework.aop.framework.AopProxyFactory"] }]
},
{
  "name":"org.springframework.aop.framework.ProxyFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getObject","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"isSingleton","parameterTypes":[] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setFrozen","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.aop.framework.ProxyProcessorSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setOrder","parameterTypes":["int"] }]
},
{
  "name":"org.springframework.aop.framework.ReflectiveMethodInvocation"
},
{
  "name":"org.springframework.aop.framework.adapter.AdvisorAdapterRegistry"
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aop.interceptor.ExposeInvocationInterceptor"
},
{
  "name":"org.springframework.aop.scope.ScopedObject"
},
{
  "name":"org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getAdvice","parameterTypes":[] }, {"name":"getAdviceBeanName","parameterTypes":[] }, {"name":"setAdvice","parameterTypes":["org.aopalliance.aop.Advice"] }, {"name":"setAdviceBeanName","parameterTypes":["java.lang.String"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.support.AbstractPointcutAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"setOrder","parameterTypes":["int"] }]
},
{
  "name":"org.springframework.aop.support.AopUtils"
},
{
  "name":"org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getBeanFactory","parameterTypes":[] }, {"name":"getTargetBeanName","parameterTypes":[] }, {"name":"getTargetClass","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setTargetBeanName","parameterTypes":["java.lang.String"] }, {"name":"setTargetClass","parameterTypes":["java.lang.Class"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.target.LazyInitTargetSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getTarget","parameterTypes":[] }, {"name":"toTargetSource","parameterTypes":[] }]
},
{
  "name":"org.springframework.aot.generate.Generated",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aot.generate.GenerationContext"
},
{
  "name":"org.springframework.aot.hint.RuntimeHints"
},
{
  "name":"org.springframework.aot.hint.annotation.Reflective",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aot.hint.annotation.ReflectiveRuntimeHintsRegistrar"
},
{
  "name":"org.springframework.aot.hint.annotation.RegisterReflectionForBinding",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor"
},
{
  "name":"org.springframework.batch.core.launch.JobLauncher"
},
{
  "name":"org.springframework.beans.BeanWrapper"
},
{
  "name":"org.springframework.beans.BeansException"
},
{
  "name":"org.springframework.beans.TypeConverter"
},
{
  "name":"org.springframework.beans.TypeMismatchException"
},
{
  "name":"org.springframework.beans.factory.Aware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanClassLoaderAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanFactory"
},
{
  "name":"org.springframework.beans.factory.BeanFactoryAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanNameAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.DisposableBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.FactoryBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"isSingleton","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.InitializingBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.ListableBeanFactory"
},
{
  "name":"org.springframework.beans.factory.NoSuchBeanDefinitionException"
},
{
  "name":"org.springframework.beans.factory.ObjectFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory"] }, {"name":"from","parameterTypes":["org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory"] }, {"name":"of","parameterTypes":["org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory"] }, {"name":"valueOf","parameterTypes":["org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory"] }]
},
{
  "name":"org.springframework.beans.factory.ObjectProvider"
},
{
  "name":"org.springframework.beans.factory.SmartInitializingSingleton",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Autowired",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.annotation.Configurable",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Qualifier",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Value",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.aot.BeanFactoryInitializationAotProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.aot.BeanRegistrationAotContribution"
},
{
  "name":"org.springframework.beans.factory.aot.BeanRegistrationAotProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"isBeanExcludedFromAotProcessing","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.aspectj.AbstractDependencyInjectionAspect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"ajc$afterReturning$org_springframework_beans_factory_aspectj_AbstractDependencyInjectionAspect$2$1ea6722c","parameterTypes":["java.lang.Object"] }, {"name":"ajc$afterReturning$org_springframework_beans_factory_aspectj_AbstractDependencyInjectionAspect$3$6aa27052","parameterTypes":["java.lang.Object"] }, {"name":"ajc$before$org_springframework_beans_factory_aspectj_AbstractDependencyInjectionAspect$1$e854fa65","parameterTypes":["java.lang.Object"] }, {"name":"ajc$pointcut$$beanConstruction$85c","parameterTypes":["java.lang.Object"] }, {"name":"ajc$pointcut$$beanDeserialization$8eb","parameterTypes":["java.lang.Object"] }, {"name":"ajc$pointcut$$inConfigurableBean$961","parameterTypes":[] }, {"name":"ajc$pointcut$$leastSpecificSuperTypeConstruction$593","parameterTypes":[] }, {"name":"ajc$pointcut$$mostSpecificSubTypeConstruction$676","parameterTypes":[] }, {"name":"ajc$pointcut$$preConstructionConfiguration$7c2","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.aspectj.AbstractInterfaceDrivenDependencyInjectionAspect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"ajc$pointcut$$beanConstruction$e18","parameterTypes":["java.lang.Object"] }, {"name":"ajc$pointcut$$beanDeserialization$efb","parameterTypes":["java.lang.Object"] }, {"name":"ajc$pointcut$$leastSpecificSuperTypeConstruction$f86","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"aspectOf","parameterTypes":[] }, {"name":"configureBean","parameterTypes":["java.lang.Object"] }, {"name":"destroy","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.beans.factory.aspectj.Configurable"
},
{
  "name":"org.springframework.beans.factory.aspectj.ConfigurableObject",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.AbstractFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }, {"name":"getObject","parameterTypes":[] }, {"name":"isSingleton","parameterTypes":[] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setSingleton","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.beans.factory.config.AutowireCapableBeanFactory"
},
{
  "name":"org.springframework.beans.factory.config.BeanDefinition"
},
{
  "name":"org.springframework.beans.factory.config.BeanFactoryPostProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.BeanPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.beans.factory.config.ConfigurableBeanFactory"
},
{
  "name":"org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
},
{
  "name":"org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"setTargetBeanName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getObject","parameterTypes":[] }, {"name":"toObjectFactory","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.support.BeanDefinitionRegistry"
},
{
  "name":"org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.support.NullBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.support.RegisteredBean"
},
{
  "name":"org.springframework.boot.ApplicationArguments"
},
{
  "name":"org.springframework.boot.ApplicationRunner",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.ClearCachesApplicationListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.CommandLineRunner",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.LazyInitializationExcludeFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.Runner",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.SpringApplication",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setAllowBeanDefinitionOverriding","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.SpringBootConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.audit.AuditEventRepository"
},
{
  "name":"org.springframework.boot.actuate.audit.AuditEventsEndpoint"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration$ProbesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"beansEndpoint","parameterTypes":["org.springframework.context.ConfigurableApplicationContext"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"cachesEndpoint","parameterTypes":["java.util.Map"] }, {"name":"cachesEndpointWebExtension","parameterTypes":["org.springframework.boot.actuate.cache.CachesEndpoint"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint$ConditionsDescriptor"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"conditionsReportEndpoint","parameterTypes":["org.springframework.context.ConfigurableApplicationContext"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"configurationPropertiesReportEndpoint","parameterTypes":["org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties","org.springframework.beans.factory.ObjectProvider"] }, {"name":"configurationPropertiesReportEndpointWebExtension","parameterTypes":["org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint","org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"endpointCachingOperationInvokerAdvisor","parameterTypes":["org.springframework.core.env.Environment"] }, {"name":"endpointOperationParameterMapper","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.condition.OnAvailableEndpointCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"match","parameterTypes":["org.springframework.boot.actuate.endpoint.ExposableEndpoint"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"endpointObjectMapper","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getRootPath","parameterTypes":["org.springframework.boot.actuate.endpoint.EndpointId"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"servletExposeExcludePropertyEndpointFilter","parameterTypes":["org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"servletEndpointRegistrar","parameterTypes":["org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties","org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier","org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"] }, {"name":"controllerEndpointDiscoverer","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, {"name":"controllerExposeExcludePropertyEndpointFilter","parameterTypes":[] }, {"name":"endpointMediaTypes","parameterTypes":[] }, {"name":"pathMappedEndpoints","parameterTypes":["java.util.Collection"] }, {"name":"webEndpointDiscoverer","parameterTypes":["org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper","org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, {"name":"webEndpointPathMapper","parameterTypes":[] }, {"name":"webExposeExcludePropertyEndpointFilter","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"servletEndpointDiscoverer","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getExposure","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Discovery"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getInclude","parameterTypes":[] }, {"name":"setInclude","parameterTypes":["java.util.Set"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"controllerEndpointHandlerMapping","parameterTypes":["org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier","org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties","org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"] }, {"name":"endpointObjectMapperWebMvcConfigurer","parameterTypes":["org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper"] }, {"name":"webEndpointServletHandlerMapping","parameterTypes":["org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier","org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier","org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier","org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes","org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties","org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties","org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration$EndpointObjectMapperWebMvcConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"configureMessageConverters","parameterTypes":["java.util.List"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"environmentEndpoint","parameterTypes":["org.springframework.core.env.Environment","org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties","org.springframework.beans.factory.ObjectProvider"] }, {"name":"environmentEndpointWebExtension","parameterTypes":["org.springframework.boot.actuate.env.EnvironmentEndpoint","org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.flyway.FlywayEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"flywayEndpoint","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"get","parameterTypes":["java.lang.String"] }, {"name":"getNames","parameterTypes":[] }, {"name":"getPrimary","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"pingHealthContributor","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"healthContributorRegistry","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.actuate.health.HealthEndpointGroups","java.util.Map","java.util.Map"] }, {"name":"healthEndpoint","parameterTypes":["org.springframework.boot.actuate.health.HealthContributorRegistry","org.springframework.boot.actuate.health.HealthEndpointGroups","org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"] }, {"name":"healthEndpointGroupMembershipValidator","parameterTypes":["org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties","org.springframework.boot.actuate.health.HealthContributorRegistry"] }, {"name":"healthEndpointGroups","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"] }, {"name":"healthEndpointGroupsBeanPostProcessor","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, {"name":"healthHttpCodeStatusMapper","parameterTypes":["org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"] }, {"name":"healthStatusAggregator","parameterTypes":["org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupMembershipValidator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getShowDetails","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Group"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Logging"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"healthEndpointWebExtension","parameterTypes":["org.springframework.boot.actuate.health.HealthContributorRegistry","org.springframework.boot.actuate.health.HealthEndpointGroups","org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"healthEndpointWebMvcHandlerMapping","parameterTypes":["org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier","org.springframework.boot.actuate.health.HealthEndpointGroups"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getRoles","parameterTypes":[] }, {"name":"getShowComponents","parameterTypes":[] }, {"name":"getStatus","parameterTypes":[] }, {"name":"setRoles","parameterTypes":["java.util.Set"] }, {"name":"setShowComponents","parameterTypes":["org.springframework.boot.actuate.endpoint.Show"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.OnEnabledHealthIndicatorCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorFallback"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties$Git"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"infoEndpoint","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.OnEnabledInfoContributorCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, {"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"dbHealthContributor","parameterTypes":["java.util.Map","org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration$LogFileCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"loggersEndpoint","parameterTypes":["org.springframework.boot.logging.LoggingSystem","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration$OnEnabledLoggingSystemCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"heapDumpWebEndpoint","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"dumpEndpoint","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"classLoaderMetrics","parameterTypes":[] }, {"name":"jvmCompilationMetrics","parameterTypes":[] }, {"name":"jvmGcMetrics","parameterTypes":[] }, {"name":"jvmHeapPressureMetrics","parameterTypes":[] }, {"name":"jvmInfoMetrics","parameterTypes":[] }, {"name":"jvmMemoryMetrics","parameterTypes":[] }, {"name":"jvmThreadMetrics","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"kafkaConsumerMetrics","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"kafkaProducerMetrics","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration$KafkaStreamsMetricsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"kafkaStreamsMetrics","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"logbackMetrics","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration$LogbackLoggingCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryCustomizer"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsAspectsAutoConfiguration$ObservationAnnotationsEnabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"meterRegistryCloser","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, {"name":"meterRegistryPostProcessor","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, {"name":"micrometerClock","parameterTypes":[] }, {"name":"propertiesMeterFilter","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration$MeterRegistryCloser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"metricsEndpoint","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getEnable","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.NoOpMeterRegistryConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"accept","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, {"name":"close","parameterTypes":[] }, {"name":"configure","parameterTypes":["io.micrometer.core.instrument.Meter$Id","io.micrometer.core.instrument.distribution.DistributionStatisticConfig"] }, {"name":"map","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"diskSpaceMetrics","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }, {"name":"fileDescriptorMetrics","parameterTypes":[] }, {"name":"processorMetrics","parameterTypes":[] }, {"name":"uptimeMetrics","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsRegistrarConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.data.MetricsRepositoryMethodInvocationListenerBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }, {"name":"metricsRepositoryMethodInvocationListener","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider"] }, {"name":"metricsRepositoryMethodInvocationListenerBeanPostProcessor","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, {"name":"repositoryTagsProvider","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.ConditionalOnEnabledMetricsExport",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.OnMetricsExportEnabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"prometheusConfig","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties"] }, {"name":"prometheusMeterRegistry","parameterTypes":["io.micrometer.prometheusmetrics.PrometheusConfig","io.prometheus.metrics.model.registry.PrometheusRegistry","io.micrometer.core.instrument.Clock","org.springframework.beans.factory.ObjectProvider"] }, {"name":"prometheusRegistry","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration$PrometheusScrapeEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"prometheusEndpoint","parameterTypes":["io.prometheus.metrics.model.registry.PrometheusRegistry","io.micrometer.prometheusmetrics.PrometheusConfig"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$HistogramFlavor"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusPropertiesConfigAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"descriptions","parameterTypes":[] }, {"name":"get","parameterTypes":["java.lang.String"] }, {"name":"prefix","parameterTypes":[] }, {"name":"prometheusProperties","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"step","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"dataSourcePoolMetadataMeterBinder","parameterTypes":["java.util.Map","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration$DataSourcePoolMetadataMeterBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"hikariDataSourceMeterBinder","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration$HikariDataSourceMeterBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"startupTimeMetrics","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"bindTaskExecutorsToRegistry","parameterTypes":["java.util.Map","io.micrometer.core.instrument.MeterRegistry"] }, {"name":"eagerTaskExecutorMetrics","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"tomcatMetricsBinder","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"observationRegistry","parameterTypes":[] }, {"name":"observationRegistryPostProcessor","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, {"name":"propertiesObservationFilter","parameterTypes":["org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"defaultMeterObservationHandler","parameterTypes":["io.micrometer.core.instrument.MeterRegistry","org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$ObservationAnnotationsEnabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"metricsObservationHandlerGrouping","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationHandlerGrouping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$LongTaskTimer"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryConfigurer"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.PropertiesObservationFilterPredicate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"map","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"test","parameterTypes":["java.lang.Object","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"metricsHttpClientUriTagFilter","parameterTypes":["org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties","org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"observationRestClientCustomizer","parameterTypes":["io.micrometer.observation.ObservationRegistry","org.springframework.beans.factory.ObjectProvider","org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"observationRestTemplateCustomizer","parameterTypes":["io.micrometer.observation.ObservationRegistry","org.springframework.beans.factory.ObjectProvider","org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"webMvcObservationFilter","parameterTypes":["io.micrometer.observation.ObservationRegistry","org.springframework.beans.factory.ObjectProvider","org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"metricsHttpServerUriTagFilter","parameterTypes":["org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties","org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.sbom.SbomEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.actuate.sbom.SbomProperties"] }, {"name":"sbomEndpoint","parameterTypes":["org.springframework.core.io.ResourceLoader"] }, {"name":"sbomEndpointWebExtension","parameterTypes":["org.springframework.boot.actuate.sbom.SbomEndpoint"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"scheduledTasksEndpoint","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"observabilitySchedulingConfigurer","parameterTypes":["io.micrometer.observation.ObservationRegistry"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration$ObservabilitySchedulingConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"configureTasks","parameterTypes":["org.springframework.scheduling.config.ScheduledTaskRegistrar"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration$MvcRequestMatcherConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"requestMatcherProvider","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.startup.StartupEndpointAutoConfiguration$ApplicationStartupCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"diskSpaceHealthIndicator","parameterTypes":["org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.LogCorrelationEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.MicrometerTracingAutoConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextType"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"mappingsEndpoint","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"filterMappingDescriptionProvider","parameterTypes":[] }, {"name":"servletMappingDescriptionProvider","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"dispatcherServletMappingDescriptionProvider","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }, {"name":"afterSingletonsInstantiated","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementPortType"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.OnManagementPortCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementServletContext",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"managementServletContext","parameterTypes":["org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"] }, {"name":"servletWebChildContextFactory","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.availability.LivenessStateHealthIndicator"
},
{
  "name":"org.springframework.boot.actuate.availability.ReadinessStateHealthIndicator"
},
{
  "name":"org.springframework.boot.actuate.beans.BeansEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.beans.BeansEndpoint$BeansDescriptor"
},
{
  "name":"org.springframework.boot.actuate.cache.CachesEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.cache.CachesEndpoint$CacheEntryDescriptor"
},
{
  "name":"org.springframework.boot.actuate.cache.CachesEndpoint$CachesDescriptor"
},
{
  "name":"org.springframework.boot.actuate.cache.CachesEndpointWebExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.context.ShutdownEndpoint"
},
{
  "name":"org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint$ConfigurationPropertiesBeanDescriptor"
},
{
  "name":"org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint$ConfigurationPropertiesDescriptor"
},
{
  "name":"org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint$ContextConfigurationPropertiesDescriptor"
},
{
  "name":"org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.ApiVersion"
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointId"
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointsSupplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.ExposableEndpoint"
},
{
  "name":"org.springframework.boot.actuate.endpoint.Operation"
},
{
  "name":"org.springframework.boot.actuate.endpoint.OperationType"
},
{
  "name":"org.springframework.boot.actuate.endpoint.SecurityContext"
},
{
  "name":"org.springframework.boot.actuate.endpoint.Show"
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.DeleteOperation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationMethod"
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationsFactory"
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.Endpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointConverter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createOperationKey","parameterTypes":["org.springframework.boot.actuate.endpoint.Operation"] }, {"name":"getEndpoints","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean"
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean"
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey"
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointExtension",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.FilteredEndpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.ReadOperation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.Selector",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.WriteOperation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationParameter"
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationParameters"
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.ParameterMappingException"
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"mapParameterValue","parameterTypes":["org.springframework.boot.actuate.endpoint.invoke.OperationParameter","java.lang.Object"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"apply","parameterTypes":["org.springframework.boot.actuate.endpoint.EndpointId","org.springframework.boot.actuate.endpoint.OperationType","org.springframework.boot.actuate.endpoint.invoke.OperationParameters","org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.ExposableServletEndpoint"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.ExposableWebEndpoint"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMappedEndpoint"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"iterator","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"onStartup","parameterTypes":["jakarta.servlet.ServletContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebEndpointResponse"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebOperation"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebOperationRequestPredicate"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebServerNamespace"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ExposableControllerEndpoint"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getEndpoints","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$LinksHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$ServletWebOperation"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AdditionalHealthEndpointPathsWebMvcHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping$WebMvcLinksHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.env.EnvironmentEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.env.EnvironmentEndpoint$EnvironmentDescriptor"
},
{
  "name":"org.springframework.boot.actuate.env.EnvironmentEndpoint$EnvironmentEntryDescriptor"
},
{
  "name":"org.springframework.boot.actuate.env.EnvironmentEndpoint$PropertySourceDescriptor"
},
{
  "name":"org.springframework.boot.actuate.env.EnvironmentEndpoint$PropertySummaryDescriptor"
},
{
  "name":"org.springframework.boot.actuate.env.EnvironmentEndpoint$PropertyValueDescriptor"
},
{
  "name":"org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.flyway.FlywayEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.flyway.FlywayEndpoint$FlywayBeansDescriptor"
},
{
  "name":"org.springframework.boot.actuate.health.AbstractHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"health","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.AdditionalHealthEndpointPath"
},
{
  "name":"org.springframework.boot.actuate.health.CompositeHealth"
},
{
  "name":"org.springframework.boot.actuate.health.ContributorRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.DefaultContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.health.DefaultHealthContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getContributor","parameterTypes":["java.lang.String"] }, {"name":"iterator","parameterTypes":[] }, {"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"unregisterContributor","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.health.Health"
},
{
  "name":"org.springframework.boot.actuate.health.Health$Builder"
},
{
  "name":"org.springframework.boot.actuate.health.HealthComponent"
},
{
  "name":"org.springframework.boot.actuate.health.HealthContributor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthContributorRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointGroup"
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointGroups",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"get","parameterTypes":["org.springframework.boot.actuate.health.AdditionalHealthEndpointPath"] }, {"name":"getAllWithAdditionalPath","parameterTypes":["org.springframework.boot.actuate.endpoint.web.WebServerNamespace"] }]
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointGroupsPostProcessor"
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getHealth","parameterTypes":["java.lang.Object","boolean"] }]
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointSupport$HealthResult"
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointWebExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.HealthIndicator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getHealth","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.actuate.health.HttpCodeStatusMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.NamedContributors",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"stream","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.PingHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.SimpleHttpCodeStatusMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getStatusCode","parameterTypes":["org.springframework.boot.actuate.health.Status"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.SimpleStatusAggregator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getAggregateStatus","parameterTypes":["java.util.Set"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.Status"
},
{
  "name":"org.springframework.boot.actuate.health.StatusAggregator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getAggregateStatus","parameterTypes":["org.springframework.boot.actuate.health.Status[]"] }]
},
{
  "name":"org.springframework.boot.actuate.info.EnvironmentInfoContributor"
},
{
  "name":"org.springframework.boot.actuate.info.GitInfoContributor"
},
{
  "name":"org.springframework.boot.actuate.info.InfoContributor"
},
{
  "name":"org.springframework.boot.actuate.info.InfoEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.info.JavaInfoContributor"
},
{
  "name":"org.springframework.boot.actuate.info.OsInfoContributor"
},
{
  "name":"org.springframework.boot.actuate.info.ProcessInfoContributor"
},
{
  "name":"org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.logging.LogFileWebEndpoint"
},
{
  "name":"org.springframework.boot.actuate.logging.LoggersEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.logging.LoggersEndpoint$LoggerLevelsDescriptor"
},
{
  "name":"org.springframework.boot.actuate.logging.LoggersEndpoint$LoggersDescriptor"
},
{
  "name":"org.springframework.boot.actuate.management.HeapDumpWebEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.management.HeapDumpWebEndpoint$HeapDumper"
},
{
  "name":"org.springframework.boot.actuate.management.HeapDumpWebEndpoint$HeapDumperUnavailableException"
},
{
  "name":"org.springframework.boot.actuate.management.ThreadDumpEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.management.ThreadDumpEndpoint$ThreadDumpDescriptor"
},
{
  "name":"org.springframework.boot.actuate.metrics.MetricsEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.MetricsEndpoint$MetricDescriptor"
},
{
  "name":"org.springframework.boot.actuate.metrics.MetricsEndpoint$MetricNamesDescriptor"
},
{
  "name":"org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider"
},
{
  "name":"org.springframework.boot.actuate.metrics.data.DefaultRepositoryTagsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"repositoryTags","parameterTypes":["org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterInvocation","parameterTypes":["org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.export.prometheus.PrometheusOutputFormat"
},
{
  "name":"org.springframework.boot.actuate.metrics.export.prometheus.PrometheusScrapeEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.export.prometheus.PrometheusSimpleclientScrapeEndpoint"
},
{
  "name":"org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supportsEventType","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.web.client.ObservationRestClientCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.web.client.RestClient$Builder"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.web.client.ObservationRestTemplateCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.web.client.RestTemplate"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"destroy","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]
},
{
  "name":"org.springframework.boot.actuate.sbom.SbomEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.sbom.SbomEndpoint$Sboms"
},
{
  "name":"org.springframework.boot.actuate.sbom.SbomEndpointWebExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.sbom.SbomEndpointWebExtension$SbomType"
},
{
  "name":"org.springframework.boot.actuate.sbom.SbomProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.sbom.SbomProperties$Sbom"
},
{
  "name":"org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint$ScheduledTasksDescriptor"
},
{
  "name":"org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository"
},
{
  "name":"org.springframework.boot.actuate.web.exchanges.HttpExchangesEndpoint"
},
{
  "name":"org.springframework.boot.actuate.web.mappings.MappingDescriptionProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.web.mappings.MappingsEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.web.mappings.MappingsEndpoint$ApplicationMappingsDescriptor"
},
{
  "name":"org.springframework.boot.actuate.web.mappings.MappingsEndpoint$ContextMappingsDescriptor"
},
{
  "name":"org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletHandlerMappings"
},
{
  "name":"org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletsMappingDescriptionProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"describeMappings","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"getMappingName","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.web.mappings.servlet.FiltersMappingDescriptionProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"describeMappings","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"getMappingName","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.web.mappings.servlet.ServletsMappingDescriptionProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"describeMappings","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"getMappingName","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.ansi.AnsiOutput$Enabled",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackage",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureAfter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureBefore",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureOrder",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.BackgroundPreinitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.EnableAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.SpringBootApplication",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"applicationAvailability","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"cacheAutoConfigurationValidator","parameterTypes":["org.springframework.boot.autoconfigure.cache.CacheProperties","org.springframework.beans.factory.ObjectProvider"] }, {"name":"cacheManagerCustomizers","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheManagerCustomizer"
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheProperties$Caffeine"
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheProperties$Couchbase"
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheProperties$Infinispan"
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheProperties$JCache"
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheProperties$Redis"
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"cacheManager","parameterTypes":["org.springframework.boot.autoconfigure.cache.CacheProperties","org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnCheckpointRestore",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnCloudPlatform",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnExpression",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnJndi",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnThreading",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnBeanCondition",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnClassCondition",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnCloudPlatformCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnExpressionCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnJndiCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnResourceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnThreadingCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnWarDeploymentCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.SearchStrategy"
},
{
  "name":"org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"defaultLifecycleProcessor","parameterTypes":["org.springframework.boot.autoconfigure.context.LifecycleProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"propertySourcesPlaceholderConfigurer","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"persistenceExceptionTranslationPostProcessor","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.data.jpa.EnversRevisionRepositoriesRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration$JpaRepositoriesImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"] }, {"name":"pageableCustomizer","parameterTypes":[] }, {"name":"sortCustomizer","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable"
},
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Sort"
},
{
  "name":"org.springframework.boot.autoconfigure.domain.EntityScan",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.domain.EntityScanPackages",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"flywayDefaultDdlModeProvider","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, {"name":"stringOrNumberMigrationVersionConverter","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayAutoConfigurationRuntimeHints"
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.flyway.FlywayProperties"] }, {"name":"flyway","parameterTypes":["org.springframework.boot.autoconfigure.flyway.FlywayConnectionDetails","org.springframework.core.io.ResourceLoader","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.boot.autoconfigure.flyway.ResourceProviderCustomizer"] }, {"name":"flywayConnectionDetails","parameterTypes":[] }, {"name":"flywayInitializer","parameterTypes":["org.flywaydb.core.Flyway","org.springframework.beans.factory.ObjectProvider"] }, {"name":"postgresqlFlywayConfigurationCustomizer","parameterTypes":[] }, {"name":"resourceProviderCustomizer","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayDataSourceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$OracleFlywayConfigurationCustomizer"
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$PostgresqlFlywayConfigurationCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.flywaydb.core.api.configuration.FluentConfiguration"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$PropertiesFlywayConnectionDetails",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getDriverClassName","parameterTypes":[] }, {"name":"getJdbcUrl","parameterTypes":[] }, {"name":"getPassword","parameterTypes":[] }, {"name":"getUsername","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$SqlServerFlywayConfigurationCustomizer"
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, {"name":"getConvertibleTypes","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayConfigurationCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayConnectionDetails",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayDataSource",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getLocations","parameterTypes":[] }, {"name":"getSchemas","parameterTypes":[] }, {"name":"setBaselineOnMigrate","parameterTypes":["boolean"] }, {"name":"setCleanDisabled","parameterTypes":["boolean"] }, {"name":"setCleanOnValidationError","parameterTypes":["boolean"] }, {"name":"setEnabled","parameterTypes":["boolean"] }, {"name":"setLocations","parameterTypes":["java.util.List"] }, {"name":"setOutOfOrder","parameterTypes":["boolean"] }, {"name":"setPassword","parameterTypes":["java.lang.String"] }, {"name":"setSchemas","parameterTypes":["java.util.List"] }, {"name":"setUrl","parameterTypes":["java.lang.String"] }, {"name":"setUser","parameterTypes":["java.lang.String"] }, {"name":"setValidateMigrationNaming","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayProperties$Oracle"
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayProperties$Postgresql"
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayProperties$Sqlserver"
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywaySchemaManagementProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getSchemaManagement","parameterTypes":["javax.sql.DataSource"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.ResourceProviderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"gson","parameterTypes":["com.google.gson.GsonBuilder"] }, {"name":"gsonBuilder","parameterTypes":["java.util.List"] }, {"name":"standardGsonBuilderCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.gson.GsonProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["com.google.gson.GsonBuilder"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonBuilderCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$JacksonAndJsonbUnavailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$PreferGsonOrJacksonAndJsonbUnavailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConverters",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"iterator","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"messageConverters","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$HttpMessageConvertersAutoConfigurationRuntimeHints"
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"stringHttpMessageConverter","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"mappingJackson2HttpMessageConverter","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.JsonbHttpMessageConvertersConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.info.ProjectInfoProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build"
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git"
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"jsonComponentModule","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"standardJacksonObjectMapperBuilderCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.jackson.JacksonProperties","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"jsonMixinModule","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.jackson.JsonMixinModuleEntries"] }, {"name":"jsonMixinModuleEntries","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"jacksonObjectMapper","parameterTypes":["org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"parameterNamesModule","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy"
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties$Datatype"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceAvailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"jdbcConnectionDetails","parameterTypes":["org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceCheckpointRestoreConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Dbcp2"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"dataSource","parameterTypes":["org.springframework.boot.autoconfigure.jdbc.DataSourceProperties","org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails","org.springframework.core.env.Environment"] }, {"name":"jdbcConnectionDetailsHikariBeanPostProcessor","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$OracleUcp"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Tomcat"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["javax.sql.DataSource","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setDriverClassName","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setPassword","parameterTypes":["java.lang.String"] }, {"name":"setUrl","parameterTypes":["java.lang.String"] }, {"name":"setUsername","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.HikariJdbcConnectionDetailsBeanPostProcessor",
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"jdbcClient","parameterTypes":["org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"jdbcTemplate","parameterTypes":["javax.sql.DataSource","org.springframework.boot.autoconfigure.jdbc.JdbcProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"namedParameterJdbcTemplate","parameterTypes":["org.springframework.jdbc.core.JdbcTemplate"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getDriverClassName","parameterTypes":[] }, {"name":"getJdbcUrl","parameterTypes":[] }, {"name":"getPassword","parameterTypes":[] }, {"name":"getUsername","parameterTypes":[] }, {"name":"getXaDataSourceClassName","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"hikariPoolDataSourceMetadataProvider","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.DefaultKafkaConsumerFactoryCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.DefaultKafkaProducerFactoryCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.kafka.KafkaProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, {"name":"kafkaListenerContainerFactory","parameterTypes":["org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, {"name":"kafkaListenerContainerFactoryConfigurerVirtualThreads","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration$EnableKafkaConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.kafka.KafkaProperties"] }, {"name":"kafkaAdmin","parameterTypes":["org.springframework.boot.autoconfigure.kafka.KafkaConnectionDetails","org.springframework.beans.factory.ObjectProvider"] }, {"name":"kafkaConnectionDetails","parameterTypes":[] }, {"name":"kafkaConsumerFactory","parameterTypes":["org.springframework.boot.autoconfigure.kafka.KafkaConnectionDetails","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, {"name":"kafkaProducerFactory","parameterTypes":["org.springframework.boot.autoconfigure.kafka.KafkaConnectionDetails","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, {"name":"kafkaProducerListener","parameterTypes":[] }, {"name":"kafkaTemplate","parameterTypes":["org.springframework.kafka.core.ProducerFactory","org.springframework.kafka.support.ProducerListener","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration$KafkaRuntimeHints"
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaConnectionDetails",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getAdminBootstrapServers","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getBootstrapServers","parameterTypes":[] }, {"name":"getConsumer","parameterTypes":[] }, {"name":"getProducer","parameterTypes":[] }, {"name":"setBootstrapServers","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Admin"
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getProperties","parameterTypes":[] }, {"name":"setAutoCommitInterval","parameterTypes":["java.time.Duration"] }, {"name":"setAutoOffsetReset","parameterTypes":["java.lang.String"] }, {"name":"setEnableAutoCommit","parameterTypes":["java.lang.Boolean"] }, {"name":"setGroupId","parameterTypes":["java.lang.String"] }, {"name":"setValueDeserializer","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Jaas"
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getProperties","parameterTypes":[] }, {"name":"setRetries","parameterTypes":["java.lang.Integer"] }, {"name":"setValueSerializer","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Retry"
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Retry$Topic"
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Security"
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams"
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Template"
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaStreamsAnnotationDrivenConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.PropertiesKafkaConnectionDetails",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getBootstrapServers","parameterTypes":[] }, {"name":"getConsumerBootstrapServers","parameterTypes":[] }, {"name":"getProducerBootstrapServers","parameterTypes":[] }, {"name":"getStreamsBootstrapServers","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.StreamsBuilderFactoryBeanCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.EntityManagerFactoryBuilderCustomizer"
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["javax.sql.DataSource","org.springframework.boot.autoconfigure.orm.jpa.JpaProperties","org.springframework.beans.factory.config.ConfigurableListableBeanFactory","org.springframework.beans.factory.ObjectProvider","org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$HibernateRuntimeHints"
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties$Naming"
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.HibernatePropertiesCustomizer"
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings"
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"entityManagerFactory","parameterTypes":["org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder","org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes"] }, {"name":"entityManagerFactoryBuilder","parameterTypes":["org.springframework.orm.jpa.JpaVendorAdapter","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, {"name":"jpaVendorAdapter","parameterTypes":[] }, {"name":"transactionManager","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"persistenceManagedTypes","parameterTypes":["org.springframework.beans.factory.BeanFactory","org.springframework.core.io.ResourceLoader","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getProperties","parameterTypes":[] }, {"name":"setOpenInView","parameterTypes":["java.lang.Boolean"] }, {"name":"setProperties","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.ConditionalOnDefaultWebSecurity",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.SecurityDataConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.SecurityProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.SecurityProperties$Filter"
},
{
  "name":"org.springframework.boot.autoconfigure.security.SecurityProperties$User"
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt"
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Opaquetoken"
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerJwtConfiguration$JwtConverterConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerJwtConfiguration$JwtConverterPropertiesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerJwtConfiguration$JwtDecoderConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerJwtConfiguration$OAuth2SecurityFilterChainConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerOpaqueTokenConfiguration$OAuth2SecurityFilterChainConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerOpaqueTokenConfiguration$OpaqueTokenIntrospectionClientConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.Oauth2ResourceServerConfiguration$JwtConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.Oauth2ResourceServerConfiguration$OpaqueTokenConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration$RSocketEnabledOrReactiveWebApplication",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.AntPathRequestMatcherProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getRequestMatcher","parameterTypes":["java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.RequestMatcherProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"authenticationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"securityFilterChainRegistration","parameterTypes":["org.springframework.boot.autoconfigure.security.SecurityProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$WebSecurityEnablerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.service.connection.ConnectionDetails",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.BundleContentProperty"
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.FileWatcher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.io.ResourceLoader","org.springframework.boot.autoconfigure.ssl.SslProperties"] }, {"name":"fileWatcher","parameterTypes":[] }, {"name":"sslBundleRegistry","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, {"name":"sslPropertiesSslBundleRegistrar","parameterTypes":["org.springframework.boot.autoconfigure.ssl.FileWatcher"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslBundleProperties"
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles"
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"registerBundles","parameterTypes":["org.springframework.boot.ssl.SslBundleRegistry"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar$Bundle"
},
{
  "name":"org.springframework.boot.autoconfigure.task.ScheduledBeanLazyInitializationExcludeFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"isExcluded","parameterTypes":["java.lang.String","org.springframework.beans.factory.config.BeanDefinition","java.lang.Class"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getPool","parameterTypes":[] }, {"name":"setThreadNamePrefix","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setCoreSize","parameterTypes":["int"] }, {"name":"setMaxSize","parameterTypes":["int"] }, {"name":"setQueueCapacity","parameterTypes":["int"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown"
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Simple"
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.task.TaskExecutionProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, {"name":"simpleAsyncTaskExecutorBuilderVirtualThreads","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"taskExecutorBuilder","parameterTypes":["org.springframework.boot.autoconfigure.task.TaskExecutionProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"applicationTaskExecutorVirtualThreads","parameterTypes":["org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"threadPoolTaskExecutorBuilder","parameterTypes":["org.springframework.boot.autoconfigure.task.TaskExecutionProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"scheduledBeanLazyInitializationExcludeFilter","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.task.TaskSchedulingProperties","org.springframework.beans.factory.ObjectProvider"] }, {"name":"simpleAsyncTaskSchedulerBuilderVirtualThreads","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"taskSchedulerBuilder","parameterTypes":["org.springframework.boot.autoconfigure.task.TaskSchedulingProperties","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"threadPoolTaskSchedulerBuilder","parameterTypes":["org.springframework.boot.autoconfigure.task.TaskSchedulingProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool"
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown"
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Simple"
},
{
  "name":"org.springframework.boot.autoconfigure.thread.Threading"
},
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.transaction.TransactionManager"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"transactionTemplate","parameterTypes":["org.springframework.transaction.PlatformTransactionManager"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"platformTransactionManagerCustomizers","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, {"name":"transactionExecutionListeners","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.transaction.TransactionManager"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"defaultValidator","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.beans.factory.ObjectProvider"] }, {"name":"methodValidationPostProcessor","parameterTypes":["org.springframework.core.env.Environment","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidationConfigurationCustomizer"
},
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidatorAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"supports","parameterTypes":["java.lang.Class"] }, {"name":"unwrap","parameterTypes":["java.lang.Class"] }, {"name":"validate","parameterTypes":["java.lang.Object","org.springframework.validation.Errors"] }, {"name":"validate","parameterTypes":["java.lang.Object","org.springframework.validation.Errors","java.lang.Object[]"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ErrorProperties"
},
{
  "name":"org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setPort","parameterTypes":["java.lang.Integer"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Jetty"
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Netty"
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Reactive"
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Servlet"
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource"
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getResources","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties$Resources",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setAddMappings","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebResourcesRuntimeHints"
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.AutoConfiguredRestClientSsl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"fromBundle","parameterTypes":["java.lang.String"] }, {"name":"fromBundle","parameterTypes":["org.springframework.boot.ssl.SslBundle"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.web.client.RestClient$Builder"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"httpMessageConvertersRestClientCustomizer","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, {"name":"restClientBuilder","parameterTypes":["org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer"] }, {"name":"restClientBuilderConfigurer","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, {"name":"restClientSsl","parameterTypes":["org.springframework.boot.ssl.SslBundles"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestClientSsl",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer"
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"tomcatVirtualThreadsProtocolHandlerCustomizer","parameterTypes":[] }, {"name":"tomcatWebServerFactoryCustomizer","parameterTypes":["org.springframework.core.env.Environment","org.springframework.boot.autoconfigure.web.ServerProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.TomcatVirtualThreadsWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.format.DateTimeFormatters"
},
{
  "name":"org.springframework.boot.autoconfigure.web.format.WebConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"dispatcherServlet","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"dispatcherServletRegistration","parameterTypes":["org.springframework.web.servlet.DispatcherServlet","org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getPrefix","parameterTypes":[] }, {"name":"getRelativePath","parameterTypes":["java.lang.String"] }, {"name":"getServletUrlMapping","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addUrlMappings","parameterTypes":["java.lang.String[]"] }, {"name":"close","parameterTypes":[] }, {"name":"getPath","parameterTypes":[] }, {"name":"setUrlMappings","parameterTypes":["java.util.Collection"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }, {"name":"characterEncodingFilter","parameterTypes":[] }, {"name":"localeCharsetMappingsCustomizer","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"] }, {"name":"multipartConfigElement","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setEnabled","parameterTypes":["boolean"] }, {"name":"setMaxFileSize","parameterTypes":["org.springframework.util.unit.DataSize"] }, {"name":"setMaxRequestSize","parameterTypes":["org.springframework.util.unit.DataSize"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"servletWebServerFactoryCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, {"name":"tomcatServletWebServerFactoryCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedJetty"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"tomcatServletWebServerFactory","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"formContentFilter","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties","org.springframework.boot.autoconfigure.web.WebProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ListableBeanFactory"] }, {"name":"flashMapManager","parameterTypes":[] }, {"name":"localeResolver","parameterTypes":[] }, {"name":"mvcContentNegotiationManager","parameterTypes":[] }, {"name":"mvcConversionService","parameterTypes":[] }, {"name":"mvcValidator","parameterTypes":[] }, {"name":"setResourceLoader","parameterTypes":["org.springframework.core.io.ResourceLoader"] }, {"name":"themeResolver","parameterTypes":[] }, {"name":"welcomePageHandlerMapping","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, {"name":"welcomePageNotAcceptableHandlerMapping","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.WebProperties","org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties","org.springframework.beans.factory.ListableBeanFactory","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, {"name":"addResourceHandlers","parameterTypes":["org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"] }, {"name":"configureAsyncSupport","parameterTypes":["org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"] }, {"name":"configureContentNegotiation","parameterTypes":["org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"] }, {"name":"configureMessageConverters","parameterTypes":["java.util.List"] }, {"name":"configurePathMatch","parameterTypes":["org.springframework.web.servlet.config.annotation.PathMatchConfigurer"] }, {"name":"defaultViewResolver","parameterTypes":[] }, {"name":"getMessageCodesResolver","parameterTypes":[] }, {"name":"requestContextFilter","parameterTypes":[] }, {"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }, {"name":"viewResolver","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WelcomePageHandlerMappingFactory"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Async"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Problemdetails"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WelcomePage"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WelcomePageNotAcceptableHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"resolveErrorView","parameterTypes":["jakarta.servlet.http.HttpServletRequest","org.springframework.http.HttpStatus","java.util.Map"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }, {"name":"basicErrorController","parameterTypes":["org.springframework.boot.web.servlet.error.ErrorAttributes","org.springframework.beans.factory.ObjectProvider"] }, {"name":"errorAttributes","parameterTypes":[] }, {"name":"errorPageCustomizer","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"] }, {"name":"preserveErrorControllerTargetClassPostProcessor","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.autoconfigure.web.WebProperties"] }, {"name":"conventionErrorViewResolver","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"registerErrorPages","parameterTypes":["org.springframework.boot.web.server.ErrorPageRegistry"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor",
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$StaticView",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getContentType","parameterTypes":[] }, {"name":"render","parameterTypes":["java.util.Map","jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"beanNameViewResolver","parameterTypes":[] }, {"name":"defaultErrorView","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"websocketServletWebServerCustomizer","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.availability.ApplicationAvailability",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getLivenessState","parameterTypes":[] }, {"name":"getReadinessState","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.availability.ApplicationAvailabilityBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getLastChangeEvent","parameterTypes":["java.lang.Class"] }, {"name":"getState","parameterTypes":["java.lang.Class"] }, {"name":"getState","parameterTypes":["java.lang.Class","org.springframework.boot.availability.AvailabilityState"] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.availability.AvailabilityChangeEvent"
},
{
  "name":"org.springframework.boot.availability.AvailabilityState"
},
{
  "name":"org.springframework.boot.availability.LivenessState"
},
{
  "name":"org.springframework.boot.availability.ReadinessState"
},
{
  "name":"org.springframework.boot.builder.ParentContextCloserApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"org.springframework.boot.cloud.CloudPlatform"
},
{
  "name":"org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.ContextIdApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.FileEncodingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.AnsiOutputApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory","org.springframework.boot.ConfigurableBootstrapContext"] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataNotFoundAction",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataProperties",
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"this$0"}],
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLocationResolver",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory","org.springframework.boot.context.properties.bind.Binder","org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.boot.context.event.ApplicationReadyEvent"
},
{
  "name":"org.springframework.boot.context.event.ApplicationStartedEvent"
},
{
  "name":"org.springframework.boot.context.event.EventPublishingRunListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.SpringApplication","java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.context.logging.LoggingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.BoundConfigurationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationProperties",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBean"
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinding",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationProperties",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.NestedConfigurationProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.PropertyMapper"
},
{
  "name":"org.springframework.boot.context.properties.bind.BindResult"
},
{
  "name":"org.springframework.boot.context.properties.bind.Binder"
},
{
  "name":"org.springframework.boot.context.properties.bind.Name",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.bind.Nested",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.migrator.PropertiesMigrationListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.source.ConfigurationProperty"
},
{
  "name":"org.springframework.boot.context.properties.source.ConfigurationPropertyName"
},
{
  "name":"org.springframework.boot.convert.DurationUnit",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.PropertiesPropertySourceLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.YamlPropertySourceLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.info.BuildProperties"
},
{
  "name":"org.springframework.boot.info.GitProperties"
},
{
  "name":"org.springframework.boot.io.Base64ProtocolResolver",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jackson.JsonComponent$Scope"
},
{
  "name":"org.springframework.boot.jackson.JsonComponentModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jackson.JsonMixinModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jackson.JsonMixinModuleEntries",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jackson.JsonMixinModuleEntries$Builder"
},
{
  "name":"org.springframework.boot.jdbc.DataSourceBuilder"
},
{
  "name":"org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
},
{
  "name":"org.springframework.boot.jdbc.SchemaManagement"
},
{
  "name":"org.springframework.boot.jdbc.SchemaManagementProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jdbc.XADataSourceWrapper"
},
{
  "name":"org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jdbc.metadata.DataSourcePoolMetadata"
},
{
  "name":"org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.loader.launch.LaunchedClassLoader",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"clearCache","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.loader.net.protocol.jar.JarUrlClassLoader",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.logging.LogLevel"
},
{
  "name":"org.springframework.boot.logging.LogLevelEditor"
},
{
  "name":"org.springframework.boot.logging.LoggerGroup"
},
{
  "name":"org.springframework.boot.logging.LoggingSystem"
},
{
  "name":"org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.ApplicationNameConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.ColorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder"
},
{
  "name":"org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.ssl.DefaultSslBundleRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addBundleUpdateHandler","parameterTypes":["java.lang.String","java.util.function.Consumer"] }, {"name":"close","parameterTypes":[] }, {"name":"getBundle","parameterTypes":["java.lang.String"] }, {"name":"registerBundle","parameterTypes":["java.lang.String","org.springframework.boot.ssl.SslBundle"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"updateBundle","parameterTypes":["java.lang.String","org.springframework.boot.ssl.SslBundle"] }]
},
{
  "name":"org.springframework.boot.ssl.DefaultSslBundleRegistry$RegisteredSslBundle"
},
{
  "name":"org.springframework.boot.ssl.NoSuchSslBundleException"
},
{
  "name":"org.springframework.boot.ssl.SslBundle"
},
{
  "name":"org.springframework.boot.ssl.SslBundleRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.ssl.SslBundles",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
},
{
  "name":"org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.task.SimpleAsyncTaskSchedulerCustomizer"
},
{
  "name":"org.springframework.boot.task.TaskExecutorBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.task.TaskExecutorCustomizer"
},
{
  "name":"org.springframework.boot.task.TaskSchedulerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.task.TaskSchedulerCustomizer"
},
{
  "name":"org.springframework.boot.task.ThreadPoolTaskExecutorBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
},
{
  "name":"org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.task.ThreadPoolTaskSchedulerCustomizer"
},
{
  "name":"org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory",
  "methods":[{"name":"toMetadataReaderFactory","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.validation.beanvalidation.FilteredMethodValidationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"byAnnotation","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.boot.web.client.RestClientCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.client.RestTemplateBuilder"
},
{
  "name":"org.springframework.boot.web.client.RestTemplateCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer"
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer"
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer"
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext"
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer"
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addConnectorCustomizers","parameterTypes":["org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer[]"] }, {"name":"addContextCustomizers","parameterTypes":["org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer[]"] }, {"name":"addEngineValves","parameterTypes":["org.apache.catalina.Valve[]"] }, {"name":"addProtocolHandlerCustomizers","parameterTypes":["org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer[]"] }, {"name":"close","parameterTypes":[] }, {"name":"getWebServer","parameterTypes":["org.springframework.boot.web.servlet.ServletContextInitializer[]"] }, {"name":"setBackgroundProcessorDelay","parameterTypes":["int"] }, {"name":"setBaseDirectory","parameterTypes":["java.io.File"] }, {"name":"setResourceLoader","parameterTypes":["org.springframework.core.io.ResourceLoader"] }, {"name":"setUriEncoding","parameterTypes":["java.nio.charset.Charset"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer"
},
{
  "name":"org.springframework.boot.web.error.ErrorAttributeOptions"
},
{
  "name":"org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addErrorPages","parameterTypes":["org.springframework.boot.web.server.ErrorPage[]"] }, {"name":"getAddress","parameterTypes":[] }, {"name":"getCompression","parameterTypes":[] }, {"name":"getErrorPages","parameterTypes":[] }, {"name":"getHttp2","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getServerHeader","parameterTypes":[] }, {"name":"getShutdown","parameterTypes":[] }, {"name":"getSsl","parameterTypes":[] }, {"name":"getSslBundles","parameterTypes":[] }, {"name":"setAddress","parameterTypes":["java.net.InetAddress"] }, {"name":"setCompression","parameterTypes":["org.springframework.boot.web.server.Compression"] }, {"name":"setErrorPages","parameterTypes":["java.util.Set"] }, {"name":"setHttp2","parameterTypes":["org.springframework.boot.web.server.Http2"] }, {"name":"setPort","parameterTypes":["int"] }, {"name":"setServerHeader","parameterTypes":["java.lang.String"] }, {"name":"setShutdown","parameterTypes":["org.springframework.boot.web.server.Shutdown"] }, {"name":"setSsl","parameterTypes":["org.springframework.boot.web.server.Ssl"] }, {"name":"setSslBundles","parameterTypes":["org.springframework.boot.ssl.SslBundles"] }]
},
{
  "name":"org.springframework.boot.web.server.Compression"
},
{
  "name":"org.springframework.boot.web.server.ConfigurableWebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.ErrorPage"
},
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistrar",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.Http2"
},
{
  "name":"org.springframework.boot.web.server.MimeMappings"
},
{
  "name":"org.springframework.boot.web.server.MimeMappings$Mapping"
},
{
  "name":"org.springframework.boot.web.server.Shutdown"
},
{
  "name":"org.springframework.boot.web.server.Ssl"
},
{
  "name":"org.springframework.boot.web.server.Ssl$ServerNameSslBundle"
},
{
  "name":"org.springframework.boot.web.server.WebServer"
},
{
  "name":"org.springframework.boot.web.server.WebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addServletNames","parameterTypes":["java.lang.String[]"] }, {"name":"addServletRegistrationBeans","parameterTypes":["org.springframework.boot.web.servlet.ServletRegistrationBean[]"] }, {"name":"addUrlPatterns","parameterTypes":["java.lang.String[]"] }, {"name":"determineDispatcherTypes","parameterTypes":[] }, {"name":"getFilterName","parameterTypes":[] }, {"name":"getServletNames","parameterTypes":[] }, {"name":"getServletRegistrationBeans","parameterTypes":[] }, {"name":"getUrlPatterns","parameterTypes":[] }, {"name":"isMatchAfter","parameterTypes":[] }, {"name":"setDispatcherTypes","parameterTypes":["jakarta.servlet.DispatcherType","jakarta.servlet.DispatcherType[]"] }, {"name":"setDispatcherTypes","parameterTypes":["java.util.EnumSet"] }, {"name":"setMatchAfter","parameterTypes":["boolean"] }, {"name":"setServletNames","parameterTypes":["java.util.Collection"] }, {"name":"setServletRegistrationBeans","parameterTypes":["java.util.Collection"] }, {"name":"setUrlPatterns","parameterTypes":["java.util.Collection"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getFilter","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.DispatcherType"
},
{
  "name":"org.springframework.boot.web.servlet.DynamicRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addInitParameter","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"configure","parameterTypes":["jakarta.servlet.Registration$Dynamic"] }, {"name":"getInitParameters","parameterTypes":[] }, {"name":"isAsyncSupported","parameterTypes":[] }, {"name":"setAsyncSupported","parameterTypes":["boolean"] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }, {"name":"setIgnoreRegistrationFailure","parameterTypes":["boolean"] }, {"name":"setInitParameters","parameterTypes":["java.util.Map"] }, {"name":"setName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.web.servlet.FilterRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getFilter","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.RegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }, {"name":"isEnabled","parameterTypes":[] }, {"name":"onStartup","parameterTypes":["jakarta.servlet.ServletContext"] }, {"name":"setEnabled","parameterTypes":["boolean"] }, {"name":"setOrder","parameterTypes":["int"] }]
},
{
  "name":"org.springframework.boot.web.servlet.ServletContextInitializer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.ServletRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getMultipartConfig","parameterTypes":[] }, {"name":"getServlet","parameterTypes":[] }, {"name":"getServletName","parameterTypes":[] }, {"name":"getUrlMappings","parameterTypes":[] }, {"name":"setLoadOnStartup","parameterTypes":["int"] }, {"name":"setMultipartConfig","parameterTypes":["jakarta.servlet.MultipartConfigElement"] }, {"name":"setServlet","parameterTypes":["jakarta.servlet.Servlet"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.WebListenerRegistrar"
},
{
  "name":"org.springframework.boot.web.servlet.WebListenerRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getError","parameterTypes":["org.springframework.web.context.request.WebRequest"] }, {"name":"getErrorAttributes","parameterTypes":["org.springframework.web.context.request.WebRequest","org.springframework.boot.web.error.ErrorAttributeOptions"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"resolveException","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","java.lang.Object","java.lang.Exception"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.error.ErrorAttributes",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.error.ErrorController",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedHiddenHttpMethodFilter"
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addCookieSameSiteSuppliers","parameterTypes":["org.springframework.boot.web.servlet.server.CookieSameSiteSupplier[]"] }, {"name":"addInitializers","parameterTypes":["org.springframework.boot.web.servlet.ServletContextInitializer[]"] }, {"name":"addMimeMappings","parameterTypes":["org.springframework.boot.web.server.MimeMappings"] }, {"name":"addWebListeners","parameterTypes":["java.lang.String[]"] }, {"name":"getContextPath","parameterTypes":[] }, {"name":"getCookieSameSiteSuppliers","parameterTypes":[] }, {"name":"getDisplayName","parameterTypes":[] }, {"name":"getDocumentRoot","parameterTypes":[] }, {"name":"getInitParameters","parameterTypes":[] }, {"name":"getJsp","parameterTypes":[] }, {"name":"getLocaleCharsetMappings","parameterTypes":[] }, {"name":"getMimeMappings","parameterTypes":[] }, {"name":"getSession","parameterTypes":[] }, {"name":"isRegisterDefaultServlet","parameterTypes":[] }, {"name":"setContextPath","parameterTypes":["java.lang.String"] }, {"name":"setCookieSameSiteSuppliers","parameterTypes":["java.util.List"] }, {"name":"setDisplayName","parameterTypes":["java.lang.String"] }, {"name":"setDocumentRoot","parameterTypes":["java.io.File"] }, {"name":"setInitParameters","parameterTypes":["java.util.Map"] }, {"name":"setInitializers","parameterTypes":["java.util.List"] }, {"name":"setJsp","parameterTypes":["org.springframework.boot.web.servlet.server.Jsp"] }, {"name":"setLocaleCharsetMappings","parameterTypes":["java.util.Map"] }, {"name":"setMimeMappings","parameterTypes":["org.springframework.boot.web.server.MimeMappings"] }, {"name":"setRegisterDefaultServlet","parameterTypes":["boolean"] }, {"name":"setSession","parameterTypes":["org.springframework.boot.web.servlet.server.Session"] }]
},
{
  "name":"org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"
},
{
  "name":"org.springframework.boot.web.servlet.server.Encoding",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.server.Jsp"
},
{
  "name":"org.springframework.boot.web.servlet.server.ServletWebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.server.Session"
},
{
  "name":"org.springframework.cache.Cache"
},
{
  "name":"org.springframework.cache.CacheManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cache.annotation.AbstractCachingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setConfigurers","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, {"name":"setImportMetadata","parameterTypes":["org.springframework.core.type.AnnotationMetadata"] }]
},
{
  "name":"org.springframework.cache.annotation.AbstractCachingConfiguration$CachingConfigurerSupplier"
},
{
  "name":"org.springframework.cache.annotation.AnnotationCacheOperationSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"isCandidateClass","parameterTypes":["java.lang.Class"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cache.annotation.AnnotationCacheOperationSource$CacheOperationProvider"
},
{
  "name":"org.springframework.cache.annotation.CacheAnnotationParser"
},
{
  "name":"org.springframework.cache.annotation.CachingConfigurationSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cache.annotation.CachingConfigurer"
},
{
  "name":"org.springframework.cache.annotation.EnableCaching",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cache.annotation.ProxyCachingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"cacheAdvisor","parameterTypes":["org.springframework.cache.interceptor.CacheOperationSource","org.springframework.cache.interceptor.CacheInterceptor"] }, {"name":"cacheInterceptor","parameterTypes":["org.springframework.cache.interceptor.CacheOperationSource"] }, {"name":"cacheOperationSource","parameterTypes":[] }]
},
{
  "name":"org.springframework.cache.caffeine.CaffeineCache"
},
{
  "name":"org.springframework.cache.concurrent.ConcurrentMapCacheManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getCache","parameterTypes":["java.lang.String"] }, {"name":"getCacheNames","parameterTypes":[] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cache.interceptor.AbstractCacheInvoker",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getErrorHandler","parameterTypes":[] }, {"name":"setErrorHandler","parameterTypes":["org.springframework.cache.interceptor.CacheErrorHandler"] }]
},
{
  "name":"org.springframework.cache.interceptor.AbstractFallbackCacheOperationSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getCacheOperations","parameterTypes":["java.lang.reflect.Method","java.lang.Class"] }]
},
{
  "name":"org.springframework.cache.interceptor.BeanFactoryCacheOperationSourceAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getPointcut","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cache.interceptor.CacheAspectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"configure","parameterTypes":["java.util.function.Supplier","java.util.function.Supplier","java.util.function.Supplier","java.util.function.Supplier"] }, {"name":"getCacheOperationSource","parameterTypes":[] }, {"name":"getCacheResolver","parameterTypes":[] }, {"name":"getKeyGenerator","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setCacheManager","parameterTypes":["org.springframework.cache.CacheManager"] }, {"name":"setCacheOperationSource","parameterTypes":["org.springframework.cache.interceptor.CacheOperationSource"] }, {"name":"setCacheOperationSources","parameterTypes":["org.springframework.cache.interceptor.CacheOperationSource[]"] }, {"name":"setCacheResolver","parameterTypes":["org.springframework.cache.interceptor.CacheResolver"] }, {"name":"setKeyGenerator","parameterTypes":["org.springframework.cache.interceptor.KeyGenerator"] }]
},
{
  "name":"org.springframework.cache.interceptor.CacheInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"invoke","parameterTypes":["org.aopalliance.intercept.MethodInvocation"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cache.interceptor.CacheOperationSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cache.jcache.JCacheCache"
},
{
  "name":"org.springframework.cache.jcache.config.ProxyJCacheConfiguration"
},
{
  "name":"org.springframework.cglib.proxy.Dispatcher"
},
{
  "name":"org.springframework.cglib.proxy.Factory",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cglib.proxy.MethodInterceptor"
},
{
  "name":"org.springframework.cglib.proxy.NoOp"
},
{
  "name":"org.springframework.cloud.function.web.function.FunctionEndpointInitializer"
},
{
  "name":"org.springframework.context.ApplicationContext"
},
{
  "name":"org.springframework.context.ApplicationContextAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationContextException"
},
{
  "name":"org.springframework.context.ApplicationContextInitializer"
},
{
  "name":"org.springframework.context.ApplicationEvent"
},
{
  "name":"org.springframework.context.ApplicationEventPublisher"
},
{
  "name":"org.springframework.context.ApplicationEventPublisherAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"supportsAsyncExecution","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.ApplicationStartupAware",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ConfigurableApplicationContext"
},
{
  "name":"org.springframework.context.EmbeddedValueResolverAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.EnvironmentAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.Lifecycle",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.LifecycleProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.MessageSource"
},
{
  "name":"org.springframework.context.MessageSourceAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.MessageSourceResolvable"
},
{
  "name":"org.springframework.context.PayloadApplicationEvent"
},
{
  "name":"org.springframework.context.Phased",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ResourceLoaderAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.SmartLifecycle",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"isAutoStartup","parameterTypes":[] }, {"name":"stop","parameterTypes":["java.lang.Runnable"] }]
},
{
  "name":"org.springframework.context.annotation.AnnotationConfigRegistry"
},
{
  "name":"org.springframework.context.annotation.AnnotationScopeMetadataResolver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.AspectJAutoProxyRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.AutoProxyRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.Bean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
},
{
  "name":"org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.ComponentScan",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ComponentScan$Filter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Conditional",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Configuration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassParser$DefaultDeferredImportSelectorGroup",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassPostProcessor",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setMetadataReaderFactory","parameterTypes":["org.springframework.core.type.classreading.MetadataReaderFactory"] }]
},
{
  "name":"org.springframework.context.annotation.DependsOn",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.EnableAspectJAutoProxy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Import",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ImportAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.ImportRuntimeHints",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Lazy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Primary",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Profile",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ProfileCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.Role",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Scope",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.event.ContextClosedEvent"
},
{
  "name":"org.springframework.context.event.ContextRefreshedEvent"
},
{
  "name":"org.springframework.context.event.ContextStoppedEvent"
},
{
  "name":"org.springframework.context.event.DefaultEventListenerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.event.EventListener",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.event.EventListenerMethodProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.event.SmartApplicationListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getListenerId","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"supportsSourceType","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.context.i18n.LocaleContext"
},
{
  "name":"org.springframework.context.support.ApplicationObjectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.context.support.DefaultLifecycleProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"isRunning","parameterTypes":[] }, {"name":"onClose","parameterTypes":[] }, {"name":"onRefresh","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"start","parameterTypes":[] }, {"name":"stop","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup"
},
{
  "name":"org.springframework.context.support.MessageSourceAccessor"
},
{
  "name":"org.springframework.context.support.PropertySourcesPlaceholderConfigurer",
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.weaving.LoadTimeWeaverAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.DecoratingProxy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.DefaultParameterNameDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.MethodParameter"
},
{
  "name":"org.springframework.core.Ordered",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.ParameterNameDiscoverer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.PrioritizedParameterNameDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addDiscoverer","parameterTypes":["org.springframework.core.ParameterNameDiscoverer"] }, {"name":"getParameterNames","parameterTypes":["java.lang.reflect.Constructor"] }]
},
{
  "name":"org.springframework.core.PriorityOrdered",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.ReactiveAdapterRegistry"
},
{
  "name":"org.springframework.core.ResolvableType"
},
{
  "name":"org.springframework.core.annotation.AliasFor",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.annotation.MergedAnnotation"
},
{
  "name":"org.springframework.core.annotation.Order",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.convert.ConversionService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor"] }]
},
{
  "name":"org.springframework.core.convert.TypeDescriptor"
},
{
  "name":"org.springframework.core.convert.converter.Converter"
},
{
  "name":"org.springframework.core.convert.converter.ConverterFactory"
},
{
  "name":"org.springframework.core.convert.converter.ConverterRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.convert.converter.GenericConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
},
{
  "name":"org.springframework.core.convert.support.ConfigurableConversionService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.convert.support.GenericConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addConverter","parameterTypes":["java.lang.Class","java.lang.Class","org.springframework.core.convert.converter.Converter"] }, {"name":"addConverter","parameterTypes":["org.springframework.core.convert.converter.Converter"] }, {"name":"addConverter","parameterTypes":["org.springframework.core.convert.converter.GenericConverter"] }, {"name":"addConverterFactory","parameterTypes":["org.springframework.core.convert.converter.ConverterFactory"] }, {"name":"canBypassConvert","parameterTypes":["org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, {"name":"canConvert","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"canConvert","parameterTypes":["org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, {"name":"convert","parameterTypes":["java.lang.Object","java.lang.Class"] }, {"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, {"name":"removeConvertible","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.core.env.ConfigurableEnvironment"
},
{
  "name":"org.springframework.core.env.EnumerablePropertySource"
},
{
  "name":"org.springframework.core.env.Environment"
},
{
  "name":"org.springframework.core.env.EnvironmentCapable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.env.MutablePropertySources"
},
{
  "name":"org.springframework.core.env.PropertySource"
},
{
  "name":"org.springframework.core.io.Resource",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"from","parameterTypes":["java.lang.String"] }, {"name":"of","parameterTypes":["java.lang.String"] }, {"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.core.io.ResourceLoader"
},
{
  "name":"org.springframework.core.io.support.PropertiesLoaderSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setFileEncoding","parameterTypes":["java.lang.String"] }, {"name":"setIgnoreResourceNotFound","parameterTypes":["boolean"] }, {"name":"setLocalOverride","parameterTypes":["boolean"] }, {"name":"setLocation","parameterTypes":["org.springframework.core.io.Resource"] }, {"name":"setLocations","parameterTypes":["org.springframework.core.io.Resource[]"] }, {"name":"setProperties","parameterTypes":["java.util.Properties"] }, {"name":"setPropertiesArray","parameterTypes":["java.util.Properties[]"] }, {"name":"setPropertiesPersister","parameterTypes":["org.springframework.util.PropertiesPersister"] }]
},
{
  "name":"org.springframework.core.task.AsyncListenableTaskExecutor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.task.AsyncTaskExecutor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"execute","parameterTypes":["java.lang.Runnable","long"] }, {"name":"submitCompletable","parameterTypes":["java.lang.Runnable"] }, {"name":"submitCompletable","parameterTypes":["java.util.concurrent.Callable"] }]
},
{
  "name":"org.springframework.core.task.SimpleAsyncTaskExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"execute","parameterTypes":["java.lang.Runnable"] }, {"name":"execute","parameterTypes":["java.lang.Runnable","long"] }, {"name":"submit","parameterTypes":["java.lang.Runnable"] }, {"name":"submit","parameterTypes":["java.util.concurrent.Callable"] }, {"name":"submitListenable","parameterTypes":["java.lang.Runnable"] }, {"name":"submitListenable","parameterTypes":["java.util.concurrent.Callable"] }]
},
{
  "name":"org.springframework.core.task.TaskDecorator"
},
{
  "name":"org.springframework.core.task.TaskExecutor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.type.AnnotationMetadata"
},
{
  "name":"org.springframework.core.type.classreading.MetadataReaderFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"] }, {"name":"from","parameterTypes":["org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"] }, {"name":"of","parameterTypes":["org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"] }, {"name":"valueOf","parameterTypes":["org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"] }]
},
{
  "name":"org.springframework.dao.DataAccessException"
},
{
  "name":"org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.dao.support.ChainedPersistenceExceptionTranslator"
},
{
  "name":"org.springframework.dao.support.DataAccessUtils"
},
{
  "name":"org.springframework.dao.support.PersistenceExceptionTranslationInterceptor"
},
{
  "name":"org.springframework.dao.support.PersistenceExceptionTranslator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.annotation.CreatedBy",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.annotation.CreatedDate",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.annotation.LastModifiedBy",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.annotation.LastModifiedDate",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.annotation.QueryAnnotation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.auditing.AuditableBeanWrapper"
},
{
  "name":"org.springframework.data.auditing.AuditingHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"from","parameterTypes":["org.springframework.data.mapping.context.MappingContext"] }, {"name":"setAuditorAware","parameterTypes":["org.springframework.data.domain.AuditorAware"] }]
},
{
  "name":"org.springframework.data.auditing.AuditingHandlerSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setDateTimeForNow","parameterTypes":["boolean"] }, {"name":"setDateTimeProvider","parameterTypes":["org.springframework.data.auditing.DateTimeProvider"] }, {"name":"setModifyOnCreation","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.data.auditing.Auditor"
},
{
  "name":"org.springframework.data.auditing.DateTimeProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.cardanofoundation.lob.app.support.spring_audit.internal.AuditDataProvider"] }, {"name":"from","parameterTypes":["org.cardanofoundation.lob.app.support.spring_audit.internal.AuditDataProvider"] }, {"name":"of","parameterTypes":["org.cardanofoundation.lob.app.support.spring_audit.internal.AuditDataProvider"] }, {"name":"valueOf","parameterTypes":["org.cardanofoundation.lob.app.support.spring_audit.internal.AuditDataProvider"] }]
},
{
  "name":"org.springframework.data.cassandra.ReactiveSession"
},
{
  "name":"org.springframework.data.domain.AuditorAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["jdk.proxy2.$Proxy290"] }, {"name":"from","parameterTypes":["jdk.proxy2.$Proxy290"] }, {"name":"of","parameterTypes":["jdk.proxy2.$Proxy290"] }, {"name":"valueOf","parameterTypes":["jdk.proxy2.$Proxy290"] }]
},
{
  "name":"org.springframework.data.domain.Example"
},
{
  "name":"org.springframework.data.domain.Limit"
},
{
  "name":"org.springframework.data.domain.ManagedTypes"
},
{
  "name":"org.springframework.data.domain.OffsetScrollPosition"
},
{
  "name":"org.springframework.data.domain.Page"
},
{
  "name":"org.springframework.data.domain.PageRequest"
},
{
  "name":"org.springframework.data.domain.Pageable"
},
{
  "name":"org.springframework.data.domain.Persistable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setBatches","parameterTypes":["java.util.Set"] }, {"name":"setIsActive","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.data.domain.Sort"
},
{
  "name":"org.springframework.data.domain.Unpaged"
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"
},
{
  "name":"org.springframework.data.elasticsearch.repository.ElasticsearchRepository"
},
{
  "name":"org.springframework.data.envers.repository.config.EnableEnversRepositories"
},
{
  "name":"org.springframework.data.geo.GeoModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration"
},
{
  "name":"org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.jpa.domain.support.AuditingEntityListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setAuditingHandler","parameterTypes":["org.springframework.beans.factory.ObjectFactory"] }]
},
{
  "name":"org.springframework.data.jpa.mapping.JpaMetamodelMappingContext",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"findPersistentPropertyPaths","parameterTypes":["java.lang.Class","java.util.function.Predicate"] }, {"name":"hasPersistentEntityFor","parameterTypes":["java.lang.Class"] }, {"name":"toMappingContext","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.jpa.mapping.JpaPersistentEntityImpl"
},
{
  "name":"org.springframework.data.jpa.mapping.JpaPersistentProperty"
},
{
  "name":"org.springframework.data.jpa.repository.JpaContext",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.jpa.repository.JpaRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"deleteAllByIdInBatch","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteAllInBatch","parameterTypes":[] }, {"name":"deleteAllInBatch","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteInBatch","parameterTypes":["java.lang.Iterable"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Example","org.springframework.data.domain.Sort"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort"] }, {"name":"flush","parameterTypes":[] }, {"name":"getById","parameterTypes":["java.lang.Object"] }, {"name":"getOne","parameterTypes":["java.lang.Object"] }, {"name":"getReferenceById","parameterTypes":["java.lang.Object"] }, {"name":"saveAllAndFlush","parameterTypes":["java.lang.Iterable"] }, {"name":"saveAndFlush","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.data.jpa.repository.JpaSpecificationExecutor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.jpa.repository.Query",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.jpa.repository.config.EnableJpaAuditing",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.jpa.repository.config.EnableJpaRepositories",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.jpa.repository.config.JpaAuditingRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension$JpaRepositoryRegistrationAotProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.jpa.repository.query.JpaQueryMethodFactory"
},
{
  "name":"org.springframework.data.jpa.repository.support.CrudMethodMetadata",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getComment","parameterTypes":[] }, {"name":"getEntityGraph","parameterTypes":[] }, {"name":"getLockModeType","parameterTypes":[] }, {"name":"getQueryHints","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor"
},
{
  "name":"org.springframework.data.jpa.repository.support.DefaultJpaContext",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["char"] }, {"name":"getExtensionId","parameterTypes":[] }, {"name":"getRootObject","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.jpa.repository.support.JpaRepositoryConfigurationAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }, {"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"setEntityManager","parameterTypes":["jakarta.persistence.EntityManager"] }, {"name":"setEntityPathResolver","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, {"name":"setEscapeCharacter","parameterTypes":["char"] }, {"name":"setMappingContext","parameterTypes":["org.springframework.data.mapping.context.MappingContext"] }, {"name":"setQueryMethodFactory","parameterTypes":["org.springframework.data.jpa.repository.query.JpaQueryMethodFactory"] }]
},
{
  "name":"org.springframework.data.jpa.repository.support.JpaRepositoryImplementation",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"findAll","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Example","org.springframework.data.domain.Sort"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort"] }]
},
{
  "name":"org.springframework.data.jpa.repository.support.SimpleJpaRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.jpa.repository.support.JpaEntityInformation","jakarta.persistence.EntityManager"] }, {"name":"count","parameterTypes":[] }, {"name":"count","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"count","parameterTypes":["org.springframework.data.jpa.domain.Specification"] }, {"name":"delete","parameterTypes":["java.lang.Object"] }, {"name":"delete","parameterTypes":["org.springframework.data.jpa.domain.Specification"] }, {"name":"deleteAll","parameterTypes":[] }, {"name":"deleteAll","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteAllById","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteAllByIdInBatch","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteAllInBatch","parameterTypes":[] }, {"name":"deleteAllInBatch","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteById","parameterTypes":["java.lang.Object"] }, {"name":"exists","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"exists","parameterTypes":["org.springframework.data.jpa.domain.Specification"] }, {"name":"existsById","parameterTypes":["java.lang.Object"] }, {"name":"findAll","parameterTypes":[] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Example","org.springframework.data.domain.Pageable"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Example","org.springframework.data.domain.Sort"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Pageable"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort"] }, {"name":"findAll","parameterTypes":["org.springframework.data.jpa.domain.Specification"] }, {"name":"findAll","parameterTypes":["org.springframework.data.jpa.domain.Specification","org.springframework.data.domain.Pageable"] }, {"name":"findAll","parameterTypes":["org.springframework.data.jpa.domain.Specification","org.springframework.data.domain.Sort"] }, {"name":"findAllById","parameterTypes":["java.lang.Iterable"] }, {"name":"findBy","parameterTypes":["org.springframework.data.domain.Example","java.util.function.Function"] }, {"name":"findBy","parameterTypes":["org.springframework.data.jpa.domain.Specification","java.util.function.Function"] }, {"name":"findById","parameterTypes":["java.lang.Object"] }, {"name":"findDispatchableReports","parameterTypes":["java.lang.String","org.springframework.data.domain.Limit"] }, {"name":"findDispatchableTransactions","parameterTypes":["java.lang.String","org.springframework.data.domain.Limit"] }, {"name":"findOne","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"findOne","parameterTypes":["org.springframework.data.jpa.domain.Specification"] }, {"name":"flush","parameterTypes":[] }, {"name":"getById","parameterTypes":["java.lang.Object"] }, {"name":"getOne","parameterTypes":["java.lang.Object"] }, {"name":"getReferenceById","parameterTypes":["java.lang.Object"] }, {"name":"save","parameterTypes":["java.lang.Object"] }, {"name":"saveAll","parameterTypes":["java.lang.Iterable"] }, {"name":"saveAllAndFlush","parameterTypes":["java.lang.Iterable"] }, {"name":"saveAndFlush","parameterTypes":["java.lang.Object"] }, {"name":"setEscapeCharacter","parameterTypes":["org.springframework.data.jpa.repository.query.EscapeCharacter"] }, {"name":"setProjectionFactory","parameterTypes":["org.springframework.data.projection.ProjectionFactory"] }, {"name":"setRepositoryMethodMetadata","parameterTypes":["org.springframework.data.jpa.repository.support.CrudMethodMetadata"] }]
},
{
  "name":"org.springframework.data.jpa.util.HibernateProxyDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.jpa.util.JpaMetamodelCacheCleanup",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.ldap.repository.LdapRepository"
},
{
  "name":"org.springframework.data.mapping.MappingException"
},
{
  "name":"org.springframework.data.mapping.PersistentEntity"
},
{
  "name":"org.springframework.data.mapping.PersistentProperty"
},
{
  "name":"org.springframework.data.mapping.PersistentPropertyAccessor"
},
{
  "name":"org.springframework.data.mapping.PersistentPropertyPath"
},
{
  "name":"org.springframework.data.mapping.PersistentPropertyPaths"
},
{
  "name":"org.springframework.data.mapping.PropertyPath"
},
{
  "name":"org.springframework.data.mapping.context.AbstractMappingContext",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"createPersistentProperty","parameterTypes":["org.springframework.data.mapping.model.Property","org.springframework.data.mapping.model.MutablePersistentEntity","org.springframework.data.mapping.model.SimpleTypeHolder"] }, {"name":"getManagedTypes","parameterTypes":[] }, {"name":"getPersistentEntities","parameterTypes":[] }, {"name":"getPersistentEntity","parameterTypes":["java.lang.Class"] }, {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.util.TypeInformation"] }, {"name":"getPersistentPropertyPath","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"getPersistentPropertyPath","parameterTypes":["java.lang.String","org.springframework.data.util.TypeInformation"] }, {"name":"getPersistentPropertyPath","parameterTypes":["org.springframework.data.mapping.PropertyPath"] }, {"name":"initialize","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }, {"name":"setInitialEntitySet","parameterTypes":["java.util.Set"] }, {"name":"setManagedTypes","parameterTypes":["org.springframework.data.domain.ManagedTypes"] }, {"name":"setSimpleTypeHolder","parameterTypes":["org.springframework.data.mapping.model.SimpleTypeHolder"] }, {"name":"setStrict","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.data.mapping.context.MappingContext",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"] }, {"name":"from","parameterTypes":["org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"] }, {"name":"getPersistentEntity","parameterTypes":["java.lang.Class"] }, {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, {"name":"getRequiredPersistentEntity","parameterTypes":["java.lang.Class"] }, {"name":"getRequiredPersistentEntity","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, {"name":"getRequiredPersistentEntity","parameterTypes":["org.springframework.data.util.TypeInformation"] }, {"name":"of","parameterTypes":["org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"] }, {"name":"valueOf","parameterTypes":["org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"] }]
},
{
  "name":"org.springframework.data.mapping.model.MutablePersistentEntity"
},
{
  "name":"org.springframework.data.mapping.model.Property"
},
{
  "name":"org.springframework.data.mapping.model.SimpleTypeHolder"
},
{
  "name":"org.springframework.data.mongodb.core.MongoTemplate"
},
{
  "name":"org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor"
},
{
  "name":"org.springframework.data.querydsl.EntityPathResolver"
},
{
  "name":"org.springframework.data.querydsl.QuerydslPredicateExecutor"
},
{
  "name":"org.springframework.data.querydsl.ReactiveQuerydslPredicateExecutor"
},
{
  "name":"org.springframework.data.querydsl.binding.QuerydslBindingsFactory"
},
{
  "name":"org.springframework.data.r2dbc.core.R2dbcEntityTemplate"
},
{
  "name":"org.springframework.data.redis.cache.RedisCache"
},
{
  "name":"org.springframework.data.redis.connection.RedisConnectionFactory"
},
{
  "name":"org.springframework.data.redis.core.RedisOperations"
},
{
  "name":"org.springframework.data.redis.repository.configuration.EnableRedisRepositories"
},
{
  "name":"org.springframework.data.repository.CrudRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"count","parameterTypes":[] }, {"name":"delete","parameterTypes":["java.lang.Object"] }, {"name":"deleteAll","parameterTypes":[] }, {"name":"deleteAll","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteAllById","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteById","parameterTypes":["java.lang.Object"] }, {"name":"existsById","parameterTypes":["java.lang.Object"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort"] }, {"name":"findById","parameterTypes":["java.lang.Object"] }, {"name":"save","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.data.repository.ListCrudRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"findAll","parameterTypes":[] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort"] }, {"name":"findAllById","parameterTypes":["java.lang.Iterable"] }, {"name":"saveAll","parameterTypes":["java.lang.Iterable"] }]
},
{
  "name":"org.springframework.data.repository.ListPagingAndSortingRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort"] }]
},
{
  "name":"org.springframework.data.repository.NoRepositoryBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.repository.PagingAndSortingRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"findAll","parameterTypes":["org.springframework.data.domain.Pageable"] }]
},
{
  "name":"org.springframework.data.repository.Repository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort"] }]
},
{
  "name":"org.springframework.data.repository.config.AotRepositoryContext"
},
{
  "name":"org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getObject","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"isSingleton","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.repository.config.RepositoryConfiguration",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.repository.config.RepositoryConfigurationAdapter"] }, {"name":"from","parameterTypes":["org.springframework.data.repository.config.RepositoryConfigurationAdapter"] }, {"name":"of","parameterTypes":["org.springframework.data.repository.config.RepositoryConfigurationAdapter"] }, {"name":"valueOf","parameterTypes":["org.springframework.data.repository.config.RepositoryConfigurationAdapter"] }]
},
{
  "name":"org.springframework.data.repository.config.RepositoryConfigurationAdapter",
  "methods":[{"name":"toRepositoryConfiguration","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.repository.config.RepositoryConfigurationSource"
},
{
  "name":"org.springframework.data.repository.config.RepositoryRegistrationAotContribution"
},
{
  "name":"org.springframework.data.repository.config.RepositoryRegistrationAotProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getConfigMap","parameterTypes":[] }, {"name":"processAheadOfTime","parameterTypes":["org.springframework.beans.factory.support.RegisteredBean"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setConfigMap","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.springframework.data.repository.core.EntityInformation"
},
{
  "name":"org.springframework.data.repository.core.NamedQueries",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"] }, {"name":"from","parameterTypes":["org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"] }, {"name":"of","parameterTypes":["org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"] }, {"name":"valueOf","parameterTypes":["org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"] }]
},
{
  "name":"org.springframework.data.repository.core.RepositoryInformation"
},
{
  "name":"org.springframework.data.repository.core.support.MethodLookup"
},
{
  "name":"org.springframework.data.repository.core.support.MethodLookup$InvokedMethod"
},
{
  "name":"org.springframework.data.repository.core.support.MethodLookup$MethodPredicate"
},
{
  "name":"org.springframework.data.repository.core.support.PropertiesBasedNamedQueries",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getQuery","parameterTypes":["java.lang.String"] }, {"name":"hasQuery","parameterTypes":["java.lang.String"] }, {"name":"toNamedQueries","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor"
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryComposition"
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"iterator","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addRepositoryFactoryCustomizer","parameterTypes":["org.springframework.data.repository.core.support.RepositoryFactoryCustomizer"] }, {"name":"getEntityInformation","parameterTypes":[] }, {"name":"getObject","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"getPersistentEntity","parameterTypes":[] }, {"name":"getQueryMethods","parameterTypes":[] }, {"name":"getRepositoryInformation","parameterTypes":[] }, {"name":"isSingleton","parameterTypes":[] }, {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setCustomImplementation","parameterTypes":["java.lang.Object"] }, {"name":"setEvaluationContextProvider","parameterTypes":["org.springframework.data.repository.query.QueryMethodEvaluationContextProvider"] }, {"name":"setLazyInit","parameterTypes":["boolean"] }, {"name":"setNamedQueries","parameterTypes":["org.springframework.data.repository.core.NamedQueries"] }, {"name":"setQueryLookupStrategyKey","parameterTypes":["org.springframework.data.repository.query.QueryLookupStrategy$Key"] }, {"name":"setRepositoryBaseClass","parameterTypes":["java.lang.Class"] }, {"name":"setRepositoryFragments","parameterTypes":["org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"] }]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFactoryCustomizer"
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFactoryInformation",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFactorySupport"
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor"
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFragment",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"hasMethod","parameterTypes":["java.lang.reflect.Method"] }, {"name":"implemented","parameterTypes":["java.lang.Class","java.lang.Object"] }, {"name":"methods","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFragment$ImplementedRepositoryFragment",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getImplementation","parameterTypes":[] }, {"name":"getSignatureContributor","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }, {"name":"withImplementation","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.util.List"] }, {"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getObject","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryInvocationMulticaster"
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryMethodInvocationListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryMethodInvoker"
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker"
},
{
  "name":"org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setEnableDefaultTransactions","parameterTypes":["boolean"] }, {"name":"setTransactionManager","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.data.repository.query.Param"
},
{
  "name":"org.springframework.data.repository.query.QueryByExampleExecutor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"count","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"exists","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Example","org.springframework.data.domain.Pageable"] }, {"name":"findBy","parameterTypes":["org.springframework.data.domain.Example","java.util.function.Function"] }, {"name":"findOne","parameterTypes":["org.springframework.data.domain.Example"] }]
},
{
  "name":"org.springframework.data.repository.query.QueryLookupStrategy$Key",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.repository.query.QueryMethodEvaluationContextProvider"
},
{
  "name":"org.springframework.data.repository.query.ReactiveQueryByExampleExecutor"
},
{
  "name":"org.springframework.data.rest.core.config.RepositoryRestConfiguration"
},
{
  "name":"org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter"
},
{
  "name":"org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration"
},
{
  "name":"org.springframework.data.spel.spi.EvaluationContextExtension",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getFunctions","parameterTypes":[] }, {"name":"getProperties","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.spel.spi.ExtensionIdAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.util.CustomCollections$EclipseCollections",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.util.CustomCollections$VavrCollections",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.util.CustomCollections.EclipseCollections"
},
{
  "name":"org.springframework.data.util.CustomCollections.VavrCollections"
},
{
  "name":"org.springframework.data.util.KotlinBeanInfoFactory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.util.Streamable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"and","parameterTypes":["java.lang.Iterable"] }, {"name":"and","parameterTypes":["java.util.function.Supplier"] }, {"name":"and","parameterTypes":["org.springframework.data.util.Streamable"] }, {"name":"and","parameterTypes":["java.lang.Object[]"] }, {"name":"filter","parameterTypes":["java.util.function.Predicate"] }, {"name":"flatMap","parameterTypes":["java.util.function.Function"] }, {"name":"get","parameterTypes":[] }, {"name":"isEmpty","parameterTypes":[] }, {"name":"map","parameterTypes":["java.util.function.Function"] }, {"name":"stream","parameterTypes":[] }, {"name":"toList","parameterTypes":[] }, {"name":"toSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.util.TypeInformation"
},
{
  "name":"org.springframework.data.web.OffsetScrollPositionArgumentResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.web.OffsetScrollPositionHandlerMethodArgumentResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolveArgument","parameterTypes":["org.springframework.core.MethodParameter","org.springframework.web.method.support.ModelAndViewContainer","org.springframework.web.context.request.NativeWebRequest","org.springframework.web.bind.support.WebDataBinderFactory"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supportsParameter","parameterTypes":["org.springframework.core.MethodParameter"] }]
},
{
  "name":"org.springframework.data.web.OffsetScrollPositionHandlerMethodArgumentResolverSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setOffsetParameter","parameterTypes":["java.lang.String"] }, {"name":"setQualifierDelimiter","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.data.web.PageableArgumentResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.web.PageableDefault"
},
{
  "name":"org.springframework.data.web.PageableHandlerMethodArgumentResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolveArgument","parameterTypes":["org.springframework.core.MethodParameter","org.springframework.web.method.support.ModelAndViewContainer","org.springframework.web.context.request.NativeWebRequest","org.springframework.web.bind.support.WebDataBinderFactory"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supportsParameter","parameterTypes":["org.springframework.core.MethodParameter"] }]
},
{
  "name":"org.springframework.data.web.PageableHandlerMethodArgumentResolverSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"isFallbackPageable","parameterTypes":["org.springframework.data.domain.Pageable"] }, {"name":"setFallbackPageable","parameterTypes":["org.springframework.data.domain.Pageable"] }, {"name":"setMaxPageSize","parameterTypes":["int"] }, {"name":"setOneIndexedParameters","parameterTypes":["boolean"] }, {"name":"setPageParameterName","parameterTypes":["java.lang.String"] }, {"name":"setPrefix","parameterTypes":["java.lang.String"] }, {"name":"setQualifierDelimiter","parameterTypes":["java.lang.String"] }, {"name":"setSizeParameterName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.data.web.SortArgumentResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.web.SortDefault"
},
{
  "name":"org.springframework.data.web.SortHandlerMethodArgumentResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolveArgument","parameterTypes":["org.springframework.core.MethodParameter","org.springframework.web.method.support.ModelAndViewContainer","org.springframework.web.context.request.NativeWebRequest","org.springframework.web.bind.support.WebDataBinderFactory"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supportsParameter","parameterTypes":["org.springframework.core.MethodParameter"] }]
},
{
  "name":"org.springframework.data.web.SortHandlerMethodArgumentResolverSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getPropertyDelimiter","parameterTypes":[] }, {"name":"setFallbackSort","parameterTypes":["org.springframework.data.domain.Sort"] }, {"name":"setPropertyDelimiter","parameterTypes":["java.lang.String"] }, {"name":"setQualifierDelimiter","parameterTypes":["java.lang.String"] }, {"name":"setSortParameter","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.data.web.config.EnableSpringDataWebSupport",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.web.config.EnableSpringDataWebSupport$QuerydslActivator",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.web.config.EnableSpringDataWebSupport$SpringDataWebConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.web.config.EnableSpringDataWebSupport$SpringDataWebSettingsRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.web.config.OffsetScrollPositionHandlerMethodArgumentResolverCustomizer"
},
{
  "name":"org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"projectingArgumentResolverBeanPostProcessor","parameterTypes":["org.springframework.beans.factory.ObjectFactory"] }]
},
{
  "name":"org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.web.config.SpringDataJacksonConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"jacksonGeoModule","parameterTypes":[] }, {"name":"pageModule","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.web.config.SpringDataJacksonModules",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.web.config.SpringDataWebConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.beans.factory.ObjectFactory"] }, {"name":"addArgumentResolvers","parameterTypes":["java.util.List"] }, {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, {"name":"extendMessageConverters","parameterTypes":["java.util.List"] }, {"name":"offsetResolver","parameterTypes":[] }, {"name":"pageableResolver","parameterTypes":[] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"sortResolver","parameterTypes":[] }]
},
{
  "name":"org.springframework.format.AnnotationFormatterFactory"
},
{
  "name":"org.springframework.format.Formatter"
},
{
  "name":"org.springframework.format.FormatterRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.format.Parser"
},
{
  "name":"org.springframework.format.Printer"
},
{
  "name":"org.springframework.format.support.DefaultFormattingConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.format.support.FormattingConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addFormatter","parameterTypes":["org.springframework.format.Formatter"] }, {"name":"addFormatterForFieldAnnotation","parameterTypes":["org.springframework.format.AnnotationFormatterFactory"] }, {"name":"addFormatterForFieldType","parameterTypes":["java.lang.Class","org.springframework.format.Formatter"] }, {"name":"addFormatterForFieldType","parameterTypes":["java.lang.Class","org.springframework.format.Printer","org.springframework.format.Parser"] }, {"name":"addParser","parameterTypes":["org.springframework.format.Parser"] }, {"name":"addPrinter","parameterTypes":["org.springframework.format.Printer"] }, {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }]
},
{
  "name":"org.springframework.hateoas.EntityModel"
},
{
  "name":"org.springframework.hateoas.Link"
},
{
  "name":"org.springframework.hateoas.server.LinkRelationProvider"
},
{
  "name":"org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter"
},
{
  "name":"org.springframework.http.CacheControl"
},
{
  "name":"org.springframework.http.HttpHeaders"
},
{
  "name":"org.springframework.http.HttpInputMessage"
},
{
  "name":"org.springframework.http.HttpMethod"
},
{
  "name":"org.springframework.http.HttpOutputMessage"
},
{
  "name":"org.springframework.http.HttpStatus"
},
{
  "name":"org.springframework.http.MediaType"
},
{
  "name":"org.springframework.http.ReactiveHttpInputMessage"
},
{
  "name":"org.springframework.http.ResponseEntity"
},
{
  "name":"org.springframework.http.client.ClientHttpRequest"
},
{
  "name":"org.springframework.http.client.ClientHttpRequestFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.client.ClientHttpRequestInitializer"
},
{
  "name":"org.springframework.http.client.ClientHttpRequestInterceptor"
},
{
  "name":"org.springframework.http.client.ClientHttpResponse"
},
{
  "name":"org.springframework.http.client.SimpleClientHttpRequestFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"createRequest","parameterTypes":["java.net.URI","org.springframework.http.HttpMethod"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.http.client.observation.ClientRequestObservationConvention"
},
{
  "name":"org.springframework.http.codec.CodecConfigurer"
},
{
  "name":"org.springframework.http.codec.multipart.DefaultPartHttpMessageReader"
},
{
  "name":"org.springframework.http.converter.AbstractGenericHttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"canWrite","parameterTypes":["java.lang.reflect.Type","java.lang.Class","org.springframework.http.MediaType"] }, {"name":"write","parameterTypes":["java.lang.Object","java.lang.reflect.Type","org.springframework.http.MediaType","org.springframework.http.HttpOutputMessage"] }]
},
{
  "name":"org.springframework.http.converter.AbstractHttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addDefaultHeaders","parameterTypes":["org.springframework.http.HttpHeaders","java.lang.Object","org.springframework.http.MediaType"] }, {"name":"canRead","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, {"name":"canWrite","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, {"name":"getContentLength","parameterTypes":["java.lang.Object","org.springframework.http.MediaType"] }, {"name":"getDefaultCharset","parameterTypes":[] }, {"name":"getSupportedMediaTypes","parameterTypes":[] }, {"name":"read","parameterTypes":["java.lang.Class","org.springframework.http.HttpInputMessage"] }, {"name":"setDefaultCharset","parameterTypes":["java.nio.charset.Charset"] }, {"name":"setSupportedMediaTypes","parameterTypes":["java.util.List"] }, {"name":"supportsRepeatableWrites","parameterTypes":["java.lang.Object"] }, {"name":"write","parameterTypes":["java.lang.Object","org.springframework.http.MediaType","org.springframework.http.HttpOutputMessage"] }, {"name":"writeInternal","parameterTypes":["java.lang.Object","org.springframework.http.HttpOutputMessage"] }]
},
{
  "name":"org.springframework.http.converter.FormHttpMessageConverter"
},
{
  "name":"org.springframework.http.converter.GenericHttpMessageConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.converter.HttpMessageConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getSupportedMediaTypes","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.http.converter.HttpMessageNotReadableException"
},
{
  "name":"org.springframework.http.converter.HttpMessageNotWritableException"
},
{
  "name":"org.springframework.http.converter.StringHttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"canRead","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, {"name":"canRead","parameterTypes":["java.lang.reflect.Type","java.lang.Class","org.springframework.http.MediaType"] }, {"name":"canWrite","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, {"name":"getObjectMapper","parameterTypes":[] }, {"name":"getObjectMappersForType","parameterTypes":["java.lang.Class"] }, {"name":"getSupportedMediaTypes","parameterTypes":["java.lang.Class"] }, {"name":"read","parameterTypes":["java.lang.reflect.Type","java.lang.Class","org.springframework.http.HttpInputMessage"] }, {"name":"registerObjectMappersForType","parameterTypes":["java.lang.Class","java.util.function.Consumer"] }, {"name":"setObjectMapper","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper"] }, {"name":"setPrettyPrint","parameterTypes":["boolean"] }, {"name":"setSupportedMediaTypes","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.springframework.http.converter.json.GsonHttpMessageConverter"
},
{
  "name":"org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"
},
{
  "name":"org.springframework.http.server.PathContainer"
},
{
  "name":"org.springframework.http.server.PathContainer$Options"
},
{
  "name":"org.springframework.http.server.RequestPath"
},
{
  "name":"org.springframework.http.server.observation.ServerRequestObservationContext"
},
{
  "name":"org.springframework.http.server.observation.ServerRequestObservationConvention"
},
{
  "name":"org.springframework.http.server.reactive.HttpHandler"
},
{
  "name":"org.springframework.instrument.InstrumentationSavingAgent"
},
{
  "name":"org.springframework.instrument.classloading.LoadTimeWeaver"
},
{
  "name":"org.springframework.integration.config.EnableIntegration"
},
{
  "name":"org.springframework.integration.graph.IntegrationGraphServer"
},
{
  "name":"org.springframework.jdbc.SQLWarningException"
},
{
  "name":"org.springframework.jdbc.core.BatchPreparedStatementSetter"
},
{
  "name":"org.springframework.jdbc.core.CallableStatementCallback"
},
{
  "name":"org.springframework.jdbc.core.CallableStatementCreator"
},
{
  "name":"org.springframework.jdbc.core.ConnectionCallback"
},
{
  "name":"org.springframework.jdbc.core.JdbcOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.jdbc.core.JdbcTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"batchUpdate","parameterTypes":["java.lang.String","java.util.Collection","int","org.springframework.jdbc.core.ParameterizedPreparedStatementSetter"] }, {"name":"batchUpdate","parameterTypes":["java.lang.String","java.util.List"] }, {"name":"batchUpdate","parameterTypes":["java.lang.String","java.util.List","int[]"] }, {"name":"batchUpdate","parameterTypes":["java.lang.String","org.springframework.jdbc.core.BatchPreparedStatementSetter"] }, {"name":"batchUpdate","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator","org.springframework.jdbc.core.BatchPreparedStatementSetter","org.springframework.jdbc.support.KeyHolder"] }, {"name":"batchUpdate","parameterTypes":["java.lang.String[]"] }, {"name":"call","parameterTypes":["org.springframework.jdbc.core.CallableStatementCreator","java.util.List"] }, {"name":"close","parameterTypes":[] }, {"name":"execute","parameterTypes":["java.lang.String"] }, {"name":"execute","parameterTypes":["java.lang.String","org.springframework.jdbc.core.CallableStatementCallback"] }, {"name":"execute","parameterTypes":["java.lang.String","org.springframework.jdbc.core.PreparedStatementCallback"] }, {"name":"execute","parameterTypes":["org.springframework.jdbc.core.CallableStatementCreator","org.springframework.jdbc.core.CallableStatementCallback"] }, {"name":"execute","parameterTypes":["org.springframework.jdbc.core.ConnectionCallback"] }, {"name":"execute","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator","org.springframework.jdbc.core.PreparedStatementCallback"] }, {"name":"execute","parameterTypes":["org.springframework.jdbc.core.StatementCallback"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.PreparedStatementSetter","org.springframework.jdbc.core.ResultSetExtractor"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.PreparedStatementSetter","org.springframework.jdbc.core.RowCallbackHandler"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.PreparedStatementSetter","org.springframework.jdbc.core.RowMapper"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.ResultSetExtractor"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.ResultSetExtractor","java.lang.Object[]"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowCallbackHandler"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowCallbackHandler","java.lang.Object[]"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowMapper"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowMapper","java.lang.Object[]"] }, {"name":"query","parameterTypes":["java.lang.String","java.lang.Object[]","org.springframework.jdbc.core.ResultSetExtractor"] }, {"name":"query","parameterTypes":["java.lang.String","java.lang.Object[]","org.springframework.jdbc.core.RowCallbackHandler"] }, {"name":"query","parameterTypes":["java.lang.String","java.lang.Object[]","org.springframework.jdbc.core.RowMapper"] }, {"name":"query","parameterTypes":["java.lang.String","java.lang.Object[]","int[]","org.springframework.jdbc.core.ResultSetExtractor"] }, {"name":"query","parameterTypes":["java.lang.String","java.lang.Object[]","int[]","org.springframework.jdbc.core.RowCallbackHandler"] }, {"name":"query","parameterTypes":["java.lang.String","java.lang.Object[]","int[]","org.springframework.jdbc.core.RowMapper"] }, {"name":"query","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator","org.springframework.jdbc.core.ResultSetExtractor"] }, {"name":"query","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator","org.springframework.jdbc.core.RowCallbackHandler"] }, {"name":"query","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator","org.springframework.jdbc.core.RowMapper"] }, {"name":"queryForList","parameterTypes":["java.lang.String"] }, {"name":"queryForList","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"queryForList","parameterTypes":["java.lang.String","java.lang.Class","java.lang.Object[]"] }, {"name":"queryForList","parameterTypes":["java.lang.String","java.lang.Object[]"] }, {"name":"queryForList","parameterTypes":["java.lang.String","java.lang.Object[]","java.lang.Class"] }, {"name":"queryForList","parameterTypes":["java.lang.String","java.lang.Object[]","int[]"] }, {"name":"queryForList","parameterTypes":["java.lang.String","java.lang.Object[]","int[]","java.lang.Class"] }, {"name":"queryForMap","parameterTypes":["java.lang.String"] }, {"name":"queryForMap","parameterTypes":["java.lang.String","java.lang.Object[]"] }, {"name":"queryForMap","parameterTypes":["java.lang.String","java.lang.Object[]","int[]"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","java.lang.Class","java.lang.Object[]"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowMapper"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowMapper","java.lang.Object[]"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","java.lang.Object[]","java.lang.Class"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","java.lang.Object[]","org.springframework.jdbc.core.RowMapper"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","java.lang.Object[]","int[]","java.lang.Class"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","java.lang.Object[]","int[]","org.springframework.jdbc.core.RowMapper"] }, {"name":"queryForRowSet","parameterTypes":["java.lang.String"] }, {"name":"queryForRowSet","parameterTypes":["java.lang.String","java.lang.Object[]"] }, {"name":"queryForRowSet","parameterTypes":["java.lang.String","java.lang.Object[]","int[]"] }, {"name":"queryForStream","parameterTypes":["java.lang.String","org.springframework.jdbc.core.PreparedStatementSetter","org.springframework.jdbc.core.RowMapper"] }, {"name":"queryForStream","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowMapper"] }, {"name":"queryForStream","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowMapper","java.lang.Object[]"] }, {"name":"queryForStream","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator","org.springframework.jdbc.core.RowMapper"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"update","parameterTypes":["java.lang.String"] }, {"name":"update","parameterTypes":["java.lang.String","org.springframework.jdbc.core.PreparedStatementSetter"] }, {"name":"update","parameterTypes":["java.lang.String","java.lang.Object[]"] }, {"name":"update","parameterTypes":["java.lang.String","java.lang.Object[]","int[]"] }, {"name":"update","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator"] }, {"name":"update","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator","org.springframework.jdbc.support.KeyHolder"] }]
},
{
  "name":"org.springframework.jdbc.core.ParameterizedPreparedStatementSetter"
},
{
  "name":"org.springframework.jdbc.core.PreparedStatementCallback"
},
{
  "name":"org.springframework.jdbc.core.PreparedStatementCreator"
},
{
  "name":"org.springframework.jdbc.core.PreparedStatementCreatorFactory"
},
{
  "name":"org.springframework.jdbc.core.PreparedStatementSetter"
},
{
  "name":"org.springframework.jdbc.core.ResultSetExtractor"
},
{
  "name":"org.springframework.jdbc.core.ResultSetSupportingSqlParameter"
},
{
  "name":"org.springframework.jdbc.core.RowCallbackHandler"
},
{
  "name":"org.springframework.jdbc.core.RowMapper"
},
{
  "name":"org.springframework.jdbc.core.StatementCallback"
},
{
  "name":"org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"batchUpdate","parameterTypes":["java.lang.String","java.util.Map[]"] }, {"name":"batchUpdate","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource[]"] }, {"name":"batchUpdate","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource[]","org.springframework.jdbc.support.KeyHolder"] }, {"name":"batchUpdate","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource[]","org.springframework.jdbc.support.KeyHolder","java.lang.String[]"] }, {"name":"close","parameterTypes":[] }, {"name":"execute","parameterTypes":["java.lang.String","java.util.Map","org.springframework.jdbc.core.PreparedStatementCallback"] }, {"name":"execute","parameterTypes":["java.lang.String","org.springframework.jdbc.core.PreparedStatementCallback"] }, {"name":"execute","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.core.PreparedStatementCallback"] }, {"name":"getJdbcOperations","parameterTypes":[] }, {"name":"query","parameterTypes":["java.lang.String","java.util.Map","org.springframework.jdbc.core.ResultSetExtractor"] }, {"name":"query","parameterTypes":["java.lang.String","java.util.Map","org.springframework.jdbc.core.RowCallbackHandler"] }, {"name":"query","parameterTypes":["java.lang.String","java.util.Map","org.springframework.jdbc.core.RowMapper"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.ResultSetExtractor"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowCallbackHandler"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowMapper"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.core.ResultSetExtractor"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.core.RowCallbackHandler"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.core.RowMapper"] }, {"name":"queryForList","parameterTypes":["java.lang.String","java.util.Map"] }, {"name":"queryForList","parameterTypes":["java.lang.String","java.util.Map","java.lang.Class"] }, {"name":"queryForList","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource"] }, {"name":"queryForList","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","java.lang.Class"] }, {"name":"queryForMap","parameterTypes":["java.lang.String","java.util.Map"] }, {"name":"queryForMap","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","java.util.Map","java.lang.Class"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","java.util.Map","org.springframework.jdbc.core.RowMapper"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","java.lang.Class"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.core.RowMapper"] }, {"name":"queryForRowSet","parameterTypes":["java.lang.String","java.util.Map"] }, {"name":"queryForRowSet","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource"] }, {"name":"queryForStream","parameterTypes":["java.lang.String","java.util.Map","org.springframework.jdbc.core.RowMapper"] }, {"name":"queryForStream","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.core.RowMapper"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"update","parameterTypes":["java.lang.String","java.util.Map"] }, {"name":"update","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource"] }, {"name":"update","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.support.KeyHolder"] }, {"name":"update","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.support.KeyHolder","java.lang.String[]"] }]
},
{
  "name":"org.springframework.jdbc.core.namedparam.ParsedSql"
},
{
  "name":"org.springframework.jdbc.core.namedparam.SqlParameterSource"
},
{
  "name":"org.springframework.jdbc.core.simple.DefaultJdbcClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"sql","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.jdbc.core.simple.JdbcClient",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.jdbc.core.simple.JdbcClient$StatementSpec"
},
{
  "name":"org.springframework.jdbc.datasource.DataSourceTransactionManager"
},
{
  "name":"org.springframework.jdbc.datasource.DelegatingDataSource"
},
{
  "name":"org.springframework.jdbc.datasource.SimpleDriverDataSource",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
},
{
  "name":"org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource"
},
{
  "name":"org.springframework.jdbc.support.JdbcAccessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getDataSource","parameterTypes":[] }, {"name":"getExceptionTranslator","parameterTypes":[] }, {"name":"isLazyInit","parameterTypes":[] }, {"name":"setDataSource","parameterTypes":["javax.sql.DataSource"] }, {"name":"setDatabaseProductName","parameterTypes":["java.lang.String"] }, {"name":"setExceptionTranslator","parameterTypes":["org.springframework.jdbc.support.SQLExceptionTranslator"] }, {"name":"setLazyInit","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.jdbc.support.JdbcUtils"
},
{
  "name":"org.springframework.jdbc.support.KeyHolder"
},
{
  "name":"org.springframework.jdbc.support.SQLExceptionTranslator"
},
{
  "name":"org.springframework.jdbc.support.rowset.SqlRowSet"
},
{
  "name":"org.springframework.jms.core.JmsTemplate"
},
{
  "name":"org.springframework.jmx.export.MBeanExporter"
},
{
  "name":"org.springframework.jndi.JndiObjectFactoryBean"
},
{
  "name":"org.springframework.kafka.annotation.EnableKafka",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.kafka.annotation.KafkaBootstrapConfiguration",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.annotation.KafkaListener",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.annotation.KafkaListenerConfigurationSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.annotation.PartitionOffset",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.kafka.annotation.TopicPartition",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.kafka.config.AbstractKafkaListenerContainerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createContainer","parameterTypes":["java.util.regex.Pattern"] }, {"name":"createContainer","parameterTypes":["java.lang.String[]"] }, {"name":"createContainer","parameterTypes":["org.springframework.kafka.support.TopicPartitionOffset[]"] }, {"name":"createListenerContainer","parameterTypes":["org.springframework.kafka.config.KafkaListenerEndpoint"] }, {"name":"getConsumerFactory","parameterTypes":[] }, {"name":"getContainerProperties","parameterTypes":[] }, {"name":"initializeContainer","parameterTypes":["org.springframework.kafka.listener.AbstractMessageListenerContainer","org.springframework.kafka.config.KafkaListenerEndpoint"] }, {"name":"isBatchListener","parameterTypes":[] }, {"name":"setAckDiscarded","parameterTypes":["java.lang.Boolean"] }, {"name":"setAfterRollbackProcessor","parameterTypes":["org.springframework.kafka.listener.AfterRollbackProcessor"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, {"name":"setAutoStartup","parameterTypes":["java.lang.Boolean"] }, {"name":"setBatchInterceptor","parameterTypes":["org.springframework.kafka.listener.BatchInterceptor"] }, {"name":"setBatchListener","parameterTypes":["java.lang.Boolean"] }, {"name":"setBatchMessageConverter","parameterTypes":["org.springframework.kafka.support.converter.BatchMessageConverter"] }, {"name":"setBatchToRecordAdapter","parameterTypes":["org.springframework.kafka.listener.adapter.BatchToRecordAdapter"] }, {"name":"setChangeConsumerThreadName","parameterTypes":["boolean"] }, {"name":"setCommonErrorHandler","parameterTypes":["org.springframework.kafka.listener.CommonErrorHandler"] }, {"name":"setConsumerFactory","parameterTypes":["org.springframework.kafka.core.ConsumerFactory"] }, {"name":"setContainerCustomizer","parameterTypes":["org.springframework.kafka.config.ContainerCustomizer"] }, {"name":"setCorrelationHeaderName","parameterTypes":["java.lang.String"] }, {"name":"setMissingTopicsFatal","parameterTypes":["boolean"] }, {"name":"setPhase","parameterTypes":["int"] }, {"name":"setRecordFilterStrategy","parameterTypes":["org.springframework.kafka.listener.adapter.RecordFilterStrategy"] }, {"name":"setRecordInterceptor","parameterTypes":["org.springframework.kafka.listener.RecordInterceptor"] }, {"name":"setRecordMessageConverter","parameterTypes":["org.springframework.kafka.support.converter.RecordMessageConverter"] }, {"name":"setReplyHeadersConfigurer","parameterTypes":["org.springframework.kafka.listener.adapter.ReplyHeadersConfigurer"] }, {"name":"setReplyTemplate","parameterTypes":["org.springframework.kafka.core.KafkaTemplate"] }, {"name":"setThreadNameSupplier","parameterTypes":["java.util.function.Function"] }]
},
{
  "name":"org.springframework.kafka.config.AbstractKafkaListenerEndpoint"
},
{
  "name":"org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.config.ContainerCustomizer"
},
{
  "name":"org.springframework.kafka.config.KafkaListenerContainerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createContainer","parameterTypes":["java.util.regex.Pattern"] }, {"name":"createContainer","parameterTypes":["org.springframework.kafka.support.TopicPartitionOffset[]"] }]
},
{
  "name":"org.springframework.kafka.config.KafkaListenerEndpoint"
},
{
  "name":"org.springframework.kafka.config.KafkaListenerEndpointRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }, {"name":"getAllListenerContainers","parameterTypes":[] }, {"name":"getListenerContainer","parameterTypes":["java.lang.String"] }, {"name":"getListenerContainerIds","parameterTypes":[] }, {"name":"getListenerContainers","parameterTypes":[] }, {"name":"getListenerContainersMatching","parameterTypes":["java.util.function.BiPredicate"] }, {"name":"getListenerContainersMatching","parameterTypes":["java.util.function.Predicate"] }, {"name":"getPhase","parameterTypes":[] }, {"name":"getUnregisteredListenerContainer","parameterTypes":["java.lang.String"] }, {"name":"isRunning","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"start","parameterTypes":[] }, {"name":"stop","parameterTypes":[] }, {"name":"stop","parameterTypes":["java.lang.Runnable"] }]
},
{
  "name":"org.springframework.kafka.config.StreamsBuilderFactoryBean"
},
{
  "name":"org.springframework.kafka.core.ConsumerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createConsumer","parameterTypes":[] }, {"name":"createConsumer","parameterTypes":["java.lang.String"] }, {"name":"createConsumer","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"createConsumer","parameterTypes":["java.lang.String","java.lang.String","java.lang.String"] }]
},
{
  "name":"org.springframework.kafka.core.ConsumerFactory$Listener"
},
{
  "name":"org.springframework.kafka.core.ConsumerPostProcessor"
},
{
  "name":"org.springframework.kafka.core.DefaultKafkaConsumerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addListener","parameterTypes":["int","org.springframework.kafka.core.ConsumerFactory$Listener"] }, {"name":"addListener","parameterTypes":["org.springframework.kafka.core.ConsumerFactory$Listener"] }, {"name":"addPostProcessor","parameterTypes":["org.springframework.kafka.core.ConsumerPostProcessor"] }, {"name":"close","parameterTypes":[] }, {"name":"createConsumer","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","java.util.Properties"] }, {"name":"getConfigurationProperties","parameterTypes":[] }, {"name":"getKeyDeserializer","parameterTypes":[] }, {"name":"getListeners","parameterTypes":[] }, {"name":"getPostProcessors","parameterTypes":[] }, {"name":"getValueDeserializer","parameterTypes":[] }, {"name":"isAutoCommit","parameterTypes":[] }, {"name":"removeConfig","parameterTypes":["java.lang.String"] }, {"name":"removeListener","parameterTypes":["org.springframework.kafka.core.ConsumerFactory$Listener"] }, {"name":"removePostProcessor","parameterTypes":["org.springframework.kafka.core.ConsumerPostProcessor"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"updateConfigs","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.springframework.kafka.core.DefaultKafkaProducerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addListener","parameterTypes":["int","org.springframework.kafka.core.ProducerFactory$Listener"] }, {"name":"addListener","parameterTypes":["org.springframework.kafka.core.ProducerFactory$Listener"] }, {"name":"addPostProcessor","parameterTypes":["org.springframework.kafka.core.ProducerPostProcessor"] }, {"name":"closeThreadBoundProducer","parameterTypes":[] }, {"name":"copyWithConfigurationOverride","parameterTypes":["java.util.Map"] }, {"name":"createNonTransactionalProducer","parameterTypes":[] }, {"name":"createProducer","parameterTypes":[] }, {"name":"createProducer","parameterTypes":["java.lang.String"] }, {"name":"destroy","parameterTypes":[] }, {"name":"getConfigurationProperties","parameterTypes":[] }, {"name":"getKeySerializer","parameterTypes":[] }, {"name":"getKeySerializerSupplier","parameterTypes":[] }, {"name":"getListeners","parameterTypes":[] }, {"name":"getPhase","parameterTypes":[] }, {"name":"getPhysicalCloseTimeout","parameterTypes":[] }, {"name":"getPostProcessors","parameterTypes":[] }, {"name":"getTransactionIdPrefix","parameterTypes":[] }, {"name":"getValueSerializer","parameterTypes":[] }, {"name":"getValueSerializerSupplier","parameterTypes":[] }, {"name":"isProducerPerThread","parameterTypes":[] }, {"name":"isRunning","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"removeConfig","parameterTypes":["java.lang.String"] }, {"name":"removeListener","parameterTypes":["org.springframework.kafka.core.ProducerFactory$Listener"] }, {"name":"removePostProcessor","parameterTypes":["org.springframework.kafka.core.ProducerPostProcessor"] }, {"name":"reset","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }, {"name":"start","parameterTypes":[] }, {"name":"stop","parameterTypes":[] }, {"name":"transactionCapable","parameterTypes":[] }, {"name":"updateConfigs","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer"
},
{
  "name":"org.springframework.kafka.core.KafkaAdmin",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"clusterId","parameterTypes":[] }, {"name":"createOrModifyTopics","parameterTypes":["org.apache.kafka.clients.admin.NewTopic[]"] }, {"name":"describeTopics","parameterTypes":["java.lang.String[]"] }, {"name":"getConfigurationProperties","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.core.KafkaAdmin$NewTopics"
},
{
  "name":"org.springframework.kafka.core.KafkaAdminOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.kafka.core.KafkaOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"receive","parameterTypes":["java.lang.String","int","long"] }, {"name":"receive","parameterTypes":["java.util.Collection"] }]
},
{
  "name":"org.springframework.kafka.core.KafkaOperations$OperationsCallback"
},
{
  "name":"org.springframework.kafka.core.KafkaOperations$ProducerCallback"
},
{
  "name":"org.springframework.kafka.core.KafkaResourceFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBootstrapServersSupplier","parameterTypes":["java.util.function.Supplier"] }]
},
{
  "name":"org.springframework.kafka.core.KafkaTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }, {"name":"execute","parameterTypes":["org.springframework.kafka.core.KafkaOperations$ProducerCallback"] }, {"name":"executeInTransaction","parameterTypes":["org.springframework.kafka.core.KafkaOperations$OperationsCallback"] }, {"name":"flush","parameterTypes":[] }, {"name":"getProducerFactory","parameterTypes":[] }, {"name":"inTransaction","parameterTypes":[] }, {"name":"isAllowNonTransactional","parameterTypes":[] }, {"name":"isTransactional","parameterTypes":[] }, {"name":"metrics","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"partitionsFor","parameterTypes":["java.lang.String"] }, {"name":"receive","parameterTypes":["java.lang.String","int","long","java.time.Duration"] }, {"name":"receive","parameterTypes":["java.util.Collection","java.time.Duration"] }, {"name":"send","parameterTypes":["java.lang.String","java.lang.Integer","java.lang.Long","java.lang.Object","java.lang.Object"] }, {"name":"send","parameterTypes":["java.lang.String","java.lang.Integer","java.lang.Object","java.lang.Object"] }, {"name":"send","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"send","parameterTypes":["java.lang.String","java.lang.Object","java.lang.Object"] }, {"name":"send","parameterTypes":["org.apache.kafka.clients.producer.ProducerRecord"] }, {"name":"send","parameterTypes":["org.springframework.messaging.Message"] }, {"name":"sendDefault","parameterTypes":["java.lang.Integer","java.lang.Long","java.lang.Object","java.lang.Object"] }, {"name":"sendDefault","parameterTypes":["java.lang.Integer","java.lang.Object","java.lang.Object"] }, {"name":"sendDefault","parameterTypes":["java.lang.Object"] }, {"name":"sendDefault","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"sendOffsetsToTransaction","parameterTypes":["java.util.Map","org.apache.kafka.clients.consumer.ConsumerGroupMetadata"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.kafka.core.ProducerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.kafka.core.ProducerFactory$Listener"
},
{
  "name":"org.springframework.kafka.core.ProducerPostProcessor"
},
{
  "name":"org.springframework.kafka.core.TransactionIdSuffixStrategy"
},
{
  "name":"org.springframework.kafka.listener.AbstractMessageListenerContainer"
},
{
  "name":"org.springframework.kafka.listener.AfterRollbackProcessor"
},
{
  "name":"org.springframework.kafka.listener.BatchInterceptor"
},
{
  "name":"org.springframework.kafka.listener.CommonErrorHandler"
},
{
  "name":"org.springframework.kafka.listener.ConcurrentMessageListenerContainer"
},
{
  "name":"org.springframework.kafka.listener.ConsumerAwareRebalanceListener"
},
{
  "name":"org.springframework.kafka.listener.ConsumerProperties",
  "methods":[{"name":"getAuthExceptionRetryInterval","parameterTypes":[] }, {"name":"getClientId","parameterTypes":[] }, {"name":"getCommitCallback","parameterTypes":[] }, {"name":"getCommitLogLevel","parameterTypes":[] }, {"name":"getCommitRetries","parameterTypes":[] }, {"name":"getConsumerRebalanceListener","parameterTypes":[] }, {"name":"getGroupId","parameterTypes":[] }, {"name":"getKafkaConsumerProperties","parameterTypes":[] }, {"name":"getOffsetAndMetadataProvider","parameterTypes":[] }, {"name":"getPollTimeout","parameterTypes":[] }, {"name":"getSyncCommitTimeout","parameterTypes":[] }, {"name":"isCheckDeserExWhenKeyNull","parameterTypes":[] }, {"name":"isCheckDeserExWhenValueNull","parameterTypes":[] }, {"name":"isFixTxOffsets","parameterTypes":[] }, {"name":"isSyncCommits","parameterTypes":[] }, {"name":"setAuthExceptionRetryInterval","parameterTypes":["java.time.Duration"] }, {"name":"setCheckDeserExWhenKeyNull","parameterTypes":["boolean"] }, {"name":"setCheckDeserExWhenValueNull","parameterTypes":["boolean"] }, {"name":"setClientId","parameterTypes":["java.lang.String"] }, {"name":"setCommitCallback","parameterTypes":["org.apache.kafka.clients.consumer.OffsetCommitCallback"] }, {"name":"setCommitLogLevel","parameterTypes":["org.springframework.kafka.support.LogIfLevelEnabled$Level"] }, {"name":"setCommitRetries","parameterTypes":["int"] }, {"name":"setConsumerRebalanceListener","parameterTypes":["org.apache.kafka.clients.consumer.ConsumerRebalanceListener"] }, {"name":"setFixTxOffsets","parameterTypes":["boolean"] }, {"name":"setGroupId","parameterTypes":["java.lang.String"] }, {"name":"setKafkaConsumerProperties","parameterTypes":["java.util.Properties"] }, {"name":"setOffsetAndMetadataProvider","parameterTypes":["org.springframework.kafka.listener.OffsetAndMetadataProvider"] }, {"name":"setPollTimeout","parameterTypes":["long"] }, {"name":"setSyncCommits","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.kafka.listener.ContainerProperties",
  "queryAllPublicMethods":true,
  "fields":[{"name":"isSubBatchPerPartition"}, {"name":"toString"}],
  "methods":[{"name":"getAckMode","parameterTypes":[] }, {"name":"getAdviceChain","parameterTypes":[] }, {"name":"getAssignmentCommitOption","parameterTypes":[] }, {"name":"getConsumerStartTimeout","parameterTypes":[] }, {"name":"getEosMode","parameterTypes":[] }, {"name":"getIdleBeforeDataMultiplier","parameterTypes":[] }, {"name":"getIdleBetweenPolls","parameterTypes":[] }, {"name":"getIdleEventInterval","parameterTypes":[] }, {"name":"getIdlePartitionEventInterval","parameterTypes":[] }, {"name":"getKafkaAwareTransactionManager","parameterTypes":[] }, {"name":"getListenerTaskExecutor","parameterTypes":[] }, {"name":"getMessageListener","parameterTypes":[] }, {"name":"getMicrometerTags","parameterTypes":[] }, {"name":"getMicrometerTagsProvider","parameterTypes":[] }, {"name":"getMonitorInterval","parameterTypes":[] }, {"name":"getNoPollThreshold","parameterTypes":[] }, {"name":"getObservationConvention","parameterTypes":[] }, {"name":"getPollTimeoutWhilePaused","parameterTypes":[] }, {"name":"getScheduler","parameterTypes":[] }, {"name":"getShutdownTimeout","parameterTypes":[] }, {"name":"getTransactionDefinition","parameterTypes":[] }, {"name":"getTransactionManager","parameterTypes":[] }, {"name":"isAsyncAcks","parameterTypes":[] }, {"name":"isBatchRecoverAfterRollback","parameterTypes":[] }, {"name":"isDeliveryAttemptHeader","parameterTypes":[] }, {"name":"isLogContainerConfig","parameterTypes":[] }, {"name":"isMicrometerEnabled","parameterTypes":[] }, {"name":"isMissingTopicsFatal","parameterTypes":[] }, {"name":"isObservationEnabled","parameterTypes":[] }, {"name":"isPauseImmediate","parameterTypes":[] }, {"name":"isRestartAfterAuthExceptions","parameterTypes":[] }, {"name":"isStopContainerWhenFenced","parameterTypes":[] }, {"name":"isStopImmediate","parameterTypes":[] }, {"name":"setAckMode","parameterTypes":["org.springframework.kafka.listener.ContainerProperties$AckMode"] }, {"name":"setAdviceChain","parameterTypes":["org.aopalliance.aop.Advice[]"] }, {"name":"setAssignmentCommitOption","parameterTypes":["org.springframework.kafka.listener.ContainerProperties$AssignmentCommitOption"] }, {"name":"setAsyncAcks","parameterTypes":["boolean"] }, {"name":"setBatchRecoverAfterRollback","parameterTypes":["boolean"] }, {"name":"setConsumerStartTimeout","parameterTypes":["java.time.Duration"] }, {"name":"setDeliveryAttemptHeader","parameterTypes":["boolean"] }, {"name":"setEosMode","parameterTypes":["org.springframework.kafka.listener.ContainerProperties$EOSMode"] }, {"name":"setIdleBeforeDataMultiplier","parameterTypes":["double"] }, {"name":"setIdleBetweenPolls","parameterTypes":["long"] }, {"name":"setIdleEventInterval","parameterTypes":["java.lang.Long"] }, {"name":"setIdlePartitionEventInterval","parameterTypes":["java.lang.Long"] }, {"name":"setKafkaAwareTransactionManager","parameterTypes":["org.springframework.kafka.transaction.KafkaAwareTransactionManager"] }, {"name":"setListenerTaskExecutor","parameterTypes":["org.springframework.core.task.AsyncTaskExecutor"] }, {"name":"setLogContainerConfig","parameterTypes":["boolean"] }, {"name":"setMessageListener","parameterTypes":["java.lang.Object"] }, {"name":"setMicrometerEnabled","parameterTypes":["boolean"] }, {"name":"setMicrometerTags","parameterTypes":["java.util.Map"] }, {"name":"setMicrometerTagsProvider","parameterTypes":["java.util.function.Function"] }, {"name":"setMissingTopicsFatal","parameterTypes":["boolean"] }, {"name":"setMonitorInterval","parameterTypes":["int"] }, {"name":"setNoPollThreshold","parameterTypes":["float"] }, {"name":"setObservationConvention","parameterTypes":["org.springframework.kafka.support.micrometer.KafkaListenerObservationConvention"] }, {"name":"setObservationEnabled","parameterTypes":["boolean"] }, {"name":"setPauseImmediate","parameterTypes":["boolean"] }, {"name":"setPollTimeoutWhilePaused","parameterTypes":["java.time.Duration"] }, {"name":"setRestartAfterAuthExceptions","parameterTypes":["boolean"] }, {"name":"setScheduler","parameterTypes":["org.springframework.scheduling.TaskScheduler"] }, {"name":"setShutdownTimeout","parameterTypes":["long"] }, {"name":"setStopContainerWhenFenced","parameterTypes":["boolean"] }, {"name":"setStopImmediate","parameterTypes":["boolean"] }, {"name":"setSyncCommitTimeout","parameterTypes":["java.time.Duration"] }, {"name":"setTransactionDefinition","parameterTypes":["org.springframework.transaction.TransactionDefinition"] }, {"name":"setTransactionManager","parameterTypes":["org.springframework.transaction.PlatformTransactionManager"] }]
},
{
  "name":"org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer"
},
{
  "name":"org.springframework.kafka.listener.ListenerContainerRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.kafka.listener.MessageListenerContainer"
},
{
  "name":"org.springframework.kafka.listener.RecordInterceptor"
},
{
  "name":"org.springframework.kafka.listener.adapter.BatchToRecordAdapter"
},
{
  "name":"org.springframework.kafka.listener.adapter.RecordFilterStrategy"
},
{
  "name":"org.springframework.kafka.listener.adapter.ReplyHeadersConfigurer"
},
{
  "name":"org.springframework.kafka.retrytopic.RetryTopicConfiguration"
},
{
  "name":"org.springframework.kafka.retrytopic.RetryTopicConfigurationBuilder"
},
{
  "name":"org.springframework.kafka.security.jaas.KafkaJaasLoginModuleInitializer"
},
{
  "name":"org.springframework.kafka.support.LoggingProducerListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"onError","parameterTypes":["org.apache.kafka.clients.producer.ProducerRecord","org.apache.kafka.clients.producer.RecordMetadata","java.lang.Exception"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.support.ProducerListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"onSuccess","parameterTypes":["org.apache.kafka.clients.producer.ProducerRecord","org.apache.kafka.clients.producer.RecordMetadata"] }]
},
{
  "name":"org.springframework.kafka.support.TopicPartitionOffset"
},
{
  "name":"org.springframework.kafka.support.converter.BatchMessageConverter"
},
{
  "name":"org.springframework.kafka.support.converter.RecordMessageConverter"
},
{
  "name":"org.springframework.kafka.support.micrometer.KafkaRecordSenderContext"
},
{
  "name":"org.springframework.kafka.support.micrometer.KafkaTemplateObservationConvention"
},
{
  "name":"org.springframework.kafka.support.micrometer.MicrometerHolder"
},
{
  "name":"org.springframework.kafka.support.serializer.JsonDeserializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.support.serializer.JsonSerializer"
},
{
  "name":"org.springframework.kafka.transaction.KafkaAwareTransactionManager"
},
{
  "name":"org.springframework.kafka.transaction.KafkaTransactionManager"
},
{
  "name":"org.springframework.lang.NonNull"
},
{
  "name":"org.springframework.lang.NonNullApi",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.lang.Nullable",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.ldap.core.ContextSource"
},
{
  "name":"org.springframework.ldap.core.LdapOperations"
},
{
  "name":"org.springframework.mail.javamail.JavaMailSenderImpl"
},
{
  "name":"org.springframework.messaging.Message"
},
{
  "name":"org.springframework.messaging.converter.SmartMessageConverter"
},
{
  "name":"org.springframework.messaging.handler.annotation.MessageMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.orm.jpa.AbstractEntityManagerFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createNativeEntityManager","parameterTypes":["java.util.Map"] }, {"name":"destroy","parameterTypes":[] }, {"name":"getBeanClassLoader","parameterTypes":[] }, {"name":"getBootstrapExecutor","parameterTypes":[] }, {"name":"getEntityManagerInterface","parameterTypes":[] }, {"name":"getJpaDialect","parameterTypes":[] }, {"name":"getJpaPropertyMap","parameterTypes":[] }, {"name":"getJpaVendorAdapter","parameterTypes":[] }, {"name":"getNativeEntityManagerFactory","parameterTypes":[] }, {"name":"getObject","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"getPersistenceProvider","parameterTypes":[] }, {"name":"isSingleton","parameterTypes":[] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }, {"name":"setBootstrapExecutor","parameterTypes":["org.springframework.core.task.AsyncTaskExecutor"] }, {"name":"setEntityManagerFactoryInterface","parameterTypes":["java.lang.Class"] }, {"name":"setEntityManagerInitializer","parameterTypes":["java.util.function.Consumer"] }, {"name":"setEntityManagerInterface","parameterTypes":["java.lang.Class"] }, {"name":"setJpaDialect","parameterTypes":["org.springframework.orm.jpa.JpaDialect"] }, {"name":"setJpaProperties","parameterTypes":["java.util.Properties"] }, {"name":"setJpaPropertyMap","parameterTypes":["java.util.Map"] }, {"name":"setJpaVendorAdapter","parameterTypes":["org.springframework.orm.jpa.JpaVendorAdapter"] }, {"name":"setPersistenceProvider","parameterTypes":["jakarta.persistence.spi.PersistenceProvider"] }, {"name":"setPersistenceProviderClass","parameterTypes":["java.lang.Class"] }, {"name":"translateExceptionIfPossible","parameterTypes":["java.lang.RuntimeException"] }]
},
{
  "name":"org.springframework.orm.jpa.EntityManagerFactoryInfo",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createNativeEntityManager","parameterTypes":["java.util.Map"] }, {"name":"getBeanClassLoader","parameterTypes":[] }, {"name":"getDataSource","parameterTypes":[] }, {"name":"getEntityManagerInterface","parameterTypes":[] }, {"name":"getJpaDialect","parameterTypes":[] }]
},
{
  "name":"org.springframework.orm.jpa.EntityManagerProxy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.orm.jpa.JpaDialect"
},
{
  "name":"org.springframework.orm.jpa.JpaTransactionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"getResourceFactory","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.orm.jpa.JpaTransactionManager$JpaTransactionObject"
},
{
  "name":"org.springframework.orm.jpa.JpaVendorAdapter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getDataSource","parameterTypes":[] }, {"name":"getPersistenceUnitInfo","parameterTypes":[] }, {"name":"getPersistenceUnitName","parameterTypes":[] }, {"name":"setLoadTimeWeaver","parameterTypes":["org.springframework.instrument.classloading.LoadTimeWeaver"] }, {"name":"setPersistenceUnitName","parameterTypes":["java.lang.String"] }, {"name":"setResourceLoader","parameterTypes":["org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.orm.jpa.SharedEntityManagerCreator",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createSharedEntityManager","parameterTypes":["jakarta.persistence.EntityManagerFactory"] }]
},
{
  "name":"org.springframework.orm.jpa.persistenceunit.ManagedClassNameFilter"
},
{
  "name":"org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager"
},
{
  "name":"org.springframework.orm.jpa.persistenceunit.PersistenceUnitPostProcessor"
},
{
  "name":"org.springframework.orm.jpa.persistenceunit.SimplePersistenceManagedTypes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getManagedClassNames","parameterTypes":[] }, {"name":"getManagedPackages","parameterTypes":[] }, {"name":"getPersistenceUnitRootUrl","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessEntityManager","parameterTypes":["jakarta.persistence.EntityManager"] }, {"name":"postProcessEntityManagerFactory","parameterTypes":["jakarta.persistence.EntityManagerFactory"] }, {"name":"setDatabase","parameterTypes":["org.springframework.orm.jpa.vendor.Database"] }, {"name":"setDatabasePlatform","parameterTypes":["java.lang.String"] }, {"name":"setGenerateDdl","parameterTypes":["boolean"] }, {"name":"setShowSql","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.orm.jpa.vendor.Database"
},
{
  "name":"org.springframework.orm.jpa.vendor.HibernateJpaDialect"
},
{
  "name":"org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getEntityManagerFactoryInterface","parameterTypes":[] }, {"name":"getEntityManagerInterface","parameterTypes":[] }, {"name":"getJpaDialect","parameterTypes":[] }, {"name":"getJpaPropertyMap","parameterTypes":[] }, {"name":"getJpaPropertyMap","parameterTypes":["jakarta.persistence.spi.PersistenceUnitInfo"] }, {"name":"getPersistenceProvider","parameterTypes":[] }, {"name":"getPersistenceProviderRootPackage","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.oxm.Marshaller"
},
{
  "name":"org.springframework.r2dbc.connection.R2dbcTransactionManager"
},
{
  "name":"org.springframework.scheduling.SchedulingTaskExecutor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"prefersShortLivedTasks","parameterTypes":[] }]
},
{
  "name":"org.springframework.scheduling.TaskScheduler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"schedule","parameterTypes":["java.lang.Runnable","java.util.Date"] }, {"name":"scheduleAtFixedRate","parameterTypes":["java.lang.Runnable","long"] }, {"name":"scheduleAtFixedRate","parameterTypes":["java.lang.Runnable","java.util.Date","long"] }, {"name":"scheduleWithFixedDelay","parameterTypes":["java.lang.Runnable","long"] }, {"name":"scheduleWithFixedDelay","parameterTypes":["java.lang.Runnable","java.util.Date","long"] }]
},
{
  "name":"org.springframework.scheduling.Trigger"
},
{
  "name":"org.springframework.scheduling.annotation.AbstractAsyncConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setConfigurers","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, {"name":"setImportMetadata","parameterTypes":["org.springframework.core.type.AnnotationMetadata"] }]
},
{
  "name":"org.springframework.scheduling.annotation.Async",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.scheduling.annotation.AsyncConfigurationSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.scheduling.annotation.EnableAsync",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.scheduling.annotation.EnableScheduling",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.scheduling.annotation.ProxyAsyncConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"asyncAdvisor","parameterTypes":[] }]
},
{
  "name":"org.springframework.scheduling.annotation.Scheduled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.scheduling.annotation.Schedules",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.scheduling.annotation.SchedulingConfiguration",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"scheduledAnnotationProcessor","parameterTypes":[] }]
},
{
  "name":"org.springframework.scheduling.annotation.SchedulingConfigurer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.scheduling.concurrent.CustomizableThreadFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newThread","parameterTypes":["java.lang.Runnable"] }]
},
{
  "name":"org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }, {"name":"getPhase","parameterTypes":[] }, {"name":"initialize","parameterTypes":[] }, {"name":"initiateShutdown","parameterTypes":[] }, {"name":"isRunning","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.event.ContextClosedEvent"] }, {"name":"setAcceptTasksAfterContextClose","parameterTypes":["boolean"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setAwaitTerminationMillis","parameterTypes":["long"] }, {"name":"setAwaitTerminationSeconds","parameterTypes":["int"] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }, {"name":"setPhase","parameterTypes":["int"] }, {"name":"setRejectedExecutionHandler","parameterTypes":["java.util.concurrent.RejectedExecutionHandler"] }, {"name":"setThreadFactory","parameterTypes":["java.util.concurrent.ThreadFactory"] }, {"name":"setThreadNamePrefix","parameterTypes":["java.lang.String"] }, {"name":"setWaitForTasksToCompleteOnShutdown","parameterTypes":["boolean"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"start","parameterTypes":[] }, {"name":"stop","parameterTypes":[] }, {"name":"stop","parameterTypes":["java.lang.Runnable"] }]
},
{
  "name":"org.springframework.scheduling.concurrent.SimpleAsyncTaskScheduler"
},
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
},
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"execute","parameterTypes":["java.lang.Runnable"] }, {"name":"getClock","parameterTypes":[] }, {"name":"schedule","parameterTypes":["java.lang.Runnable","java.time.Instant"] }, {"name":"schedule","parameterTypes":["java.lang.Runnable","org.springframework.scheduling.Trigger"] }, {"name":"scheduleAtFixedRate","parameterTypes":["java.lang.Runnable","java.time.Duration"] }, {"name":"scheduleAtFixedRate","parameterTypes":["java.lang.Runnable","java.time.Instant","java.time.Duration"] }, {"name":"scheduleWithFixedDelay","parameterTypes":["java.lang.Runnable","java.time.Duration"] }, {"name":"scheduleWithFixedDelay","parameterTypes":["java.lang.Runnable","java.time.Instant","java.time.Duration"] }, {"name":"submit","parameterTypes":["java.lang.Runnable"] }, {"name":"submit","parameterTypes":["java.util.concurrent.Callable"] }, {"name":"submitListenable","parameterTypes":["java.lang.Runnable"] }, {"name":"submitListenable","parameterTypes":["java.util.concurrent.Callable"] }]
},
{
  "name":"org.springframework.scheduling.config.CronTask"
},
{
  "name":"org.springframework.scheduling.config.DelayedTask"
},
{
  "name":"org.springframework.scheduling.config.FixedDelayTask"
},
{
  "name":"org.springframework.scheduling.config.FixedRateTask"
},
{
  "name":"org.springframework.scheduling.config.IntervalTask"
},
{
  "name":"org.springframework.scheduling.config.OneTimeTask"
},
{
  "name":"org.springframework.scheduling.config.ScheduledTask"
},
{
  "name":"org.springframework.scheduling.config.ScheduledTaskHolder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.scheduling.config.ScheduledTaskRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }, {"name":"getScheduledTasks","parameterTypes":[] }]
},
{
  "name":"org.springframework.scheduling.config.TriggerTask"
},
{
  "name":"org.springframework.scheduling.support.DelegatingErrorHandlingRunnable"
},
{
  "name":"org.springframework.scheduling.support.ScheduledMethodRunnable"
},
{
  "name":"org.springframework.security.access.AccessDeniedException"
},
{
  "name":"org.springframework.security.access.expression.AbstractSecurityExpressionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createEvaluationContext","parameterTypes":["org.springframework.security.core.Authentication","java.lang.Object"] }, {"name":"createSecurityExpressionRoot","parameterTypes":["org.springframework.security.core.Authentication","java.lang.Object"] }, {"name":"getExpressionParser","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setPermissionEvaluator","parameterTypes":["org.springframework.security.access.PermissionEvaluator"] }, {"name":"setRoleHierarchy","parameterTypes":["org.springframework.security.access.hierarchicalroles.RoleHierarchy"] }]
},
{
  "name":"org.springframework.security.access.expression.SecurityExpressionHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createEvaluationContext","parameterTypes":["java.util.function.Supplier","java.lang.Object"] }]
},
{
  "name":"org.springframework.security.access.prepost.PreAuthorize",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.authentication.AnonymousAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"authenticate","parameterTypes":["org.springframework.security.core.Authentication"] }, {"name":"setMessageSource","parameterTypes":["org.springframework.context.MessageSource"] }, {"name":"supports","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.security.authentication.AuthenticationDetailsSource"
},
{
  "name":"org.springframework.security.authentication.AuthenticationEventPublisher",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.authentication.AuthenticationManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.authentication.AuthenticationManagerResolver"
},
{
  "name":"org.springframework.security.authentication.AuthenticationProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.authentication.AuthenticationTrustResolver"
},
{
  "name":"org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"publishAuthenticationFailure","parameterTypes":["org.springframework.security.core.AuthenticationException","org.springframework.security.core.Authentication"] }, {"name":"publishAuthenticationSuccess","parameterTypes":["org.springframework.security.core.Authentication"] }, {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.authentication.ProviderManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"authenticate","parameterTypes":["org.springframework.security.core.Authentication"] }, {"name":"setMessageSource","parameterTypes":["org.springframework.context.MessageSource"] }]
},
{
  "name":"org.springframework.security.authentication.ReactiveAuthenticationManager"
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureLockedEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authorization.AuthorizationDecision"
},
{
  "name":"org.springframework.security.authorization.AuthorizationEventPublisher"
},
{
  "name":"org.springframework.security.authorization.AuthorizationManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"verify","parameterTypes":["java.util.function.Supplier","java.lang.Object"] }]
},
{
  "name":"org.springframework.security.authorization.AuthorizationProxyFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.authorization.method.AuthorizationAdvisor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.authorization.method.AuthorizeReturnObjectMethodInterceptor"] }, {"name":"<init>","parameterTypes":["org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor"] }, {"name":"from","parameterTypes":["org.springframework.security.authorization.method.AuthorizeReturnObjectMethodInterceptor"] }, {"name":"from","parameterTypes":["org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor"] }, {"name":"of","parameterTypes":["org.springframework.security.authorization.method.AuthorizeReturnObjectMethodInterceptor"] }, {"name":"of","parameterTypes":["org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor"] }, {"name":"valueOf","parameterTypes":["org.springframework.security.authorization.method.AuthorizeReturnObjectMethodInterceptor"] }, {"name":"valueOf","parameterTypes":["org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor"] }]
},
{
  "name":"org.springframework.security.authorization.method.AuthorizationAdvisorProxyFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"iterator","parameterTypes":[] }, {"name":"proxy","parameterTypes":["java.lang.Object"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.authorization.method.AuthorizationAdvisorProxyFactory$TargetVisitor"
},
{
  "name":"org.springframework.security.authorization.method.AuthorizeReturnObjectMethodInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getAdvice","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"getPointcut","parameterTypes":[] }, {"name":"invoke","parameterTypes":["org.aopalliance.intercept.MethodInvocation"] }, {"name":"isPerInstance","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"toAuthorizationAdvisor","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.Customizer"
},
{
  "name":"org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"apply","parameterTypes":["org.springframework.security.config.annotation.SecurityConfigurer"] }, {"name":"apply","parameterTypes":["org.springframework.security.config.annotation.SecurityConfigurerAdapter"] }, {"name":"getConfigurer","parameterTypes":["java.lang.Class"] }, {"name":"getConfigurers","parameterTypes":["java.lang.Class"] }, {"name":"getOrBuild","parameterTypes":[] }, {"name":"getSharedObject","parameterTypes":["java.lang.Class"] }, {"name":"getSharedObjects","parameterTypes":[] }, {"name":"objectPostProcessor","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor"] }, {"name":"removeConfigurer","parameterTypes":["java.lang.Class"] }, {"name":"removeConfigurers","parameterTypes":["java.lang.Class"] }, {"name":"setSharedObject","parameterTypes":["java.lang.Class","java.lang.Object"] }, {"name":"with","parameterTypes":["org.springframework.security.config.annotation.SecurityConfigurerAdapter","org.springframework.security.config.Customizer"] }]
},
{
  "name":"org.springframework.security.config.annotation.AbstractSecurityBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"build","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.ObjectPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.config.annotation.SecurityBuilder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.config.annotation.SecurityConfigurer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }]
},
{
  "name":"org.springframework.security.config.annotation.SecurityConfigurerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addObjectPostProcessor","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor"] }, {"name":"and","parameterTypes":[] }, {"name":"configure","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, {"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, {"name":"setBuilder","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }]
},
{
  "name":"org.springframework.security.config.annotation.authentication.ProviderManagerBuilder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"authenticationEventPublisher","parameterTypes":["org.springframework.security.authentication.AuthenticationEventPublisher"] }, {"name":"authenticationProvider","parameterTypes":["org.springframework.security.authentication.AuthenticationProvider"] }, {"name":"eraseCredentials","parameterTypes":["boolean"] }, {"name":"getDefaultUserDetailsService","parameterTypes":[] }, {"name":"isConfigured","parameterTypes":[] }, {"name":"ldapAuthentication","parameterTypes":[] }, {"name":"parentAuthenticationManager","parameterTypes":["org.springframework.security.authentication.AuthenticationManager"] }]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"authenticationManagerBuilder","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor","org.springframework.context.ApplicationContext"] }, {"name":"enableGlobalAuthenticationAutowiredConfigurer","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"initializeAuthenticationProviderBeanManagerConfigurer","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"initializeUserDetailsBeanManagerConfigurer","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setGlobalAuthenticationConfigurers","parameterTypes":["java.util.List"] }, {"name":"setObjectPostProcessor","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor"] }]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$DefaultPasswordEncoderAuthenticationManagerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"inMemoryAuthentication","parameterTypes":[] }, {"name":"jdbcAuthentication","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"userDetailsService","parameterTypes":["org.springframework.security.core.userdetails.UserDetailsService"] }]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, {"name":"init","parameterTypes":["org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.EnableGlobalAuthentication",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"configure","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, {"name":"configure","parameterTypes":["org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"] }, {"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, {"name":"init","parameterTypes":["org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, {"name":"init","parameterTypes":["org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configurers.ldap.LdapAuthenticationProviderConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.authentication.configurers.provisioning.InMemoryUserDetailsManagerConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.authentication.configurers.provisioning.JdbcUserDetailsManagerConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.authentication.configurers.userdetails.UserDetailsAwareConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }, {"name":"postProcess","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"objectPostProcessor","parameterTypes":["org.springframework.beans.factory.config.AutowireCapableBeanFactory"] }]
},
{
  "name":"org.springframework.security.config.annotation.method.configuration.AuthorizationProxyConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"authorizationProxyFactory","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, {"name":"authorizeReturnObjectMethodInterceptor","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.security.authorization.method.AuthorizationAdvisorProxyFactory"] }]
},
{
  "name":"org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getAdvice","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"getPointcut","parameterTypes":[] }, {"name":"invoke","parameterTypes":["org.aopalliance.intercept.MethodInvocation"] }, {"name":"isPerInstance","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"toAuthorizationAdvisor","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.config.annotation.method.configuration.MethodSecurityAdvisorRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.method.configuration.MethodSecurityAdvisorRegistrar$AdvisorWrapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getAdvice","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"getPointcut","parameterTypes":[] }, {"name":"invoke","parameterTypes":["org.aopalliance.intercept.MethodInvocation"] }, {"name":"of","parameterTypes":["org.springframework.security.authorization.method.AuthorizationAdvisor"] }]
},
{
  "name":"org.springframework.security.config.annotation.method.configuration.MethodSecuritySelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.method.configuration.PrePostMethodSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"postAuthorizeAuthorizationMethodInterceptor","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, {"name":"postFilterAuthorizationMethodInterceptor","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, {"name":"preAuthorizeAuthorizationMethodInterceptor","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, {"name":"preFilterAuthorizationMethodInterceptor","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setImportMetadata","parameterTypes":["org.springframework.core.type.AnnotationMetadata"] }, {"name":"setObservationRegistry","parameterTypes":["io.micrometer.observation.ObservationRegistry"] }]
},
{
  "name":"org.springframework.security.config.annotation.web.HttpSecurityBuilder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.config.annotation.web.WebSecurityConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.builders.HttpSecurity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addFilter","parameterTypes":["jakarta.servlet.Filter"] }, {"name":"addFilterAfter","parameterTypes":["jakarta.servlet.Filter","java.lang.Class"] }, {"name":"addFilterBefore","parameterTypes":["jakarta.servlet.Filter","java.lang.Class"] }, {"name":"authenticationProvider","parameterTypes":["org.springframework.security.authentication.AuthenticationProvider"] }, {"name":"setSharedObject","parameterTypes":["java.lang.Class","java.lang.Object"] }, {"name":"userDetailsService","parameterTypes":["org.springframework.security.core.userdetails.UserDetailsService"] }]
},
{
  "name":"org.springframework.security.config.annotation.web.builders.HttpSecurity$RequestMatcherConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.builders.WebSecurity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }]
},
{
  "name":"org.springframework.security.config.annotation.web.builders.WebSecurity$IgnoredRequestConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.EnableWebSecurity",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"httpSecurity","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setAuthenticationConfiguration","parameterTypes":["org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"] }, {"name":"setContentNegotiationStrategy","parameterTypes":["org.springframework.web.accept.ContentNegotiationStrategy"] }, {"name":"setObjectPostProcessor","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor"] }]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.OAuth2ImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.SpringWebMvcImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"addArgumentResolvers","parameterTypes":["java.util.List"] }, {"name":"requestDataValueProcessor","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"springSecurityHandlerMappingIntrospectorBeanDefinitionRegistryPostProcessor","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$1",
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.util.List"] }, {"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }, {"name":"getFilterChains","parameterTypes":[] }, {"name":"getFilters","parameterTypes":["java.lang.String"] }, {"name":"setFilterChainDecorator","parameterTypes":["org.springframework.security.web.FilterChainProxy$FilterChainDecorator"] }, {"name":"setFilterChainValidator","parameterTypes":["org.springframework.security.web.FilterChainProxy$FilterChainValidator"] }, {"name":"setFirewall","parameterTypes":["org.springframework.security.web.firewall.HttpFirewall"] }, {"name":"setRequestRejectedHandler","parameterTypes":["org.springframework.security.web.firewall.RequestRejectedHandler"] }, {"name":"setSecurityContextHolderStrategy","parameterTypes":["org.springframework.security.core.context.SecurityContextHolderStrategy"] }]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$HandlerMappingIntrospectorCacheFilterFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getObject","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"conversionServicePostProcessor","parameterTypes":[] }, {"name":"delegatingApplicationListener","parameterTypes":[] }, {"name":"privilegeEvaluator","parameterTypes":[] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setFilterChainProxySecurityConfigurer","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor","org.springframework.beans.factory.config.ConfigurableListableBeanFactory"] }, {"name":"setFilterChains","parameterTypes":["java.util.List"] }, {"name":"setImportMetadata","parameterTypes":["org.springframework.core.type.AnnotationMetadata"] }, {"name":"springSecurityFilterChain","parameterTypes":[] }, {"name":"webSecurityExpressionHandler","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"configure","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, {"name":"disable","parameterTypes":[] }, {"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, {"name":"withObjectPostProcessor","parameterTypes":["org.springframework.security.config.annotation.ObjectPostProcessor"] }]
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.AnonymousConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer$ChannelRequestMatcherRegistry"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.CorsConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.CsrfConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.ExceptionHandlingConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.HeadersConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$ContentSecurityPolicyConfig"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.HttpBasicConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.JeeConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.LogoutConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.PortMapperConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.RememberMeConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.SecurityContextConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.ServletApiConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.X509Configurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2ClientConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2LoginConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.oauth2.client.OidcLogoutConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.OAuth2ResourceServerConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"configure","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }, {"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }]
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.OAuth2ResourceServerConfigurer$JwtConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.OAuth2ResourceServerConfigurer$OpaqueTokenConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.saml2.Saml2LoginConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.saml2.Saml2LogoutConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.configurers.saml2.Saml2MetadataConfigurer"
},
{
  "name":"org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"
},
{
  "name":"org.springframework.security.config.crypto.RsaKeyConversionServicePostProcessor",
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.http.SessionCreationPolicy"
},
{
  "name":"org.springframework.security.context.DelegatingApplicationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.core.Authentication"
},
{
  "name":"org.springframework.security.core.AuthenticationException"
},
{
  "name":"org.springframework.security.core.context.SecurityContextHolderStrategy"
},
{
  "name":"org.springframework.security.core.userdetails.UserDetailsService"
},
{
  "name":"org.springframework.security.data.repository.query.SecurityEvaluationContextExtension"
},
{
  "name":"org.springframework.security.oauth2.client.registration.ClientRegistration"
},
{
  "name":"org.springframework.security.oauth2.client.registration.ClientRegistrationRepository"
},
{
  "name":"org.springframework.security.oauth2.core.OAuth2Token"
},
{
  "name":"org.springframework.security.oauth2.core.OAuth2TokenValidator"
},
{
  "name":"org.springframework.security.oauth2.jwt.Jwt"
},
{
  "name":"org.springframework.security.oauth2.jwt.JwtDecoder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.oauth2.jwt.JwtException"
},
{
  "name":"org.springframework.security.oauth2.jwt.NimbusJwtDecoder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"decode","parameterTypes":["java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.oauth2.jwt.NimbusJwtDecoder$JwkSetUriJwtDecoderBuilder"
},
{
  "name":"org.springframework.security.oauth2.jwt.NimbusJwtDecoder$PublicKeyJwtDecoderBuilder"
},
{
  "name":"org.springframework.security.oauth2.jwt.NimbusJwtDecoder$SecretKeyJwtDecoderBuilder"
},
{
  "name":"org.springframework.security.oauth2.server.authorization.OAuth2Authorization"
},
{
  "name":"org.springframework.security.oauth2.server.authorization.OAuth2AuthorizationService"
},
{
  "name":"org.springframework.security.oauth2.server.resource.BearerTokenError"
},
{
  "name":"org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken"
},
{
  "name":"org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationConverter"
},
{
  "name":"org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"authenticate","parameterTypes":["org.springframework.security.core.Authentication"] }, {"name":"supports","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector"
},
{
  "name":"org.springframework.security.oauth2.server.resource.introspection.ReactiveOpaqueTokenIntrospector"
},
{
  "name":"org.springframework.security.oauth2.server.resource.introspection.SpringOpaqueTokenIntrospector"
},
{
  "name":"org.springframework.security.oauth2.server.resource.web.BearerTokenResolver"
},
{
  "name":"org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor"
},
{
  "name":"org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository"
},
{
  "name":"org.springframework.security.web.AuthenticationEntryPoint",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.DefaultSecurityFilterChain",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getFilters","parameterTypes":[] }, {"name":"matches","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.web.FilterChainProxy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }, {"name":"toFilter","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.web.FilterChainProxy$FilterChainDecorator"
},
{
  "name":"org.springframework.security.web.FilterChainProxy$FilterChainValidator"
},
{
  "name":"org.springframework.security.web.SecurityFilterChain",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.access.AccessDeniedHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.access.AuthorizationManagerWebInvocationPrivilegeEvaluator$HttpServletRequestTransformer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.access.ExceptionTranslationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }, {"name":"setMessageSource","parameterTypes":["org.springframework.context.MessageSource"] }]
},
{
  "name":"org.springframework.security.web.access.HandlerMappingIntrospectorRequestTransformer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.web.servlet.handler.HandlerMappingIntrospector"] }, {"name":"transform","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }]
},
{
  "name":"org.springframework.security.web.access.RequestMatcherDelegatingWebInvocationPrivilegeEvaluator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"isAllowed","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","org.springframework.security.core.Authentication"] }, {"name":"isAllowed","parameterTypes":["java.lang.String","org.springframework.security.core.Authentication"] }, {"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.web.access.WebInvocationPrivilegeEvaluator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.web.access.intercept.AuthorizationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }]
},
{
  "name":"org.springframework.security.web.access.intercept.RequestMatcherDelegatingAuthorizationManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"check","parameterTypes":["java.util.function.Supplier","java.lang.Object"] }]
},
{
  "name":"org.springframework.security.web.access.intercept.RequestMatcherDelegatingAuthorizationManager$Builder"
},
{
  "name":"org.springframework.security.web.authentication.AuthenticationFailureHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.authentication.logout.LogoutFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }]
},
{
  "name":"org.springframework.security.web.authentication.logout.LogoutHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.authentication.logout.LogoutSuccessEventPublishingLogoutHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"logout","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","org.springframework.security.core.Authentication"] }, {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }]
},
{
  "name":"org.springframework.security.web.authentication.session.AbstractSessionFixationProtectionStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"onAuthentication","parameterTypes":["org.springframework.security.core.Authentication","jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse"] }, {"name":"setAlwaysCreateSession","parameterTypes":["boolean"] }, {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }]
},
{
  "name":"org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"onAuthentication","parameterTypes":["org.springframework.security.core.Authentication","jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.web.authentication.session.SessionAuthenticationException"
},
{
  "name":"org.springframework.security.web.authentication.session.SessionAuthenticationStrategy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer"
},
{
  "name":"org.springframework.security.web.context.SecurityContextHolderFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }]
},
{
  "name":"org.springframework.security.web.context.SecurityContextRepository"
},
{
  "name":"org.springframework.security.web.firewall.FirewalledRequest"
},
{
  "name":"org.springframework.security.web.firewall.HttpFirewall"
},
{
  "name":"org.springframework.security.web.firewall.RequestRejectedHandler"
},
{
  "name":"org.springframework.security.web.header.HeaderWriterFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.web.savedrequest.RequestCacheAwareFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }]
},
{
  "name":"org.springframework.security.web.server.WebFilterChainProxy"
},
{
  "name":"org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getExtraHiddenFields","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }, {"name":"processAction","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.String","java.lang.String"] }, {"name":"processFormFieldValue","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.String","java.lang.String","java.lang.String"] }, {"name":"processUrl","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.web.servletapi.HttpServletRequestFactory"
},
{
  "name":"org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }]
},
{
  "name":"org.springframework.security.web.util.ThrowableAnalyzer"
},
{
  "name":"org.springframework.security.web.util.matcher.RequestMatcher"
},
{
  "name":"org.springframework.security.web.util.matcher.RequestMatcherEntry"
},
{
  "name":"org.springframework.session.Session"
},
{
  "name":"org.springframework.stereotype.Component",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Controller",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Indexed",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Repository",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Service",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.ConfigurableTransactionManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"addListener","parameterTypes":["org.springframework.transaction.TransactionExecutionListener"] }]
},
{
  "name":"org.springframework.transaction.PlatformTransactionManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.transaction.ReactiveTransactionManager"
},
{
  "name":"org.springframework.transaction.TransactionDefinition",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.transaction.TransactionException"
},
{
  "name":"org.springframework.transaction.TransactionExecutionListener"
},
{
  "name":"org.springframework.transaction.TransactionManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.transaction.TransactionStatus"
},
{
  "name":"org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setImportMetadata","parameterTypes":["org.springframework.core.type.AnnotationMetadata"] }, {"name":"transactionalEventListenerFactory","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"isCandidateClass","parameterTypes":["java.lang.Class"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.annotation.EnableTransactionManagement",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.annotation.Propagation"
},
{
  "name":"org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"transactionAdvisor","parameterTypes":["org.springframework.transaction.interceptor.TransactionAttributeSource","org.springframework.transaction.interceptor.TransactionInterceptor"] }, {"name":"transactionAttributeSource","parameterTypes":[] }, {"name":"transactionInterceptor","parameterTypes":["org.springframework.transaction.interceptor.TransactionAttributeSource"] }]
},
{
  "name":"org.springframework.transaction.annotation.RestrictedTransactionalEventListenerFactory",
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.annotation.TransactionRuntimeHints"
},
{
  "name":"org.springframework.transaction.annotation.Transactional",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.aspectj.AbstractTransactionAspect"
},
{
  "name":"org.springframework.transaction.event.TransactionalEventListener",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.event.TransactionalEventListenerFactory"
},
{
  "name":"org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getTransactionAttribute","parameterTypes":["java.lang.reflect.Method","java.lang.Class"] }, {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }]
},
{
  "name":"org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getPointcut","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.interceptor.TransactionAspectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getTransactionAttributeSource","parameterTypes":[] }, {"name":"getTransactionManager","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setTransactionAttributeSource","parameterTypes":["org.springframework.transaction.interceptor.TransactionAttributeSource"] }, {"name":"setTransactionAttributeSources","parameterTypes":["org.springframework.transaction.interceptor.TransactionAttributeSource[]"] }, {"name":"setTransactionAttributes","parameterTypes":["java.util.Properties"] }, {"name":"setTransactionManager","parameterTypes":["org.springframework.transaction.TransactionManager"] }, {"name":"setTransactionManagerBeanName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.transaction.interceptor.TransactionAttribute"
},
{
  "name":"org.springframework.transaction.interceptor.TransactionAttributeSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.transaction.interceptor.TransactionInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"invoke","parameterTypes":["org.aopalliance.intercept.MethodInvocation"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.interceptor.TransactionalProxy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.jta.JtaTransactionManager"
},
{
  "name":"org.springframework.transaction.reactive.TransactionalOperator"
},
{
  "name":"org.springframework.transaction.support.AbstractPlatformTransactionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"commit","parameterTypes":["org.springframework.transaction.TransactionStatus"] }, {"name":"getTransaction","parameterTypes":["org.springframework.transaction.TransactionDefinition"] }, {"name":"getTransactionExecutionListeners","parameterTypes":[] }, {"name":"rollback","parameterTypes":["org.springframework.transaction.TransactionStatus"] }, {"name":"setTransactionExecutionListeners","parameterTypes":["java.util.Collection"] }]
},
{
  "name":"org.springframework.transaction.support.AbstractPlatformTransactionManager$SuspendedResourcesHolder"
},
{
  "name":"org.springframework.transaction.support.DefaultTransactionDefinition",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getIsolationLevel","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getPropagationBehavior","parameterTypes":[] }, {"name":"getTimeout","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"isReadOnly","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.support.DefaultTransactionStatus"
},
{
  "name":"org.springframework.transaction.support.ResourceTransactionManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.transaction.support.TransactionCallback"
},
{
  "name":"org.springframework.transaction.support.TransactionOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"executeWithoutResult","parameterTypes":["java.util.function.Consumer"] }]
},
{
  "name":"org.springframework.transaction.support.TransactionTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"execute","parameterTypes":["org.springframework.transaction.support.TransactionCallback"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.ui.context.ThemeSource"
},
{
  "name":"org.springframework.util.AntPathMatcher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"combine","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"extractPathWithinPattern","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"extractUriTemplateVariables","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"getPatternComparator","parameterTypes":["java.lang.String"] }, {"name":"isPattern","parameterTypes":["java.lang.String"] }, {"name":"match","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"matchStart","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.util.AntPathMatcher$AntPathStringMatcher"
},
{
  "name":"org.springframework.util.Assert"
},
{
  "name":"org.springframework.util.CustomizableThreadCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createThread","parameterTypes":["java.lang.Runnable"] }, {"name":"getThreadGroup","parameterTypes":[] }, {"name":"getThreadNamePrefix","parameterTypes":[] }, {"name":"getThreadPriority","parameterTypes":[] }, {"name":"isDaemon","parameterTypes":[] }, {"name":"setDaemon","parameterTypes":["boolean"] }, {"name":"setThreadGroup","parameterTypes":["java.lang.ThreadGroup"] }, {"name":"setThreadGroupName","parameterTypes":["java.lang.String"] }, {"name":"setThreadNamePrefix","parameterTypes":["java.lang.String"] }, {"name":"setThreadPriority","parameterTypes":["int"] }]
},
{
  "name":"org.springframework.util.ErrorHandler"
},
{
  "name":"org.springframework.util.MimeType"
},
{
  "name":"org.springframework.util.MultiValueMap"
},
{
  "name":"org.springframework.util.PathMatcher",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.util.PropertiesPersister"
},
{
  "name":"org.springframework.util.StringValueResolver"
},
{
  "name":"org.springframework.util.concurrent.ListenableFuture"
},
{
  "name":"org.springframework.util.concurrent.ListenableFutureTask"
},
{
  "name":"org.springframework.util.unit.DataSize"
},
{
  "name":"org.springframework.util.unit.DataSizeEditor"
},
{
  "name":"org.springframework.validation.BindException"
},
{
  "name":"org.springframework.validation.BindingResult"
},
{
  "name":"org.springframework.validation.DefaultMessageCodesResolver$Format"
},
{
  "name":"org.springframework.validation.Errors"
},
{
  "name":"org.springframework.validation.FieldError"
},
{
  "name":"org.springframework.validation.MessageCodesResolver"
},
{
  "name":"org.springframework.validation.ObjectError"
},
{
  "name":"org.springframework.validation.SmartValidator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"validateValue","parameterTypes":["java.lang.Class","java.lang.String","java.lang.Object","org.springframework.validation.Errors","java.lang.Object[]"] }]
},
{
  "name":"org.springframework.validation.Validator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"validateObject","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }, {"name":"getClockProvider","parameterTypes":[] }, {"name":"getConstraintValidatorFactory","parameterTypes":[] }, {"name":"getMessageInterpolator","parameterTypes":[] }, {"name":"getParameterNameProvider","parameterTypes":[] }, {"name":"getTraversableResolver","parameterTypes":[] }, {"name":"getValidator","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"unwrap","parameterTypes":["java.lang.Class"] }, {"name":"usingContext","parameterTypes":[] }]
},
{
  "name":"org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.validation.beanvalidation.SpringValidatorAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"forExecutables","parameterTypes":[] }, {"name":"getConstraintsForClass","parameterTypes":["java.lang.Class"] }, {"name":"supports","parameterTypes":["java.lang.Class"] }, {"name":"validate","parameterTypes":["java.lang.Object","org.springframework.validation.Errors"] }, {"name":"validate","parameterTypes":["java.lang.Object","org.springframework.validation.Errors","java.lang.Object[]"] }, {"name":"validate","parameterTypes":["java.lang.Object","java.lang.Class[]"] }, {"name":"validateProperty","parameterTypes":["java.lang.Object","java.lang.String","java.lang.Class[]"] }, {"name":"validateValue","parameterTypes":["java.lang.Class","java.lang.String","java.lang.Object","org.springframework.validation.Errors","java.lang.Object[]"] }, {"name":"validateValue","parameterTypes":["java.lang.Class","java.lang.String","java.lang.Object","java.lang.Class[]"] }]
},
{
  "name":"org.springframework.validation.method.MethodValidationResult"
},
{
  "name":"org.springframework.web.HttpMediaTypeNotAcceptableException"
},
{
  "name":"org.springframework.web.HttpMediaTypeNotSupportedException"
},
{
  "name":"org.springframework.web.HttpRequestMethodNotSupportedException"
},
{
  "name":"org.springframework.web.accept.ContentNegotiationManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getAllFileExtensions","parameterTypes":[] }, {"name":"resolveFileExtensions","parameterTypes":["org.springframework.http.MediaType"] }, {"name":"resolveMediaTypes","parameterTypes":["org.springframework.web.context.request.NativeWebRequest"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.accept.ContentNegotiationStrategy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.accept.MediaTypeFileExtensionResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.bind.MethodArgumentNotValidException"
},
{
  "name":"org.springframework.web.bind.MissingServletRequestParameterException"
},
{
  "name":"org.springframework.web.bind.ServletRequestBindingException"
},
{
  "name":"org.springframework.web.bind.annotation.ControllerAdvice",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.CrossOrigin",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.DeleteMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ExceptionHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.GetMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.Mapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ModelAttribute",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.PathVariable",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.PostMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.PutMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RequestBody",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RequestMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RequestMethod"
},
{
  "name":"org.springframework.web.bind.annotation.RequestParam",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ResponseBody",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ResponseStatus",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RestController",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RestControllerAdvice",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.support.ConfigurableWebBindingInitializer"
},
{
  "name":"org.springframework.web.bind.support.SessionAttributeStore"
},
{
  "name":"org.springframework.web.bind.support.WebBindingInitializer"
},
{
  "name":"org.springframework.web.bind.support.WebDataBinderFactory"
},
{
  "name":"org.springframework.web.client.DefaultRestClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"delete","parameterTypes":[] }, {"name":"get","parameterTypes":[] }, {"name":"head","parameterTypes":[] }, {"name":"method","parameterTypes":["org.springframework.http.HttpMethod"] }, {"name":"mutate","parameterTypes":[] }, {"name":"options","parameterTypes":[] }, {"name":"patch","parameterTypes":[] }, {"name":"post","parameterTypes":[] }, {"name":"put","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.client.DefaultRestClientBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"apply","parameterTypes":["java.util.function.Consumer"] }, {"name":"baseUrl","parameterTypes":["java.lang.String"] }, {"name":"build","parameterTypes":[] }, {"name":"clone","parameterTypes":[] }, {"name":"defaultHeader","parameterTypes":["java.lang.String","java.lang.String[]"] }, {"name":"defaultHeaders","parameterTypes":["java.util.function.Consumer"] }, {"name":"defaultRequest","parameterTypes":["java.util.function.Consumer"] }, {"name":"defaultStatusHandler","parameterTypes":["java.util.function.Predicate","org.springframework.web.client.RestClient$ResponseSpec$ErrorHandler"] }, {"name":"defaultStatusHandler","parameterTypes":["org.springframework.web.client.ResponseErrorHandler"] }, {"name":"defaultUriVariables","parameterTypes":["java.util.Map"] }, {"name":"messageConverters","parameterTypes":["java.util.function.Consumer"] }, {"name":"observationConvention","parameterTypes":["org.springframework.http.client.observation.ClientRequestObservationConvention"] }, {"name":"observationRegistry","parameterTypes":["io.micrometer.observation.ObservationRegistry"] }, {"name":"requestFactory","parameterTypes":["org.springframework.http.client.ClientHttpRequestFactory"] }, {"name":"requestInitializer","parameterTypes":["org.springframework.http.client.ClientHttpRequestInitializer"] }, {"name":"requestInitializers","parameterTypes":["java.util.function.Consumer"] }, {"name":"requestInterceptor","parameterTypes":["org.springframework.http.client.ClientHttpRequestInterceptor"] }, {"name":"requestInterceptors","parameterTypes":["java.util.function.Consumer"] }, {"name":"uriBuilderFactory","parameterTypes":["org.springframework.web.util.UriBuilderFactory"] }]
},
{
  "name":"org.springframework.web.client.ResponseErrorHandler"
},
{
  "name":"org.springframework.web.client.RestClient",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.client.RestClient$Builder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.client.RestClient$RequestBodyUriSpec"
},
{
  "name":"org.springframework.web.client.RestClient$RequestHeadersSpec"
},
{
  "name":"org.springframework.web.client.RestClient$RequestHeadersUriSpec"
},
{
  "name":"org.springframework.web.client.RestClient$ResponseSpec$ErrorHandler"
},
{
  "name":"org.springframework.web.client.RestClientException"
},
{
  "name":"org.springframework.web.client.RestOperations"
},
{
  "name":"org.springframework.web.client.RestTemplate"
},
{
  "name":"org.springframework.web.client.StatusHandler"
},
{
  "name":"org.springframework.web.context.ConfigurableWebApplicationContext"
},
{
  "name":"org.springframework.web.context.ServletContextAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.context.WebApplicationContext"
},
{
  "name":"org.springframework.web.context.request.NativeWebRequest"
},
{
  "name":"org.springframework.web.context.request.RequestAttributes"
},
{
  "name":"org.springframework.web.context.request.RequestContextListener"
},
{
  "name":"org.springframework.web.context.request.ServletRequestAttributes"
},
{
  "name":"org.springframework.web.context.request.WebRequest"
},
{
  "name":"org.springframework.web.context.request.async.WebAsyncManager"
},
{
  "name":"org.springframework.web.context.support.GenericWebApplicationContext"
},
{
  "name":"org.springframework.web.context.support.WebApplicationObjectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }]
},
{
  "name":"org.springframework.web.cors.CorsConfiguration"
},
{
  "name":"org.springframework.web.cors.CorsConfigurationSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.cors.CorsProcessor"
},
{
  "name":"org.springframework.web.filter.CharacterEncodingFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getEncoding","parameterTypes":[] }, {"name":"isForceRequestEncoding","parameterTypes":[] }, {"name":"isForceResponseEncoding","parameterTypes":[] }, {"name":"setEncoding","parameterTypes":["java.lang.String"] }, {"name":"setForceEncoding","parameterTypes":["boolean"] }, {"name":"setForceRequestEncoding","parameterTypes":["boolean"] }, {"name":"setForceResponseEncoding","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.web.filter.DelegatingFilterProxy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.filter.FormContentFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setCharset","parameterTypes":["java.nio.charset.Charset"] }, {"name":"setFormConverter","parameterTypes":["org.springframework.http.converter.FormHttpMessageConverter"] }]
},
{
  "name":"org.springframework.web.filter.GenericFilterBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }, {"name":"getEnvironment","parameterTypes":[] }, {"name":"getFilterConfig","parameterTypes":[] }, {"name":"init","parameterTypes":["jakarta.servlet.FilterConfig"] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }, {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }, {"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }]
},
{
  "name":"org.springframework.web.filter.OncePerRequestFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }]
},
{
  "name":"org.springframework.web.filter.RequestContextFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setThreadContextInheritable","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.web.filter.ServerHttpObservationFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.filter.ShallowEtagHeaderFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.method.ControllerAdviceBean"
},
{
  "name":"org.springframework.web.method.HandlerMethod"
},
{
  "name":"org.springframework.web.method.annotation.ExceptionHandlerMethodResolver",
  "methods":[{"name":"noMatchingExceptionHandler","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.method.annotation.InitBinderDataBinderFactory"
},
{
  "name":"org.springframework.web.method.annotation.ModelFactory"
},
{
  "name":"org.springframework.web.method.annotation.SessionAttributesHandler"
},
{
  "name":"org.springframework.web.method.support.CompositeUriComponentsContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"contributeMethodArgument","parameterTypes":["org.springframework.core.MethodParameter","java.lang.Object","org.springframework.web.util.UriComponentsBuilder","java.util.Map","org.springframework.core.convert.ConversionService"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supportsParameter","parameterTypes":["org.springframework.core.MethodParameter"] }]
},
{
  "name":"org.springframework.web.method.support.HandlerMethodArgumentResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.method.support.InvocableHandlerMethod"
},
{
  "name":"org.springframework.web.method.support.ModelAndViewContainer"
},
{
  "name":"org.springframework.web.method.support.UriComponentsContributor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.multipart.MultipartException"
},
{
  "name":"org.springframework.web.multipart.MultipartFile"
},
{
  "name":"org.springframework.web.multipart.MultipartHttpServletRequest"
},
{
  "name":"org.springframework.web.multipart.MultipartResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.multipart.support.MissingServletRequestPartException"
},
{
  "name":"org.springframework.web.multipart.support.StandardServletMultipartResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"cleanupMultipart","parameterTypes":["org.springframework.web.multipart.MultipartHttpServletRequest"] }, {"name":"close","parameterTypes":[] }, {"name":"isMultipart","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }, {"name":"resolveMultipart","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.DispatcherHandler"
},
{
  "name":"org.springframework.web.reactive.HandlerResult"
},
{
  "name":"org.springframework.web.reactive.config.EnableWebFlux"
},
{
  "name":"org.springframework.web.reactive.config.WebFluxConfigurer"
},
{
  "name":"org.springframework.web.reactive.function.client.ExchangeFilterFunction"
},
{
  "name":"org.springframework.web.reactive.function.client.WebClient"
},
{
  "name":"org.springframework.web.reactive.function.client.WebClientException"
},
{
  "name":"org.springframework.web.server.ResponseStatusException"
},
{
  "name":"org.springframework.web.service.annotation.HttpExchange"
},
{
  "name":"org.springframework.web.servlet.DispatcherServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.FlashMap"
},
{
  "name":"org.springframework.web.servlet.FlashMapManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.FrameworkServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"destroy","parameterTypes":[] }, {"name":"getContextAttribute","parameterTypes":[] }, {"name":"getContextClass","parameterTypes":[] }, {"name":"getContextConfigLocation","parameterTypes":[] }, {"name":"getContextId","parameterTypes":[] }, {"name":"getNamespace","parameterTypes":[] }, {"name":"getServletContextAttributeName","parameterTypes":[] }, {"name":"isEnableLoggingRequestDetails","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.event.ContextRefreshedEvent"] }, {"name":"refresh","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setContextAttribute","parameterTypes":["java.lang.String"] }, {"name":"setContextClass","parameterTypes":["java.lang.Class"] }, {"name":"setContextConfigLocation","parameterTypes":["java.lang.String"] }, {"name":"setContextId","parameterTypes":["java.lang.String"] }, {"name":"setContextInitializerClasses","parameterTypes":["java.lang.String"] }, {"name":"setContextInitializers","parameterTypes":["org.springframework.context.ApplicationContextInitializer[]"] }, {"name":"setDispatchOptionsRequest","parameterTypes":["boolean"] }, {"name":"setDispatchTraceRequest","parameterTypes":["boolean"] }, {"name":"setEnableLoggingRequestDetails","parameterTypes":["boolean"] }, {"name":"setNamespace","parameterTypes":["java.lang.String"] }, {"name":"setPublishContext","parameterTypes":["boolean"] }, {"name":"setPublishEvents","parameterTypes":["boolean"] }, {"name":"setThreadContextInheritable","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.web.servlet.HandlerAdapter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.HandlerExceptionResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.HandlerExecutionChain"
},
{
  "name":"org.springframework.web.servlet.HandlerInterceptor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"afterCompletion","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","java.lang.Object","java.lang.Exception"] }, {"name":"postHandle","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","java.lang.Object","org.springframework.web.servlet.ModelAndView"] }]
},
{
  "name":"org.springframework.web.servlet.HandlerMapping",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.HttpServletBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getEnvironment","parameterTypes":[] }, {"name":"getServletName","parameterTypes":[] }, {"name":"init","parameterTypes":[] }, {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.web.servlet.LocaleResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.ModelAndView"
},
{
  "name":"org.springframework.web.servlet.NoHandlerFoundException"
},
{
  "name":"org.springframework.web.servlet.RequestToViewNameTranslator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.ThemeResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.View",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.ViewResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"
},
{
  "name":"org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"
},
{
  "name":"org.springframework.web.servlet.config.annotation.CorsRegistry"
},
{
  "name":"org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"
},
{
  "name":"org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setConfigurers","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.springframework.web.servlet.config.annotation.EnableWebMvc",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.config.annotation.InterceptorRegistry"
},
{
  "name":"org.springframework.web.servlet.config.annotation.PathMatchConfigurer"
},
{
  "name":"org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration"
},
{
  "name":"org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
},
{
  "name":"org.springframework.web.servlet.config.annotation.ViewControllerRegistry"
},
{
  "name":"org.springframework.web.servlet.config.annotation.ViewResolverRegistry"
},
{
  "name":"org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"beanNameHandlerMapping","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, {"name":"defaultServletHandlerMapping","parameterTypes":[] }, {"name":"handlerExceptionResolver","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager"] }, {"name":"handlerFunctionAdapter","parameterTypes":[] }, {"name":"httpRequestHandlerAdapter","parameterTypes":[] }, {"name":"mvcHandlerMappingIntrospector","parameterTypes":[] }, {"name":"mvcPathMatcher","parameterTypes":[] }, {"name":"mvcPatternParser","parameterTypes":[] }, {"name":"mvcResourceUrlProvider","parameterTypes":[] }, {"name":"mvcUriComponentsContributor","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"] }, {"name":"mvcUrlPathHelper","parameterTypes":[] }, {"name":"mvcViewResolver","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager"] }, {"name":"requestMappingHandlerAdapter","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager","org.springframework.format.support.FormattingConversionService","org.springframework.validation.Validator"] }, {"name":"requestMappingHandlerMapping","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager","org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, {"name":"resourceHandlerMapping","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager","org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, {"name":"routerFunctionMapping","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }, {"name":"simpleControllerHandlerAdapter","parameterTypes":[] }, {"name":"viewControllerHandlerMapping","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, {"name":"viewNameTranslator","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"addArgumentResolvers","parameterTypes":["java.util.List"] }, {"name":"addCorsMappings","parameterTypes":["org.springframework.web.servlet.config.annotation.CorsRegistry"] }, {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, {"name":"addInterceptors","parameterTypes":["org.springframework.web.servlet.config.annotation.InterceptorRegistry"] }, {"name":"addResourceHandlers","parameterTypes":["org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"] }, {"name":"addReturnValueHandlers","parameterTypes":["java.util.List"] }, {"name":"addViewControllers","parameterTypes":["org.springframework.web.servlet.config.annotation.ViewControllerRegistry"] }, {"name":"configureAsyncSupport","parameterTypes":["org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"] }, {"name":"configureContentNegotiation","parameterTypes":["org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"] }, {"name":"configureDefaultServletHandling","parameterTypes":["org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"] }, {"name":"configureHandlerExceptionResolvers","parameterTypes":["java.util.List"] }, {"name":"configureMessageConverters","parameterTypes":["java.util.List"] }, {"name":"configurePathMatch","parameterTypes":["org.springframework.web.servlet.config.annotation.PathMatchConfigurer"] }, {"name":"configureViewResolvers","parameterTypes":["org.springframework.web.servlet.config.annotation.ViewResolverRegistry"] }, {"name":"extendHandlerExceptionResolvers","parameterTypes":["java.util.List"] }, {"name":"extendMessageConverters","parameterTypes":["java.util.List"] }, {"name":"getMessageCodesResolver","parameterTypes":[] }, {"name":"getValidator","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.function.HandlerFunction"
},
{
  "name":"org.springframework.web.servlet.function.RouterFunction"
},
{
  "name":"org.springframework.web.servlet.function.ServerRequest"
},
{
  "name":"org.springframework.web.servlet.function.ServerResponse"
},
{
  "name":"org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getLastModified","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.Object"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"handle","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","java.lang.Object"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supports","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.web.servlet.function.support.RouterFunctionMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"match","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"initApplicationContext","parameterTypes":[] }, {"name":"setDetectHandlersInAncestorContexts","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getCorsConfigurationSource","parameterTypes":[] }, {"name":"getCorsProcessor","parameterTypes":[] }, {"name":"getDefaultHandler","parameterTypes":[] }, {"name":"getHandler","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"getPathMatcher","parameterTypes":[] }, {"name":"getPatternParser","parameterTypes":[] }, {"name":"getUrlPathHelper","parameterTypes":[] }, {"name":"setAlwaysUseFullPath","parameterTypes":["boolean"] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }, {"name":"setCorsConfigurationSource","parameterTypes":["org.springframework.web.cors.CorsConfigurationSource"] }, {"name":"setCorsConfigurations","parameterTypes":["java.util.Map"] }, {"name":"setCorsProcessor","parameterTypes":["org.springframework.web.cors.CorsProcessor"] }, {"name":"setDefaultHandler","parameterTypes":["java.lang.Object"] }, {"name":"setInterceptors","parameterTypes":["java.lang.Object[]"] }, {"name":"setOrder","parameterTypes":["int"] }, {"name":"setPathMatcher","parameterTypes":["org.springframework.util.PathMatcher"] }, {"name":"setPatternParser","parameterTypes":["org.springframework.web.util.pattern.PathPatternParser"] }, {"name":"setRemoveSemicolonContent","parameterTypes":["boolean"] }, {"name":"setUrlDecode","parameterTypes":["boolean"] }, {"name":"setUrlPathHelper","parameterTypes":["org.springframework.web.util.UrlPathHelper"] }, {"name":"usesPathPatterns","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMethodMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getDirectPaths","parameterTypes":["java.lang.Object"] }, {"name":"getHandlerMethods","parameterTypes":[] }, {"name":"getHandlerMethodsForMappingName","parameterTypes":["java.lang.String"] }, {"name":"getMappingPathPatterns","parameterTypes":["java.lang.Object"] }, {"name":"getMatchingMapping","parameterTypes":["java.lang.Object","jakarta.servlet.http.HttpServletRequest"] }, {"name":"getNamingStrategy","parameterTypes":[] }, {"name":"handleMatch","parameterTypes":["java.lang.Object","java.lang.String","jakarta.servlet.http.HttpServletRequest"] }, {"name":"initCorsConfiguration","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, {"name":"registerHandlerMethod","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] }, {"name":"setDetectHandlerMethodsInAncestorContexts","parameterTypes":["boolean"] }, {"name":"setHandlerMethodMappingNamingStrategy","parameterTypes":["org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"] }, {"name":"setPatternParser","parameterTypes":["org.springframework.web.util.pattern.PathPatternParser"] }, {"name":"unregisterMapping","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry"
},
{
  "name":"org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getRootHandler","parameterTypes":[] }, {"name":"match","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.String"] }, {"name":"setLazyInitHandlers","parameterTypes":["boolean"] }, {"name":"setPatternParser","parameterTypes":["org.springframework.web.util.pattern.PathPatternParser"] }, {"name":"setRootHandler","parameterTypes":["java.lang.Object"] }, {"name":"setUseTrailingSlashMatch","parameterTypes":["boolean"] }, {"name":"useTrailingSlashMatch","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.handler.HandlerExceptionResolverComposite",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"resolveException","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","java.lang.Object","java.lang.Exception"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.handler.HandlerMappingIntrospector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"getCorsConfiguration","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.handler.HandlerMappingIntrospector$AttributesPreservingRequest"
},
{
  "name":"org.springframework.web.servlet.handler.HandlerMappingIntrospector$CachedResult"
},
{
  "name":"org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"
},
{
  "name":"org.springframework.web.servlet.handler.MappedInterceptor"
},
{
  "name":"org.springframework.web.servlet.handler.MatchableHandlerMapping",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.handler.RequestMatchResult"
},
{
  "name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.i18n.AbstractLocaleResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setDefaultLocale","parameterTypes":["java.util.Locale"] }]
},
{
  "name":"org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolveLocale","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }, {"name":"setLocale","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","java.util.Locale"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getLastModified","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.Object"] }, {"name":"handle","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","java.lang.Object"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supports","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getLastModified","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.Object"] }, {"name":"handle","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","java.lang.Object"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supports","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.web.servlet.mvc.condition.PathPatternsRequestCondition"
},
{
  "name":"org.springframework.web.servlet.mvc.condition.PatternsRequestCondition"
},
{
  "name":"org.springframework.web.servlet.mvc.condition.RequestCondition"
},
{
  "name":"org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getLastModified","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.Object"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"handle","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","java.lang.Object"] }, {"name":"setOrder","parameterTypes":["int"] }, {"name":"supports","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.web.servlet.mvc.method.RequestMappingInfo"
},
{
  "name":"org.springframework.web.servlet.mvc.method.RequestMappingInfo$BuilderConfiguration"
},
{
  "name":"org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"initCorsConfiguration","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, {"name":"registerHandlerMethod","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] }]
},
{
  "name":"org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver"
},
{
  "name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"getBuilderConfiguration","parameterTypes":[] }, {"name":"getContentNegotiationManager","parameterTypes":[] }, {"name":"getFileExtensions","parameterTypes":[] }, {"name":"getPathPrefixes","parameterTypes":[] }, {"name":"initCorsConfiguration","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, {"name":"match","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.String"] }, {"name":"registerHandlerMethod","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] }, {"name":"registerMapping","parameterTypes":["org.springframework.web.servlet.mvc.method.RequestMappingInfo","java.lang.Object","java.lang.reflect.Method"] }, {"name":"setContentNegotiationManager","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager"] }, {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }, {"name":"setPathPrefixes","parameterTypes":["java.util.Map"] }, {"name":"setPatternParser","parameterTypes":["org.springframework.web.util.pattern.PathPatternParser"] }, {"name":"setUseRegisteredSuffixPatternMatch","parameterTypes":["boolean"] }, {"name":"setUseSuffixPatternMatch","parameterTypes":["boolean"] }, {"name":"setUseTrailingSlashMatch","parameterTypes":["boolean"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"useRegisteredSuffixPatternMatch","parameterTypes":[] }, {"name":"useSuffixPatternMatch","parameterTypes":[] }, {"name":"useTrailingSlashMatch","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping$AnnotationDescriptor"
},
{
  "name":"org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod"
},
{
  "name":"org.springframework.web.servlet.resource.ResourceResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.resource.ResourceResolverChain"
},
{
  "name":"org.springframework.web.servlet.resource.ResourceTransformer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.resource.ResourceTransformerChain"
},
{
  "name":"org.springframework.web.servlet.resource.ResourceUrlProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.support.AbstractFlashMapManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getFlashMapTimeout","parameterTypes":[] }, {"name":"getUrlPathHelper","parameterTypes":[] }, {"name":"retrieveAndUpdate","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse"] }, {"name":"saveOutputFlashMap","parameterTypes":["org.springframework.web.servlet.FlashMap","jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse"] }, {"name":"setFlashMapTimeout","parameterTypes":["int"] }, {"name":"setUrlPathHelper","parameterTypes":["org.springframework.web.util.UrlPathHelper"] }]
},
{
  "name":"org.springframework.web.servlet.support.RequestDataValueProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.support.SessionFlashMapManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.support.WebContentGenerator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.theme.AbstractThemeResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getDefaultThemeName","parameterTypes":[] }, {"name":"setDefaultThemeName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.web.servlet.theme.FixedThemeResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolveThemeName","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }, {"name":"setThemeName","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.view.AbstractCachingViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"clearCache","parameterTypes":[] }, {"name":"getCacheFilter","parameterTypes":[] }, {"name":"getCacheLimit","parameterTypes":[] }, {"name":"isCache","parameterTypes":[] }, {"name":"isCacheUnresolved","parameterTypes":[] }, {"name":"removeFromCache","parameterTypes":["java.lang.String","java.util.Locale"] }, {"name":"resolveViewName","parameterTypes":["java.lang.String","java.util.Locale"] }, {"name":"setCache","parameterTypes":["boolean"] }, {"name":"setCacheFilter","parameterTypes":["org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"] }, {"name":"setCacheLimit","parameterTypes":["int"] }, {"name":"setCacheUnresolved","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"
},
{
  "name":"org.springframework.web.servlet.view.AbstractUrlBasedView"
},
{
  "name":"org.springframework.web.servlet.view.BeanNameViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"resolveViewName","parameterTypes":["java.lang.String","java.util.Locale"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.view.ContentNegotiatingViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"resolveViewName","parameterTypes":["java.lang.String","java.util.Locale"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getViewName","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.view.InternalResourceViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.view.UrlBasedViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getAttributesMap","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"getRedirectHosts","parameterTypes":[] }, {"name":"setAttributes","parameterTypes":["java.util.Properties"] }, {"name":"setAttributesMap","parameterTypes":["java.util.Map"] }, {"name":"setContentType","parameterTypes":["java.lang.String"] }, {"name":"setExposeContextBeansAsAttributes","parameterTypes":["boolean"] }, {"name":"setExposePathVariables","parameterTypes":["java.lang.Boolean"] }, {"name":"setExposedContextBeanNames","parameterTypes":["java.lang.String[]"] }, {"name":"setOrder","parameterTypes":["int"] }, {"name":"setPrefix","parameterTypes":["java.lang.String"] }, {"name":"setRedirectContextRelative","parameterTypes":["boolean"] }, {"name":"setRedirectHosts","parameterTypes":["java.lang.String[]"] }, {"name":"setRedirectHttp10Compatible","parameterTypes":["boolean"] }, {"name":"setRequestContextAttribute","parameterTypes":["java.lang.String"] }, {"name":"setSuffix","parameterTypes":["java.lang.String"] }, {"name":"setViewClass","parameterTypes":["java.lang.Class"] }, {"name":"setViewNames","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.springframework.web.servlet.view.ViewResolverComposite",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"resolveViewName","parameterTypes":["java.lang.String","java.util.Locale"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer"
},
{
  "name":"org.springframework.web.util.DefaultUriBuilderFactory"
},
{
  "name":"org.springframework.web.util.UriBuilderFactory"
},
{
  "name":"org.springframework.web.util.UriComponentsBuilder"
},
{
  "name":"org.springframework.web.util.UrlPathHelper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.util.pattern.PathPattern"
},
{
  "name":"org.springframework.web.util.pattern.PathPatternParser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.util.pattern.PatternParseException"
},
{
  "name":"org.springframework.ws.transport.http.MessageDispatcherServlet"
},
{
  "name":"org.thymeleaf.spring6.SpringTemplateEngine"
},
{
  "name":"org.webjars.WebJarAssetLocator"
},
{
  "name":"org.xmlbeam.XBProjector"
},
{
  "name":"org.xnio.SslClientAuthMode"
},
{
  "name":"org.yaml.snakeyaml.Yaml"
},
{
  "name":"org.zalando.problem.Problem"
},
{
  "name":"org.zalando.problem.ProblemBuilder"
},
{
  "name":"org.zalando.problem.StatusType"
},
{
  "name":"org.zalando.problem.ThrowableProblem"
},
{
  "name":"org.zalando.problem.jackson.ProblemModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getModuleName","parameterTypes":[] }, {"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"version","parameterTypes":[] }]
},
{
  "name":"org.zalando.problem.spring.common.AdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createStackTrace","parameterTypes":["java.lang.Throwable"] }, {"name":"isCausalChainsEnabled","parameterTypes":[] }, {"name":"prepare","parameterTypes":["java.lang.Throwable","org.zalando.problem.StatusType","java.net.URI"] }, {"name":"process","parameterTypes":["org.springframework.http.ResponseEntity"] }, {"name":"resolveResponseStatus","parameterTypes":["java.lang.Throwable"] }, {"name":"toProblem","parameterTypes":["java.lang.Throwable"] }, {"name":"toProblem","parameterTypes":["java.lang.Throwable","org.zalando.problem.StatusType"] }, {"name":"toProblem","parameterTypes":["java.lang.Throwable","org.zalando.problem.StatusType","java.net.URI"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.AdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"create","parameterTypes":["java.lang.Throwable","org.springframework.web.context.request.NativeWebRequest"] }, {"name":"create","parameterTypes":["java.lang.Throwable","org.zalando.problem.Problem","org.springframework.web.context.request.NativeWebRequest"] }, {"name":"create","parameterTypes":["java.lang.Throwable","org.zalando.problem.Problem","org.springframework.web.context.request.NativeWebRequest","org.springframework.http.HttpHeaders"] }, {"name":"create","parameterTypes":["org.zalando.problem.StatusType","java.lang.Throwable","org.springframework.web.context.request.NativeWebRequest"] }, {"name":"create","parameterTypes":["org.zalando.problem.StatusType","java.lang.Throwable","org.springframework.web.context.request.NativeWebRequest","java.net.URI"] }, {"name":"create","parameterTypes":["org.zalando.problem.StatusType","java.lang.Throwable","org.springframework.web.context.request.NativeWebRequest","org.springframework.http.HttpHeaders"] }, {"name":"create","parameterTypes":["org.zalando.problem.StatusType","java.lang.Throwable","org.springframework.web.context.request.NativeWebRequest","org.springframework.http.HttpHeaders","java.net.URI"] }, {"name":"create","parameterTypes":["org.zalando.problem.ThrowableProblem","org.springframework.web.context.request.NativeWebRequest"] }, {"name":"create","parameterTypes":["org.zalando.problem.ThrowableProblem","org.springframework.web.context.request.NativeWebRequest","org.springframework.http.HttpHeaders"] }, {"name":"fallback","parameterTypes":["java.lang.Throwable","org.zalando.problem.Problem","org.springframework.web.context.request.NativeWebRequest","org.springframework.http.HttpHeaders"] }, {"name":"log","parameterTypes":["java.lang.Throwable","org.zalando.problem.Problem","org.springframework.web.context.request.NativeWebRequest","org.springframework.http.HttpStatus"] }, {"name":"negotiate","parameterTypes":["org.springframework.web.context.request.NativeWebRequest"] }, {"name":"process","parameterTypes":["org.springframework.http.ResponseEntity","org.springframework.web.context.request.NativeWebRequest"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.ProblemHandling",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.zalando.problem.spring.web.advice.general.GeneralAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.zalando.problem.spring.web.advice.general.ProblemAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleProblem","parameterTypes":["org.zalando.problem.ThrowableProblem","org.springframework.web.context.request.NativeWebRequest"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.general.ResponseStatusAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleResponseStatusException","parameterTypes":["org.springframework.web.server.ResponseStatusException","org.springframework.web.context.request.NativeWebRequest"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.general.ThrowableAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleThrowable","parameterTypes":["java.lang.Throwable","org.springframework.web.context.request.NativeWebRequest"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.general.UnsupportedOperationAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleUnsupportedOperation","parameterTypes":["java.lang.UnsupportedOperationException","org.springframework.web.context.request.NativeWebRequest"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.http.HttpAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.zalando.problem.spring.web.advice.http.MethodNotAllowedAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleRequestMethodNotSupportedException","parameterTypes":["org.springframework.web.HttpRequestMethodNotSupportedException","org.springframework.web.context.request.NativeWebRequest"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.http.NotAcceptableAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleMediaTypeNotAcceptable","parameterTypes":["org.springframework.web.HttpMediaTypeNotAcceptableException","org.springframework.web.context.request.NativeWebRequest"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.http.UnsupportedMediaTypeAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleMediaTypeNotSupportedException","parameterTypes":["org.springframework.web.HttpMediaTypeNotSupportedException","org.springframework.web.context.request.NativeWebRequest"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.io.IOAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.zalando.problem.spring.web.advice.io.MessageNotReadableAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleMessageNotReadableException","parameterTypes":["org.springframework.http.converter.HttpMessageNotReadableException","org.springframework.web.context.request.NativeWebRequest"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.io.MultipartAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleMultipart","parameterTypes":["org.springframework.web.multipart.MultipartException","org.springframework.web.context.request.NativeWebRequest"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.io.TypeMismatchAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleTypeMismatch","parameterTypes":["org.springframework.beans.TypeMismatchException","org.springframework.web.context.request.NativeWebRequest"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.network.NetworkAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.zalando.problem.spring.web.advice.network.SocketTimeoutAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleSocketTimeout","parameterTypes":["java.net.SocketTimeoutException","org.springframework.web.context.request.NativeWebRequest"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.routing.MissingServletRequestParameterAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleMissingServletRequestParameter","parameterTypes":["org.springframework.web.bind.MissingServletRequestParameterException","org.springframework.web.context.request.NativeWebRequest"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.routing.MissingServletRequestPartAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleMissingServletRequestPart","parameterTypes":["org.springframework.web.multipart.support.MissingServletRequestPartException","org.springframework.web.context.request.NativeWebRequest"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.routing.NoHandlerFoundAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleNoHandlerFound","parameterTypes":["org.springframework.web.servlet.NoHandlerFoundException","org.springframework.web.context.request.NativeWebRequest"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.routing.RoutingAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.zalando.problem.spring.web.advice.routing.ServletRequestBindingAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleServletRequestBinding","parameterTypes":["org.springframework.web.bind.ServletRequestBindingException","org.springframework.web.context.request.NativeWebRequest"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.security.SecurityProblemSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.web.servlet.HandlerExceptionResolver"] }, {"name":"commence","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","org.springframework.security.core.AuthenticationException"] }, {"name":"handle","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","org.springframework.security.access.AccessDeniedException"] }, {"name":"onAuthenticationFailure","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.validation.BaseBindingResultAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createViolation","parameterTypes":["org.springframework.validation.FieldError"] }, {"name":"createViolation","parameterTypes":["org.springframework.validation.ObjectError"] }, {"name":"createViolations","parameterTypes":["org.springframework.validation.BindingResult"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.validation.BaseValidationAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"defaultConstraintViolationStatus","parameterTypes":[] }, {"name":"defaultConstraintViolationType","parameterTypes":[] }, {"name":"formatFieldName","parameterTypes":["java.lang.String"] }, {"name":"newConstraintViolationProblem","parameterTypes":["java.lang.Throwable","java.util.Collection","org.springframework.web.context.request.NativeWebRequest"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.validation.BindAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleBindingResult","parameterTypes":["org.springframework.validation.BindException","org.springframework.web.context.request.NativeWebRequest"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.validation.ConstraintViolationAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createViolation","parameterTypes":["jakarta.validation.ConstraintViolation"] }, {"name":"handleConstraintViolation","parameterTypes":["jakarta.validation.ConstraintViolationException","org.springframework.web.context.request.NativeWebRequest"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.validation.MethodArgumentNotValidAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleMethodArgumentNotValid","parameterTypes":["org.springframework.web.bind.MethodArgumentNotValidException","org.springframework.web.context.request.NativeWebRequest"] }]
},
{
  "name":"org.zalando.problem.spring.web.advice.validation.ValidationAdviceTrait",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.zalando.problem.spring.web.autoconfigure.ProblemAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.zalando.problem.spring.web.autoconfigure.ProblemJacksonAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"constraintViolationProblemModule","parameterTypes":[] }, {"name":"problemModule","parameterTypes":[] }]
},
{
  "name":"org.zalando.problem.spring.web.autoconfigure.ProblemJacksonWebMvcAutoConfiguration"
},
{
  "name":"org.zalando.problem.spring.web.autoconfigure.security.ProblemHttpConfigurer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.zalando.problem.spring.web.autoconfigure.security.ProblemSecurityAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"problemSecurityBeanPostProcessor","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.zalando.problem.spring.web.autoconfigure.security.ProblemSecurityBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.zalando.problem.violations.ConstraintViolationProblemModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getModuleName","parameterTypes":[] }, {"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"version","parameterTypes":[] }]
},
{
  "name":"org.zalando.problem.violations.Violation"
},
{
  "name":"reactor.core.publisher.Flux"
},
{
  "name":"reactor.core.publisher.Hooks"
},
{
  "name":"reactor.core.publisher.Mono"
},
{
  "name":"reactor.netty.http.server.HttpServer"
},
{
  "name":"reactor.tools.agent.ReactorDebugAgent"
},
{
  "name":"reactor.util.lang.NonNullApi"
},
{
  "name":"retrofit2.Response"
},
{
  "name":"retrofit2.Retrofit"
},
{
  "name":"scala.Option"
},
{
  "name":"sun.management.ClassLoadingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.CompilationImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$1",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryManagerImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryPoolImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.RuntimeImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.reflect.ReflectionFactory",
  "methods":[{"name":"getReflectionFactory","parameterTypes":[] }, {"name":"newConstructorForSerialization","parameterTypes":["java.lang.Class","java.lang.reflect.Constructor"] }]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.MD5",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA224",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA384",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA512",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.X509Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAKeyFactory$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.KeyManagerFactoryImpl$SunX509",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.SSLContextImpl$DefaultSSLContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.SSLContextImpl$TLSContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.util.ObjectIdentifier"
},
{
  "name":"sun.security.x509.AuthorityInfoAccessExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.AuthorityKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.BasicConstraintsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CRLDistributionPointsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CertificateExtensions"
},
{
  "name":"sun.security.x509.CertificatePoliciesExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.ExtendedKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.IssuerAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.KeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.NetscapeCertTypeExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.PrivateKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"zipkin2.reporter.Encoding"
}
]
