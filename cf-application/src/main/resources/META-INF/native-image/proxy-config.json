[
  {
    "interfaces":["com.bloxbean.cardano.client.backend.blockfrost.service.http.AddressesApi"]
  },
  {
    "interfaces":["com.bloxbean.cardano.client.backend.blockfrost.service.http.EpochApi"]
  },
  {
    "interfaces":["com.bloxbean.cardano.client.backend.blockfrost.service.http.ScriptApi"]
  },
  {
    "interfaces":["com.bloxbean.cardano.client.backend.blockfrost.service.http.TransactionApi"]
  },
  {
    "interfaces":["java.lang.reflect.GenericArrayType","org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy","java.io.Serializable"]
  },
  {
    "interfaces":["java.lang.reflect.ParameterizedType","org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy","java.io.Serializable"]
  },
  {
    "interfaces":["java.lang.reflect.TypeVariable","org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy","java.io.Serializable"]
  },
  {
    "interfaces":["java.lang.reflect.WildcardType","org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy","java.io.Serializable"]
  },
  {
    "interfaces":["java.sql.Connection"]
  },
  {
    "interfaces":["net.bytebuddy.description.method.MethodDescription$InDefinedShape$AbstractBase$Executable"]
  },
  {
    "interfaces":["net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Parameter"]
  },
  {
    "interfaces":["net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Executable"]
  },
  {
    "interfaces":["net.bytebuddy.description.type.TypeDefinition$Sort$AnnotatedType"]
  },
  {
    "interfaces":["net.bytebuddy.description.type.TypeDescription"]
  },
  {
    "interfaces":["net.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher"]
  },
  {
    "interfaces":["net.bytebuddy.description.type.TypeDescription$Generic"]
  },
  {
    "interfaces":["net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableExceptionType$Dispatcher"]
  },
  {
    "interfaces":["net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableParameterType$Dispatcher"]
  },
  {
    "interfaces":["net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedMethodReturnType$Dispatcher"]
  },
  {
    "interfaces":["net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForComponentType$AnnotatedParameterizedType"]
  },
  {
    "interfaces":["net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeArgument$AnnotatedParameterizedType"]
  },
  {
    "interfaces":["net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles"]
  },
  {
    "interfaces":["net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles$Lookup"]
  },
  {
    "interfaces":["net.bytebuddy.utility.JavaModule$Module"]
  },
  {
    "interfaces":["net.bytebuddy.utility.JavaModule$Resolver"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.AccountingCoreTransactionRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.DashboardRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.ReportRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionBatchAssocRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionBatchRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionItemRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.accounting_reporting_core.repository.TransactionReconcilationRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.blockchain_publisher.repository.ReportEntityRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.blockchain_publisher.repository.TransactionEntityRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.blockchain_publisher.repository.TransactionItemEntityRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.csv_erp_adapter.service.event_handle.ReeveErpAdapter","org.springframework.aop.SpringProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.repository.CodesMappingRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.repository.IngestionBodyRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.netsuite_altavia_erp_adapter.repository.IngestionRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.organisation.repository.AccountEventRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.organisation.repository.ChartOfAccountRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.organisation.repository.ChartOfAccountSubTypeRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.organisation.repository.ChartOfAccountTypeRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.organisation.repository.CostCenterRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.organisation.repository.CurrencyRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.organisation.repository.OrganisationRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.organisation.repository.ProjectMappingRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.organisation.repository.ReferenceCodeRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.organisation.repository.ReportTypeFieldRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.organisation.repository.ReportTypeRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.cardanofoundation.lob.app.organisation.repository.VatRepository","org.springframework.data.repository.Repository","org.springframework.transaction.interceptor.TransactionalProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.hibernate.Session","org.springframework.orm.jpa.EntityManagerProxy"]
  },
  {
    "interfaces":["org.hibernate.SessionFactory","org.springframework.orm.jpa.EntityManagerFactoryInfo"]
  },
  {
    "interfaces":["org.hibernate.query.hql.spi.SqmQueryImplementor","org.hibernate.query.sqm.internal.SqmInterpretationsKey$InterpretationsKeySource","org.hibernate.query.spi.DomainQueryExecutionContext","org.hibernate.query.SelectionQuery","org.hibernate.query.CommonQueryContract"]
  },
  {
    "interfaces":["org.springframework.beans.factory.annotation.Qualifier"]
  },
  {
    "interfaces":["org.springframework.boot.actuate.endpoint.annotation.Endpoint"]
  },
  {
    "interfaces":["org.springframework.boot.actuate.endpoint.annotation.EndpointExtension"]
  },
  {
    "interfaces":["org.springframework.boot.context.properties.ConfigurationProperties"]
  },
  {
    "interfaces":["org.springframework.context.event.EventListener"]
  },
  {
    "interfaces":["org.springframework.data.domain.AuditorAware","org.springframework.data.auditing.DateTimeProvider","org.springframework.aop.SpringProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.springframework.data.jpa.repository.support.CrudMethodMetadata","org.springframework.aop.SpringProxy","org.springframework.aop.framework.Advised","org.springframework.core.DecoratingProxy"]
  },
  {
    "interfaces":["org.springframework.jdbc.datasource.ConnectionProxy"]
  },
  {
    "interfaces":["org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity"]
  },
  {
    "interfaces":["org.springframework.web.bind.annotation.ControllerAdvice"]
  },
  {
    "interfaces":["org.springframework.web.bind.annotation.CrossOrigin"]
  },
  {
    "interfaces":["org.springframework.web.bind.annotation.ModelAttribute"]
  },
  {
    "interfaces":["org.springframework.web.bind.annotation.PathVariable"]
  },
  {
    "interfaces":["org.springframework.web.bind.annotation.RequestMapping"]
  },
  {
    "interfaces":["org.springframework.web.bind.annotation.RequestParam"]
  }
]
